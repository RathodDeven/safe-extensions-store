{
	"id": "00b031d24ad56f1eaf9bd276f03413dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"SafeProtocolRegistry.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.18;\r\nimport {ISafeProtocolRegistry} from \"./interfaces/Registry.sol\";\r\nimport {Ownable2Step} from \"./ownable/Ownable2Step.sol\";\r\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport {Enum} from \"./common/Enum.sol\";\r\nimport {ISafeProtocolFunctionHandler, ISafeProtocolHooks, ISafeProtocolPlugin} from \"./interfaces/Integrations.sol\";\r\n\r\ncontract SafeProtocolRegistry is ISafeProtocolRegistry, Ownable2Step {\r\n    mapping(address => IntegrationInfo) public listedIntegrations;\r\n\r\n    struct IntegrationInfo {\r\n        uint64 listedAt;\r\n        uint64 flaggedAt;\r\n        Enum.IntegrationType integrationType;\r\n    }\r\n\r\n    error CannotFlagIntegration(address integration);\r\n    error CannotAddIntegration(address integration);\r\n    error IntegrationDoesNotSupportExpectedInterfaceId(address integration, bytes4 expectedInterfaceId);\r\n\r\n    event IntegrationAdded(address indexed integration);\r\n    event IntegrationFlagged(address indexed integration);\r\n\r\n    constructor(address initialOwner) {\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @notice This function returns information about a integration\r\n     * @param integration Address of the integration to be checked\r\n     * @return listedAt Timestamp of listing the integration. This value will be 0 if not listed.\r\n     * @return flaggedAt Timestamp of falgging the integration. This value will be 0 if not flagged.\r\n     */\r\n    function check(address integration) external view returns (uint64 listedAt, uint64 flaggedAt) {\r\n        IntegrationInfo memory integrationInfo = listedIntegrations[integration];\r\n        listedAt = integrationInfo.listedAt;\r\n        flaggedAt = integrationInfo.flaggedAt;\r\n    }\r\n\r\n    /**\r\n     * @notice Allows only owner to add a integration. A integration can be any address including zero address for now.\r\n     *         This function does not permit adding a integration twice. This function validates if integration supports expected interfaceId.\r\n     * @param integration Address of the integration\r\n     * @param integrationType Enum.IntegrationType indicating the type of integration\r\n     */\r\n    function addIntegration(address integration, Enum.IntegrationType integrationType) external virtual onlyOwner {\r\n        IntegrationInfo memory integrationInfo = listedIntegrations[integration];\r\n\r\n        if (integrationInfo.listedAt != 0) {\r\n            revert CannotAddIntegration(integration);\r\n        }\r\n\r\n        // Check if integration supports expected interface\r\n        if (\r\n            integrationType == Enum.IntegrationType.Hooks && !IERC165(integration).supportsInterface(type(ISafeProtocolHooks).interfaceId)\r\n        ) {\r\n            revert IntegrationDoesNotSupportExpectedInterfaceId(integration, type(ISafeProtocolHooks).interfaceId);\r\n        } else if (\r\n            integrationType == Enum.IntegrationType.Plugin && !IERC165(integration).supportsInterface(type(ISafeProtocolPlugin).interfaceId)\r\n        ) {\r\n            revert IntegrationDoesNotSupportExpectedInterfaceId(integration, type(ISafeProtocolPlugin).interfaceId);\r\n        } else if (\r\n            integrationType == Enum.IntegrationType.FunctionHandler &&\r\n            !IERC165(integration).supportsInterface(type(ISafeProtocolFunctionHandler).interfaceId)\r\n        ) {\r\n            revert IntegrationDoesNotSupportExpectedInterfaceId(integration, type(ISafeProtocolFunctionHandler).interfaceId);\r\n        }\r\n\r\n        listedIntegrations[integration] = IntegrationInfo(uint64(block.timestamp), 0, integrationType);\r\n        emit IntegrationAdded(integration);\r\n    }\r\n\r\n    /**\r\n     * @notice Allows only owner to flad a integration. Only previously added integration can be flagged.\r\n     *         This function does not permit flagging a integration twice.\r\n     *         A integration can be any address including zero address for now.\r\n     * @param integration Address of the integration\r\n     */\r\n    function flagIntegration(address integration) external onlyOwner {\r\n        IntegrationInfo memory integrationInfo = listedIntegrations[integration];\r\n\r\n        if (integrationInfo.listedAt == 0 || integrationInfo.flaggedAt != 0) {\r\n            revert CannotFlagIntegration(integration);\r\n        }\r\n\r\n        listedIntegrations[integration] = IntegrationInfo(\r\n            integrationInfo.listedAt,\r\n            uint64(block.timestamp),\r\n            integrationInfo.integrationType\r\n        );\r\n        emit IntegrationFlagged(integration);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool) {\r\n        return interfaceId == type(ISafeProtocolRegistry).interfaceId || interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"interfaces/Integrations.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity ^0.8.18;\nimport {SafeTransaction, SafeRootAccess} from \"../DataTypes.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title ISafeProtocolFunctionHandler - An interface that a Safe function handler should implement to handle static calls.\n * @notice In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.\n *         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe\n *         and enable the contract implementing ISafeProtocolFunctionHandler interface as a function handler in the\n *         SafeProtocolManager for the specific function identifier.\n */\ninterface ISafeProtocolFunctionHandler is IERC165 {\n    /**\n     * @notice Handles calls to the Safe contract forwarded by the fallback function.\n     * @param safe A Safe instance\n     * @param sender Address of the sender\n     * @param value Amount of ETH\n     * @param data Arbitrary length bytes\n     * @return result Arbitrary length bytes containing result of the operation\n     */\n    function handle(address safe, address sender, uint256 value, bytes calldata data) external returns (bytes memory result);\n\n    /**\n     * @notice A function that returns information about the type of metadata provider and its location.\n     *         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\n     * @return providerType uint256 Type of metadata provider\n     * @return location bytes\n     */\n    function metadataProvider() external view returns (uint256 providerType, bytes memory location);\n}\n\n/**\n * @title ISafeProtocolStaticFunctionHandler - An interface that a Safe functionhandler should implement in case when handling static calls\n * @notice In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.\n *         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe\n *         and enable the contract implementing ISafeProtocolStaticFunctionHandler interface as a function handler in the\n *         SafeProtocolManager for the specific function identifier.\n */\ninterface ISafeProtocolStaticFunctionHandler is IERC165 {\n    /**\n     * @notice Handles static calls to the Safe contract forwarded by the fallback function.\n     * @param safe A Safe instance\n     * @param sender Address of the sender\n     * @param value Amount of ETH\n     * @param data Arbitrary length bytes\n     * @return result Arbitrary length bytes containing result of the operation\n     */\n    function handle(address safe, address sender, uint256 value, bytes calldata data) external view returns (bytes memory result);\n\n    /**\n     * @notice A function that returns information about the type of metadata provider and its location.\n     *         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\n     * @return providerType uint256 Type of metadata provider\n     * @return location bytes\n     */\n    function metadataProvider() external view returns (uint256 providerType, bytes memory location);\n}\n\n/**\n * @title ISafeProtocolHooks - An interface that a contract should implement to be enabled as hooks.\n * @notice In Safe{Core} Protocol, hooks can approve or deny transactions based on the logic it implements.\n */\ninterface ISafeProtocolHooks is IERC165 {\n    /**\n     * @notice A function that will be called by a Safe before the execution of a transaction if the hooks are enabled\n     * @dev Add custom logic in this function to validate the pre-state and contents of transaction for non-root access.\n     * @param safe A Safe instance\n     * @param tx A struct of type SafeTransaction that contains the details of the transaction.\n     * @param executionType uint256\n     * @param executionMeta Arbitrary length of bytes\n     * @return preCheckData bytes\n     */\n    function preCheck(\n        address safe,\n        SafeTransaction calldata tx,\n        uint256 executionType,\n        bytes calldata executionMeta\n    ) external returns (bytes memory preCheckData);\n\n    /**\n     * @notice A function that will be called by a safe before the execution of a transaction if the hooks are enabled and\n     *         transaction requies tool access.\n     * @dev Add custom logic in this function to validate the pre-state and contents of transaction for root access.\n     * @param safe A Safe instance\n     * @param rootAccess DataTypes.SafeRootAccess\n     * @param executionType uint256\n     * @param executionMeta bytes\n     * @return preCheckData bytes\n     */\n    function preCheckRootAccess(\n        address safe,\n        SafeRootAccess calldata rootAccess,\n        uint256 executionType,\n        bytes calldata executionMeta\n    ) external returns (bytes memory preCheckData);\n\n    /**\n     * @notice A function that will be called by a safe after the execution of a transaction if the hooks are enabled. Hooks should revert if the post state of after the transaction is not as expected.\n     * @dev Add custom logic in this function to validate the post-state after the transaction is executed.\n     * @param safe ISafe\n     * @param success bool\n     * @param preCheckData Arbitrary length bytes that was returned by during pre-check of the transaction.\n     */\n    function postCheck(address safe, bool success, bytes calldata preCheckData) external;\n}\n\n/**\n * @title ISafeProtocolPlugin - An interface that a Safe plugin should implement\n */\ninterface ISafeProtocolPlugin is IERC165 {\n    /**\n     * @notice A funtion that returns name of the plugin\n     * @return name string name of the plugin\n     */\n    function name() external view returns (string memory name);\n\n    /**\n     * @notice A function that returns version of the plugin\n     * @return version string version of the plugin\n     */\n    function version() external view returns (string memory version);\n\n    /**\n     * @notice A function that returns information about the type of metadata provider and its location.\n     *         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\n     * @return providerType uint256 Type of metadata provider\n     * @return location bytes\n     */\n    function metadataProvider() external view returns (uint256 providerType, bytes memory location);\n\n    /**\n     * @notice A function that indicates if the plugin requires root access to a Safe.\n     * @return requiresRootAccess True if root access is required, false otherwise.\n     */\n    function requiresRootAccess() external view returns (bool requiresRootAccess);\n}\n"
			},
			"common/Enum.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.18;\r\n\r\nabstract contract Enum {\r\n    enum IntegrationType {\r\n        Plugin,\r\n        Hooks,\r\n        FunctionHandler\r\n    }\r\n\r\n    /**\r\n     * @title Enum - Collection of enums used in Safe contracts.\r\n     * @dev Source: https://github.com/safe-global/safe-contracts/blob/7d767973bd21e2d621a4895fdaf9524132efc2f9/contracts/common/Enum.sol#L8\r\n     */\r\n    enum Operation {\r\n        Call,\r\n        DelegateCall\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"ownable/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Ownable.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership} and {acceptOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available all functions\r\n * from parent (Ownable).\r\n */\r\nabstract contract Ownable2Step is Ownable {\r\n    address private _pendingOwner;\r\n\r\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Returns the address of the pending owner.\r\n     */\r\n    function pendingOwner() public view virtual returns (address) {\r\n        return _pendingOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\r\n        _pendingOwner = newOwner;\r\n        emit OwnershipTransferStarted(owner(), newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual override {\r\n        delete _pendingOwner;\r\n        super._transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev The new owner accepts the ownership transfer.\r\n     */\r\n    function acceptOwnership() public virtual {\r\n        address sender = _msgSender();\r\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\r\n        _transferOwnership(sender);\r\n    }\r\n}\r\n"
			},
			"interfaces/Registry.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.18;\r\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\n\r\ninterface ISafeProtocolRegistry is IERC165 {\r\n    /// @param integration Address of the integration that should be checked\r\n    /// @return listedAt MUST return the block number when the integration was listed in the registry (or 0 if not listed)\r\n    /// @return flaggedAt MUST return the block number when the integration was listed in the flagged as faulty (or 0 if not flagged)\r\n    function check(address integration) external view returns (uint64 listedAt, uint64 flaggedAt);\r\n}\r\n"
			},
			"ownable/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"DataTypes.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.18;\r\n\r\nstruct SafeProtocolAction {\r\n    address payable to;\r\n    uint256 value;\r\n    bytes data;\r\n}\r\n\r\nstruct SafeTransaction {\r\n    SafeProtocolAction[] actions;\r\n    uint256 nonce;\r\n    bytes32 metadataHash;\r\n}\r\n\r\nstruct SafeRootAccess {\r\n    SafeProtocolAction action;\r\n    uint256 nonce;\r\n    bytes32 metadataHash;\r\n}\r\n"
			},
			"ownable/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeProtocolRegistry.sol": {
				"SafeProtocolRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "CannotAddIntegration",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "CannotFlagIntegration",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "expectedInterfaceId",
									"type": "bytes4"
								}
							],
							"name": "IntegrationDoesNotSupportExpectedInterfaceId",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "IntegrationAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "IntegrationFlagged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								},
								{
									"internalType": "enum Enum.IntegrationType",
									"name": "integrationType",
									"type": "uint8"
								}
							],
							"name": "addIntegration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "check",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "listedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "flaggedAt",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "flagIntegration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "listedIntegrations",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "listedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "flaggedAt",
									"type": "uint64"
								},
								{
									"internalType": "enum Enum.IntegrationType",
									"name": "integrationType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"addIntegration(address,uint8)": {
								"params": {
									"integration": "Address of the integration",
									"integrationType": "Enum.IntegrationType indicating the type of integration"
								}
							},
							"check(address)": {
								"params": {
									"integration": "Address of the integration to be checked"
								},
								"returns": {
									"flaggedAt": "Timestamp of falgging the integration. This value will be 0 if not flagged.",
									"listedAt": "Timestamp of listing the integration. This value will be 0 if not listed."
								}
							},
							"flagIntegration(address)": {
								"params": {
									"integration": "Address of the integration"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeProtocolRegistry.sol\":436:4784  contract SafeProtocolRegistry is ISafeProtocolRegistry, Ownable2Step {... */\n  mstore(0x40, 0x80)\n    /* \"SafeProtocolRegistry.sol\":1058:1143  constructor(address initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ownable/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"ownable/Ownable.sol\":976:988  _msgSender() */\n  tag_8\n    /* \"ownable/Ownable.sol\":976:986  _msgSender */\n  shl(0x20, tag_9)\n    /* \"ownable/Ownable.sol\":976:988  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"ownable/Ownable.sol\":957:975  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"ownable/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"SafeProtocolRegistry.sol\":1103:1135  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"SafeProtocolRegistry.sol\":1122:1134  initialOwner */\n  dup2\n    /* \"SafeProtocolRegistry.sol\":1103:1121  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"SafeProtocolRegistry.sol\":1103:1135  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"SafeProtocolRegistry.sol\":1058:1143  constructor(address initialOwner) {... */\n  pop\n    /* \"SafeProtocolRegistry.sol\":436:4784  contract SafeProtocolRegistry is ISafeProtocolRegistry, Ownable2Step {... */\n  jump(tag_13)\n    /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"ownable/Context.sol\":709:716  address */\n  0x00\n    /* \"ownable/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"ownable/Context.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\ntag_10:\n    /* \"ownable/Ownable2Step.sol\":1634:1647  _pendingOwner */\n  0x01\n  0x00\n    /* \"ownable/Ownable2Step.sol\":1627:1647  delete _pendingOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n    /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n  tag_16\n    /* \"ownable/Ownable2Step.sol\":1683:1691  newOwner */\n  dup2\n    /* \"ownable/Ownable2Step.sol\":1658:1682  super._transferOwnership */\n  shl(0x20, tag_17)\n    /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\n  pop\n  jump\t// out\n    /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"ownable/Ownable.sol\":2570:2586  address oldOwner */\n  0x00\n    /* \"ownable/Ownable.sol\":2589:2595  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ownable/Ownable.sol\":2570:2595  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"ownable/Ownable.sol\":2615:2623  newOwner */\n  dup2\n    /* \"ownable/Ownable.sol\":2606:2612  _owner */\n  0x00\n  dup1\n    /* \"ownable/Ownable.sol\":2606:2623  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ownable/Ownable.sol\":2670:2678  newOwner */\n  dup2\n    /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ownable/Ownable.sol\":2660:2668  oldOwner */\n  dup2\n    /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ownable/Ownable.sol\":2559:2687  {... */\n  pop\n    /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":932:1051   */\ntag_39:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_41\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SafeProtocolRegistry.sol\":436:4784  contract SafeProtocolRegistry is ISafeProtocolRegistry, Ownable2Step {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeProtocolRegistry.sol\":436:4784  contract SafeProtocolRegistry is ISafeProtocolRegistry, Ownable2Step {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc23697a8\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xc23697a8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe71d097b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe8828ea3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x77e41fe9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SafeProtocolRegistry.sol\":4572:4781  function supportsInterface(bytes4 interfaceId) external view override returns (bool) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"SafeProtocolRegistry.sol\":4016:4564  function flagIntegration(address integration) external onlyOwner {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"ownable/Ownable2Step.sol\":1785:2001  function acceptOwnership() public virtual {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"ownable/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SafeProtocolRegistry.sol\":1508:1787  function check(address integration) external view returns (uint64 listedAt, uint64 flaggedAt) {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable/Ownable2Step.sol\":873:974  function pendingOwner() public view virtual returns (address) {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SafeProtocolRegistry.sol\":2219:3672  function addIntegration(address integration, Enum.IntegrationType integrationType) external virtual onlyOwner {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"SafeProtocolRegistry.sol\":512:573  mapping(address => IntegrationInfo) public listedIntegrations */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable/Ownable2Step.sol\":1173:1354  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"SafeProtocolRegistry.sol\":4572:4781  function supportsInterface(bytes4 interfaceId) external view override returns (bool) {... */\n    tag_17:\n        /* \"SafeProtocolRegistry.sol\":4651:4655  bool */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":4690:4729  type(ISafeProtocolRegistry).interfaceId */\n      0xc23697a800000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":4675:4729  interfaceId == type(ISafeProtocolRegistry).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"SafeProtocolRegistry.sol\":4675:4686  interfaceId */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":4675:4729  interfaceId == type(ISafeProtocolRegistry).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"SafeProtocolRegistry.sol\":4675:4773  interfaceId == type(ISafeProtocolRegistry).interfaceId || interfaceId == type(IERC165).interfaceId */\n      dup1\n      tag_53\n      jumpi\n      pop\n        /* \"SafeProtocolRegistry.sol\":4748:4773  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":4733:4773  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"SafeProtocolRegistry.sol\":4733:4744  interfaceId */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":4733:4773  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"SafeProtocolRegistry.sol\":4675:4773  interfaceId == type(ISafeProtocolRegistry).interfaceId || interfaceId == type(IERC165).interfaceId */\n    tag_53:\n        /* \"SafeProtocolRegistry.sol\":4668:4773  return interfaceId == type(ISafeProtocolRegistry).interfaceId || interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"SafeProtocolRegistry.sol\":4572:4781  function supportsInterface(bytes4 interfaceId) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ownable/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_55\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_56\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_55:\n        /* \"ownable/Ownable.sol\":1942:1972  _transferOwnership(address(0)) */\n      tag_58\n        /* \"ownable/Ownable.sol\":1969:1970  0 */\n      0x00\n        /* \"ownable/Ownable.sol\":1942:1960  _transferOwnership */\n      tag_59\n        /* \"ownable/Ownable.sol\":1942:1972  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_58:\n        /* \"ownable/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SafeProtocolRegistry.sol\":4016:4564  function flagIntegration(address integration) external onlyOwner {... */\n    tag_25:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_61\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_56\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"SafeProtocolRegistry.sol\":4092:4130  IntegrationInfo memory integrationInfo */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":4133:4151  listedIntegrations */\n      0x02\n        /* \"SafeProtocolRegistry.sol\":4133:4164  listedIntegrations[integration] */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":4152:4163  integration */\n      dup4\n        /* \"SafeProtocolRegistry.sol\":4133:4164  listedIntegrations[integration] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SafeProtocolRegistry.sol\":4092:4164  IntegrationInfo memory integrationInfo = listedIntegrations[integration] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n    tag_63:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      tag_67\n      tag_65\n      jump\t// in\n    tag_67:\n    tag_66:\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SafeProtocolRegistry.sol\":4209:4210  0 */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":4181:4196  integrationInfo */\n      dup2\n        /* \"SafeProtocolRegistry.sol\":4181:4205  integrationInfo.listedAt */\n      0x00\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":4181:4210  integrationInfo.listedAt == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"SafeProtocolRegistry.sol\":4181:4244  integrationInfo.listedAt == 0 || integrationInfo.flaggedAt != 0 */\n      dup1\n      tag_68\n      jumpi\n      pop\n        /* \"SafeProtocolRegistry.sol\":4243:4244  0 */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":4214:4229  integrationInfo */\n      dup2\n        /* \"SafeProtocolRegistry.sol\":4214:4239  integrationInfo.flaggedAt */\n      0x20\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":4214:4244  integrationInfo.flaggedAt != 0 */\n      0xffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"SafeProtocolRegistry.sol\":4181:4244  integrationInfo.listedAt == 0 || integrationInfo.flaggedAt != 0 */\n    tag_68:\n        /* \"SafeProtocolRegistry.sol\":4177:4314  if (integrationInfo.listedAt == 0 || integrationInfo.flaggedAt != 0) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"SafeProtocolRegistry.sol\":4290:4301  integration */\n      dup2\n        /* \"SafeProtocolRegistry.sol\":4268:4302  CannotFlagIntegration(integration) */\n      mload(0x40)\n      0x3bee038a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SafeProtocolRegistry.sol\":4177:4314  if (integrationInfo.listedAt == 0 || integrationInfo.flaggedAt != 0) {... */\n    tag_69:\n        /* \"SafeProtocolRegistry.sol\":4360:4509  IntegrationInfo(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"SafeProtocolRegistry.sol\":4390:4405  integrationInfo */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":4390:4414  integrationInfo.listedAt */\n      0x00\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":4360:4509  IntegrationInfo(... */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SafeProtocolRegistry.sol\":4436:4451  block.timestamp */\n      timestamp\n        /* \"SafeProtocolRegistry.sol\":4360:4509  IntegrationInfo(... */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SafeProtocolRegistry.sol\":4467:4482  integrationInfo */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":4467:4498  integrationInfo.integrationType */\n      0x40\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":4360:4509  IntegrationInfo(... */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      tag_72\n      tag_65\n      jump\t// in\n    tag_72:\n    tag_71:\n      dup2\n      mstore\n      pop\n        /* \"SafeProtocolRegistry.sol\":4326:4344  listedIntegrations */\n      0x02\n        /* \"SafeProtocolRegistry.sol\":4326:4357  listedIntegrations[integration] */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":4345:4356  integration */\n      dup5\n        /* \"SafeProtocolRegistry.sol\":4326:4357  listedIntegrations[integration] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SafeProtocolRegistry.sol\":4326:4509  listedIntegrations[integration] = IntegrationInfo(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_73\n      jumpi\n      tag_74\n      tag_65\n      jump\t// in\n    tag_74:\n    tag_73:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"SafeProtocolRegistry.sol\":4544:4555  integration */\n      dup2\n        /* \"SafeProtocolRegistry.sol\":4525:4556  IntegrationFlagged(integration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7e4b225e43d112f7188b3064745a2e7988701d3816dee2b4613507ffaff6b302\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SafeProtocolRegistry.sol\":4081:4564  {... */\n      pop\n        /* \"SafeProtocolRegistry.sol\":4016:4564  function flagIntegration(address integration) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":1785:2001  function acceptOwnership() public virtual {... */\n    tag_27:\n        /* \"ownable/Ownable2Step.sol\":1838:1852  address sender */\n      0x00\n        /* \"ownable/Ownable2Step.sol\":1855:1867  _msgSender() */\n      tag_76\n        /* \"ownable/Ownable2Step.sol\":1855:1865  _msgSender */\n      tag_77\n        /* \"ownable/Ownable2Step.sol\":1855:1867  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"ownable/Ownable2Step.sol\":1838:1867  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"ownable/Ownable2Step.sol\":1904:1910  sender */\n      dup1\n        /* \"ownable/Ownable2Step.sol\":1886:1910  pendingOwner() == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable2Step.sol\":1886:1900  pendingOwner() */\n      tag_78\n        /* \"ownable/Ownable2Step.sol\":1886:1898  pendingOwner */\n      tag_38\n        /* \"ownable/Ownable2Step.sol\":1886:1900  pendingOwner() */\n      jump\t// in\n    tag_78:\n        /* \"ownable/Ownable2Step.sol\":1886:1910  pendingOwner() == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ownable/Ownable2Step.sol\":1878:1956  require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"ownable/Ownable2Step.sol\":1967:1993  _transferOwnership(sender) */\n      tag_82\n        /* \"ownable/Ownable2Step.sol\":1986:1992  sender */\n      dup2\n        /* \"ownable/Ownable2Step.sol\":1967:1985  _transferOwnership */\n      tag_59\n        /* \"ownable/Ownable2Step.sol\":1967:1993  _transferOwnership(sender) */\n      jump\t// in\n    tag_82:\n        /* \"ownable/Ownable2Step.sol\":1827:2001  {... */\n      pop\n        /* \"ownable/Ownable2Step.sol\":1785:2001  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"ownable/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"ownable/Ownable.sol\":1282:1289  address */\n      0x00\n        /* \"ownable/Ownable.sol\":1309:1315  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":1302:1315  return _owner */\n      swap1\n      pop\n        /* \"ownable/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SafeProtocolRegistry.sol\":1508:1787  function check(address integration) external view returns (uint64 listedAt, uint64 flaggedAt) {... */\n    tag_34:\n        /* \"SafeProtocolRegistry.sol\":1567:1582  uint64 listedAt */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":1584:1600  uint64 flaggedAt */\n      dup1\n        /* \"SafeProtocolRegistry.sol\":1613:1651  IntegrationInfo memory integrationInfo */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":1654:1672  listedIntegrations */\n      0x02\n        /* \"SafeProtocolRegistry.sol\":1654:1685  listedIntegrations[integration] */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":1673:1684  integration */\n      dup6\n        /* \"SafeProtocolRegistry.sol\":1654:1685  listedIntegrations[integration] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SafeProtocolRegistry.sol\":1613:1685  IntegrationInfo memory integrationInfo = listedIntegrations[integration] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_86\n      tag_65\n      jump\t// in\n    tag_86:\n    tag_85:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_88\n      tag_65\n      jump\t// in\n    tag_88:\n    tag_87:\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SafeProtocolRegistry.sol\":1707:1722  integrationInfo */\n      dup1\n        /* \"SafeProtocolRegistry.sol\":1707:1731  integrationInfo.listedAt */\n      0x00\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":1696:1731  listedAt = integrationInfo.listedAt */\n      swap3\n      pop\n        /* \"SafeProtocolRegistry.sol\":1754:1769  integrationInfo */\n      dup1\n        /* \"SafeProtocolRegistry.sol\":1754:1779  integrationInfo.flaggedAt */\n      0x20\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":1742:1779  flaggedAt = integrationInfo.flaggedAt */\n      swap2\n      pop\n        /* \"SafeProtocolRegistry.sol\":1602:1787  {... */\n      pop\n        /* \"SafeProtocolRegistry.sol\":1508:1787  function check(address integration) external view returns (uint64 listedAt, uint64 flaggedAt) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":873:974  function pendingOwner() public view virtual returns (address) {... */\n    tag_38:\n        /* \"ownable/Ownable2Step.sol\":926:933  address */\n      0x00\n        /* \"ownable/Ownable2Step.sol\":953:966  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable2Step.sol\":946:966  return _pendingOwner */\n      swap1\n      pop\n        /* \"ownable/Ownable2Step.sol\":873:974  function pendingOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SafeProtocolRegistry.sol\":2219:3672  function addIntegration(address integration, Enum.IntegrationType integrationType) external virtual onlyOwner {... */\n    tag_43:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_91\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_56\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"SafeProtocolRegistry.sol\":2340:2378  IntegrationInfo memory integrationInfo */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":2381:2399  listedIntegrations */\n      0x02\n        /* \"SafeProtocolRegistry.sol\":2381:2412  listedIntegrations[integration] */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":2400:2411  integration */\n      dup5\n        /* \"SafeProtocolRegistry.sol\":2381:2412  listedIntegrations[integration] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SafeProtocolRegistry.sol\":2340:2412  IntegrationInfo memory integrationInfo = listedIntegrations[integration] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_93\n      jumpi\n      tag_94\n      tag_65\n      jump\t// in\n    tag_94:\n    tag_93:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_95\n      jumpi\n      tag_96\n      tag_65\n      jump\t// in\n    tag_96:\n    tag_95:\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SafeProtocolRegistry.sol\":2457:2458  0 */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":2429:2444  integrationInfo */\n      dup2\n        /* \"SafeProtocolRegistry.sol\":2429:2453  integrationInfo.listedAt */\n      0x00\n      add\n      mload\n        /* \"SafeProtocolRegistry.sol\":2429:2458  integrationInfo.listedAt != 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"SafeProtocolRegistry.sol\":2425:2527  if (integrationInfo.listedAt != 0) {... */\n      tag_97\n      jumpi\n        /* \"SafeProtocolRegistry.sol\":2503:2514  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":2482:2515  CannotAddIntegration(integration) */\n      mload(0x40)\n      0x1bc90bc600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SafeProtocolRegistry.sol\":2425:2527  if (integrationInfo.listedAt != 0) {... */\n    tag_97:\n        /* \"SafeProtocolRegistry.sol\":2637:2663  Enum.IntegrationType.Hooks */\n      0x01\n        /* \"SafeProtocolRegistry.sol\":2618:2663  integrationType == Enum.IntegrationType.Hooks */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_100\n      tag_65\n      jump\t// in\n    tag_100:\n    tag_99:\n        /* \"SafeProtocolRegistry.sol\":2618:2633  integrationType */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":2618:2663  integrationType == Enum.IntegrationType.Hooks */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_101\n      jumpi\n      tag_102\n      tag_65\n      jump\t// in\n    tag_102:\n    tag_101:\n      eq\n        /* \"SafeProtocolRegistry.sol\":2618:2744  integrationType == Enum.IntegrationType.Hooks && !IERC165(integration).supportsInterface(type(ISafeProtocolHooks).interfaceId) */\n      dup1\n      iszero\n      tag_103\n      jumpi\n      pop\n        /* \"SafeProtocolRegistry.sol\":2676:2687  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":2668:2706  IERC165(integration).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"SafeProtocolRegistry.sol\":2707:2743  type(ISafeProtocolHooks).interfaceId */\n      0x907e1c5600000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":2668:2744  IERC165(integration).supportsInterface(type(ISafeProtocolHooks).interfaceId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"SafeProtocolRegistry.sol\":2667:2744  !IERC165(integration).supportsInterface(type(ISafeProtocolHooks).interfaceId) */\n      iszero\n        /* \"SafeProtocolRegistry.sol\":2618:2744  integrationType == Enum.IntegrationType.Hooks && !IERC165(integration).supportsInterface(type(ISafeProtocolHooks).interfaceId) */\n    tag_103:\n        /* \"SafeProtocolRegistry.sol\":2600:3513  if (... */\n      iszero\n      tag_110\n      jumpi\n        /* \"SafeProtocolRegistry.sol\":2823:2834  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":2836:2872  type(ISafeProtocolHooks).interfaceId */\n      0x907e1c5600000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":2778:2873  IntegrationDoesNotSupportExpectedInterfaceId(integration, type(ISafeProtocolHooks).interfaceId) */\n      mload(0x40)\n      0xbe98cdba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SafeProtocolRegistry.sol\":2600:3513  if (... */\n    tag_110:\n        /* \"SafeProtocolRegistry.sol\":2928:2955  Enum.IntegrationType.Plugin */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":2909:2955  integrationType == Enum.IntegrationType.Plugin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_114\n      jumpi\n      tag_115\n      tag_65\n      jump\t// in\n    tag_115:\n    tag_114:\n        /* \"SafeProtocolRegistry.sol\":2909:2924  integrationType */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":2909:2955  integrationType == Enum.IntegrationType.Plugin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_117\n      tag_65\n      jump\t// in\n    tag_117:\n    tag_116:\n      eq\n        /* \"SafeProtocolRegistry.sol\":2909:3037  integrationType == Enum.IntegrationType.Plugin && !IERC165(integration).supportsInterface(type(ISafeProtocolPlugin).interfaceId) */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"SafeProtocolRegistry.sol\":2968:2979  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":2960:2998  IERC165(integration).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"SafeProtocolRegistry.sol\":2999:3036  type(ISafeProtocolPlugin).interfaceId */\n      0x3fce835e00000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":2960:3037  IERC165(integration).supportsInterface(type(ISafeProtocolPlugin).interfaceId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_122:\n        /* \"SafeProtocolRegistry.sol\":2959:3037  !IERC165(integration).supportsInterface(type(ISafeProtocolPlugin).interfaceId) */\n      iszero\n        /* \"SafeProtocolRegistry.sol\":2909:3037  integrationType == Enum.IntegrationType.Plugin && !IERC165(integration).supportsInterface(type(ISafeProtocolPlugin).interfaceId) */\n    tag_118:\n        /* \"SafeProtocolRegistry.sol\":2891:3513  if (... */\n      iszero\n      tag_123\n      jumpi\n        /* \"SafeProtocolRegistry.sol\":3116:3127  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":3129:3166  type(ISafeProtocolPlugin).interfaceId */\n      0x3fce835e00000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":3071:3167  IntegrationDoesNotSupportExpectedInterfaceId(integration, type(ISafeProtocolPlugin).interfaceId) */\n      mload(0x40)\n      0xbe98cdba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SafeProtocolRegistry.sol\":2891:3513  if (... */\n    tag_123:\n        /* \"SafeProtocolRegistry.sol\":3222:3258  Enum.IntegrationType.FunctionHandler */\n      0x02\n        /* \"SafeProtocolRegistry.sol\":3203:3258  integrationType == Enum.IntegrationType.FunctionHandler */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_126\n      jumpi\n      tag_127\n      tag_65\n      jump\t// in\n    tag_127:\n    tag_126:\n        /* \"SafeProtocolRegistry.sol\":3203:3218  integrationType */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":3203:3258  integrationType == Enum.IntegrationType.FunctionHandler */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      tag_129\n      tag_65\n      jump\t// in\n    tag_129:\n    tag_128:\n      eq\n        /* \"SafeProtocolRegistry.sol\":3203:3362  integrationType == Enum.IntegrationType.FunctionHandler &&... */\n      dup1\n      iszero\n      tag_130\n      jumpi\n      pop\n        /* \"SafeProtocolRegistry.sol\":3284:3295  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":3276:3314  IERC165(integration).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"SafeProtocolRegistry.sol\":3315:3361  type(ISafeProtocolFunctionHandler).interfaceId */\n      0xf601ad1500000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":3276:3362  IERC165(integration).supportsInterface(type(ISafeProtocolFunctionHandler).interfaceId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_134:\n        /* \"SafeProtocolRegistry.sol\":3275:3362  !IERC165(integration).supportsInterface(type(ISafeProtocolFunctionHandler).interfaceId) */\n      iszero\n        /* \"SafeProtocolRegistry.sol\":3203:3362  integrationType == Enum.IntegrationType.FunctionHandler &&... */\n    tag_130:\n        /* \"SafeProtocolRegistry.sol\":3185:3513  if (... */\n      iszero\n      tag_135\n      jumpi\n        /* \"SafeProtocolRegistry.sol\":3441:3452  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":3454:3500  type(ISafeProtocolFunctionHandler).interfaceId */\n      0xf601ad1500000000000000000000000000000000000000000000000000000000\n        /* \"SafeProtocolRegistry.sol\":3396:3501  IntegrationDoesNotSupportExpectedInterfaceId(integration, type(ISafeProtocolFunctionHandler).interfaceId) */\n      mload(0x40)\n      0xbe98cdba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SafeProtocolRegistry.sol\":3185:3513  if (... */\n    tag_135:\n        /* \"SafeProtocolRegistry.sol\":3559:3619  IntegrationInfo(uint64(block.timestamp), 0, integrationType) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"SafeProtocolRegistry.sol\":3582:3597  block.timestamp */\n      timestamp\n        /* \"SafeProtocolRegistry.sol\":3559:3619  IntegrationInfo(uint64(block.timestamp), 0, integrationType) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SafeProtocolRegistry.sol\":3600:3601  0 */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":3559:3619  IntegrationInfo(uint64(block.timestamp), 0, integrationType) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SafeProtocolRegistry.sol\":3603:3618  integrationType */\n      dup4\n        /* \"SafeProtocolRegistry.sol\":3559:3619  IntegrationInfo(uint64(block.timestamp), 0, integrationType) */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      tag_138\n      tag_65\n      jump\t// in\n    tag_138:\n    tag_137:\n      dup2\n      mstore\n      pop\n        /* \"SafeProtocolRegistry.sol\":3525:3543  listedIntegrations */\n      0x02\n        /* \"SafeProtocolRegistry.sol\":3525:3556  listedIntegrations[integration] */\n      0x00\n        /* \"SafeProtocolRegistry.sol\":3544:3555  integration */\n      dup6\n        /* \"SafeProtocolRegistry.sol\":3525:3556  listedIntegrations[integration] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SafeProtocolRegistry.sol\":3525:3619  listedIntegrations[integration] = IntegrationInfo(uint64(block.timestamp), 0, integrationType) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_65\n      jump\t// in\n    tag_140:\n    tag_139:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"SafeProtocolRegistry.sol\":3652:3663  integration */\n      dup3\n        /* \"SafeProtocolRegistry.sol\":3635:3664  IntegrationAdded(integration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94c109d6a0f9d39b37ec79aa4e627154250f2c29adaf10079a79e29e95fefd62\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SafeProtocolRegistry.sol\":2329:3672  {... */\n      pop\n        /* \"SafeProtocolRegistry.sol\":2219:3672  function addIntegration(address integration, Enum.IntegrationType integrationType) external virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SafeProtocolRegistry.sol\":512:573  mapping(address => IntegrationInfo) public listedIntegrations */\n    tag_46:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":1173:1354  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_51:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_142\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_56\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"ownable/Ownable2Step.sol\":1279:1287  newOwner */\n      dup1\n        /* \"ownable/Ownable2Step.sol\":1263:1276  _pendingOwner */\n      0x01\n      0x00\n        /* \"ownable/Ownable2Step.sol\":1263:1287  _pendingOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownable/Ownable2Step.sol\":1337:1345  newOwner */\n      dup1\n        /* \"ownable/Ownable2Step.sol\":1303:1346  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable2Step.sol\":1328:1335  owner() */\n      tag_144\n        /* \"ownable/Ownable2Step.sol\":1328:1333  owner */\n      tag_29\n        /* \"ownable/Ownable2Step.sol\":1328:1335  owner() */\n      jump\t// in\n    tag_144:\n        /* \"ownable/Ownable2Step.sol\":1303:1346  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ownable/Ownable2Step.sol\":1173:1354  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ownable/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {... */\n    tag_56:\n        /* \"ownable/Ownable.sol\":1476:1488  _msgSender() */\n      tag_146\n        /* \"ownable/Ownable.sol\":1476:1486  _msgSender */\n      tag_77\n        /* \"ownable/Ownable.sol\":1476:1488  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"ownable/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":1465:1472  owner() */\n      tag_147\n        /* \"ownable/Ownable.sol\":1465:1470  owner */\n      tag_29\n        /* \"ownable/Ownable.sol\":1465:1472  owner() */\n      jump\t// in\n    tag_147:\n        /* \"ownable/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ownable/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"ownable/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_59:\n        /* \"ownable/Ownable2Step.sol\":1634:1647  _pendingOwner */\n      0x01\n      0x00\n        /* \"ownable/Ownable2Step.sol\":1627:1647  delete _pendingOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n      tag_152\n        /* \"ownable/Ownable2Step.sol\":1683:1691  newOwner */\n      dup2\n        /* \"ownable/Ownable2Step.sol\":1658:1682  super._transferOwnership */\n      tag_153\n        /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_152:\n        /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_77:\n        /* \"ownable/Context.sol\":709:716  address */\n      0x00\n        /* \"ownable/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ownable/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_153:\n        /* \"ownable/Ownable.sol\":2570:2586  address oldOwner */\n      0x00\n        /* \"ownable/Ownable.sol\":2589:2595  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":2570:2595  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"ownable/Ownable.sol\":2615:2623  newOwner */\n      dup2\n        /* \"ownable/Ownable.sol\":2606:2612  _owner */\n      0x00\n      dup1\n        /* \"ownable/Ownable.sol\":2606:2623  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownable/Ownable.sol\":2670:2678  newOwner */\n      dup2\n        /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":2660:2668  oldOwner */\n      dup2\n        /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ownable/Ownable.sol\":2559:2687  {... */\n      pop\n        /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_157:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_159:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_160:\n        /* \"#utility.yul\":561:584   */\n      tag_191\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_159\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_192:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_161:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_194\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_160\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_16:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_197\n      tag_157\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":833:952   */\n    tag_196:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_198\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_161\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_162:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_163:\n        /* \"#utility.yul\":1268:1289   */\n      tag_201\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_162\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_19:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_203\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_163\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_164:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_165:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_206\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_164\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_166:\n        /* \"#utility.yul\":1825:1849   */\n      tag_208\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_165\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_209:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_167:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_211\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_166\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_24:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_214\n      tag_157\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2101:2220   */\n    tag_213:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_215\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_167\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2478   */\n    tag_168:\n        /* \"#utility.yul\":2447:2471   */\n      tag_217\n        /* \"#utility.yul\":2465:2470   */\n      dup2\n        /* \"#utility.yul\":2447:2471   */\n      tag_165\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2442:2445   */\n      dup3\n        /* \"#utility.yul\":2435:2472   */\n      mstore\n        /* \"#utility.yul\":2360:2478   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2706   */\n    tag_31:\n        /* \"#utility.yul\":2577:2581   */\n      0x00\n        /* \"#utility.yul\":2615:2617   */\n      0x20\n        /* \"#utility.yul\":2604:2613   */\n      dup3\n        /* \"#utility.yul\":2600:2618   */\n      add\n        /* \"#utility.yul\":2592:2618   */\n      swap1\n      pop\n        /* \"#utility.yul\":2628:2699   */\n      tag_219\n        /* \"#utility.yul\":2696:2697   */\n      0x00\n        /* \"#utility.yul\":2685:2694   */\n      dup4\n        /* \"#utility.yul\":2681:2698   */\n      add\n        /* \"#utility.yul\":2672:2678   */\n      dup5\n        /* \"#utility.yul\":2628:2699   */\n      tag_168\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2484:2706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:2813   */\n    tag_169:\n        /* \"#utility.yul\":2748:2755   */\n      0x00\n        /* \"#utility.yul\":2788:2806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2781:2786   */\n      dup3\n        /* \"#utility.yul\":2777:2807   */\n      and\n        /* \"#utility.yul\":2766:2807   */\n      swap1\n      pop\n        /* \"#utility.yul\":2712:2813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2819:2934   */\n    tag_170:\n        /* \"#utility.yul\":2904:2927   */\n      tag_222\n        /* \"#utility.yul\":2921:2926   */\n      dup2\n        /* \"#utility.yul\":2904:2927   */\n      tag_169\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2899:2902   */\n      dup3\n        /* \"#utility.yul\":2892:2928   */\n      mstore\n        /* \"#utility.yul\":2819:2934   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2940:3264   */\n    tag_36:\n        /* \"#utility.yul\":3057:3061   */\n      0x00\n        /* \"#utility.yul\":3095:3097   */\n      0x40\n        /* \"#utility.yul\":3084:3093   */\n      dup3\n        /* \"#utility.yul\":3080:3098   */\n      add\n        /* \"#utility.yul\":3072:3098   */\n      swap1\n      pop\n        /* \"#utility.yul\":3108:3177   */\n      tag_224\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3159:3176   */\n      add\n        /* \"#utility.yul\":3150:3156   */\n      dup6\n        /* \"#utility.yul\":3108:3177   */\n      tag_170\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3187:3257   */\n      tag_225\n        /* \"#utility.yul\":3253:3255   */\n      0x20\n        /* \"#utility.yul\":3242:3251   */\n      dup4\n        /* \"#utility.yul\":3238:3256   */\n      add\n        /* \"#utility.yul\":3229:3235   */\n      dup5\n        /* \"#utility.yul\":3187:3257   */\n      tag_170\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2940:3264   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3388   */\n    tag_171:\n        /* \"#utility.yul\":3362:3363   */\n      0x03\n        /* \"#utility.yul\":3355:3360   */\n      dup2\n        /* \"#utility.yul\":3352:3364   */\n      lt\n        /* \"#utility.yul\":3342:3382   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3378:3379   */\n      0x00\n        /* \"#utility.yul\":3375:3376   */\n      dup1\n        /* \"#utility.yul\":3368:3380   */\n      revert\n        /* \"#utility.yul\":3342:3382   */\n    tag_227:\n        /* \"#utility.yul\":3270:3388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3571   */\n    tag_172:\n        /* \"#utility.yul\":3459:3464   */\n      0x00\n        /* \"#utility.yul\":3497:3503   */\n      dup2\n        /* \"#utility.yul\":3484:3504   */\n      calldataload\n        /* \"#utility.yul\":3475:3504   */\n      swap1\n      pop\n        /* \"#utility.yul\":3513:3565   */\n      tag_229\n        /* \"#utility.yul\":3559:3564   */\n      dup2\n        /* \"#utility.yul\":3513:3565   */\n      tag_171\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3394:3571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3577:4089   */\n    tag_42:\n        /* \"#utility.yul\":3664:3670   */\n      0x00\n        /* \"#utility.yul\":3672:3678   */\n      dup1\n        /* \"#utility.yul\":3721:3723   */\n      0x40\n        /* \"#utility.yul\":3709:3718   */\n      dup4\n        /* \"#utility.yul\":3700:3707   */\n      dup6\n        /* \"#utility.yul\":3696:3719   */\n      sub\n        /* \"#utility.yul\":3692:3724   */\n      slt\n        /* \"#utility.yul\":3689:3808   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3727:3806   */\n      tag_232\n      tag_157\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3689:3808   */\n    tag_231:\n        /* \"#utility.yul\":3847:3848   */\n      0x00\n        /* \"#utility.yul\":3872:3925   */\n      tag_233\n        /* \"#utility.yul\":3917:3924   */\n      dup6\n        /* \"#utility.yul\":3908:3914   */\n      dup3\n        /* \"#utility.yul\":3897:3906   */\n      dup7\n        /* \"#utility.yul\":3893:3915   */\n      add\n        /* \"#utility.yul\":3872:3925   */\n      tag_167\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3862:3925   */\n      swap3\n      pop\n        /* \"#utility.yul\":3818:3935   */\n      pop\n        /* \"#utility.yul\":3974:3976   */\n      0x20\n        /* \"#utility.yul\":4000:4072   */\n      tag_234\n        /* \"#utility.yul\":4064:4071   */\n      dup6\n        /* \"#utility.yul\":4055:4061   */\n      dup3\n        /* \"#utility.yul\":4044:4053   */\n      dup7\n        /* \"#utility.yul\":4040:4062   */\n      add\n        /* \"#utility.yul\":4000:4072   */\n      tag_172\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3990:4072   */\n      swap2\n      pop\n        /* \"#utility.yul\":3945:4082   */\n      pop\n        /* \"#utility.yul\":3577:4089   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4095:4275   */\n    tag_65:\n        /* \"#utility.yul\":4143:4220   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4140:4141   */\n      0x00\n        /* \"#utility.yul\":4133:4221   */\n      mstore\n        /* \"#utility.yul\":4240:4244   */\n      0x21\n        /* \"#utility.yul\":4237:4238   */\n      0x04\n        /* \"#utility.yul\":4230:4245   */\n      mstore\n        /* \"#utility.yul\":4264:4268   */\n      0x24\n        /* \"#utility.yul\":4261:4262   */\n      0x00\n        /* \"#utility.yul\":4254:4269   */\n      revert\n        /* \"#utility.yul\":4281:4405   */\n    tag_173:\n        /* \"#utility.yul\":4373:4374   */\n      0x03\n        /* \"#utility.yul\":4366:4371   */\n      dup2\n        /* \"#utility.yul\":4363:4375   */\n      lt\n        /* \"#utility.yul\":4353:4399   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":4379:4397   */\n      tag_238\n      tag_65\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4353:4399   */\n    tag_237:\n        /* \"#utility.yul\":4281:4405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4411:4560   */\n    tag_174:\n        /* \"#utility.yul\":4467:4474   */\n      0x00\n        /* \"#utility.yul\":4496:4501   */\n      dup2\n        /* \"#utility.yul\":4485:4501   */\n      swap1\n      pop\n        /* \"#utility.yul\":4502:4554   */\n      tag_240\n        /* \"#utility.yul\":4548:4553   */\n      dup3\n        /* \"#utility.yul\":4502:4554   */\n      tag_173\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4411:4560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4566:4715   */\n    tag_175:\n        /* \"#utility.yul\":4633:4642   */\n      0x00\n        /* \"#utility.yul\":4666:4709   */\n      tag_242\n        /* \"#utility.yul\":4703:4708   */\n      dup3\n        /* \"#utility.yul\":4666:4709   */\n      tag_174\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4653:4709   */\n      swap1\n      pop\n        /* \"#utility.yul\":4566:4715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4721:4886   */\n    tag_176:\n        /* \"#utility.yul\":4825:4879   */\n      tag_244\n        /* \"#utility.yul\":4873:4878   */\n      dup2\n        /* \"#utility.yul\":4825:4879   */\n      tag_175\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4820:4823   */\n      dup3\n        /* \"#utility.yul\":4813:4880   */\n      mstore\n        /* \"#utility.yul\":4721:4886   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4892:5360   */\n    tag_48:\n        /* \"#utility.yul\":5054:5058   */\n      0x00\n        /* \"#utility.yul\":5092:5094   */\n      0x60\n        /* \"#utility.yul\":5081:5090   */\n      dup3\n        /* \"#utility.yul\":5077:5095   */\n      add\n        /* \"#utility.yul\":5069:5095   */\n      swap1\n      pop\n        /* \"#utility.yul\":5105:5174   */\n      tag_246\n        /* \"#utility.yul\":5171:5172   */\n      0x00\n        /* \"#utility.yul\":5160:5169   */\n      dup4\n        /* \"#utility.yul\":5156:5173   */\n      add\n        /* \"#utility.yul\":5147:5153   */\n      dup7\n        /* \"#utility.yul\":5105:5174   */\n      tag_170\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5184:5254   */\n      tag_247\n        /* \"#utility.yul\":5250:5252   */\n      0x20\n        /* \"#utility.yul\":5239:5248   */\n      dup4\n        /* \"#utility.yul\":5235:5253   */\n      add\n        /* \"#utility.yul\":5226:5232   */\n      dup6\n        /* \"#utility.yul\":5184:5254   */\n      tag_170\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5264:5353   */\n      tag_248\n        /* \"#utility.yul\":5349:5351   */\n      0x40\n        /* \"#utility.yul\":5338:5347   */\n      dup4\n        /* \"#utility.yul\":5334:5352   */\n      add\n        /* \"#utility.yul\":5325:5331   */\n      dup5\n        /* \"#utility.yul\":5264:5353   */\n      tag_176\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4892:5360   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5366:5535   */\n    tag_177:\n        /* \"#utility.yul\":5450:5461   */\n      0x00\n        /* \"#utility.yul\":5484:5490   */\n      dup3\n        /* \"#utility.yul\":5479:5482   */\n      dup3\n        /* \"#utility.yul\":5472:5491   */\n      mstore\n        /* \"#utility.yul\":5524:5528   */\n      0x20\n        /* \"#utility.yul\":5519:5522   */\n      dup3\n        /* \"#utility.yul\":5515:5529   */\n      add\n        /* \"#utility.yul\":5500:5529   */\n      swap1\n      pop\n        /* \"#utility.yul\":5366:5535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5541:5769   */\n    tag_178:\n        /* \"#utility.yul\":5681:5715   */\n      0x4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520\n        /* \"#utility.yul\":5677:5678   */\n      0x00\n        /* \"#utility.yul\":5669:5675   */\n      dup3\n        /* \"#utility.yul\":5665:5679   */\n      add\n        /* \"#utility.yul\":5658:5716   */\n      mstore\n        /* \"#utility.yul\":5750:5761   */\n      0x6e6577206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5745:5747   */\n      0x20\n        /* \"#utility.yul\":5737:5743   */\n      dup3\n        /* \"#utility.yul\":5733:5748   */\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5541:5769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5775:6141   */\n    tag_179:\n        /* \"#utility.yul\":5917:5920   */\n      0x00\n        /* \"#utility.yul\":5938:6005   */\n      tag_252\n        /* \"#utility.yul\":6002:6004   */\n      0x29\n        /* \"#utility.yul\":5997:6000   */\n      dup4\n        /* \"#utility.yul\":5938:6005   */\n      tag_177\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5931:6005   */\n      swap2\n      pop\n        /* \"#utility.yul\":6014:6107   */\n      tag_253\n        /* \"#utility.yul\":6103:6106   */\n      dup3\n        /* \"#utility.yul\":6014:6107   */\n      tag_178\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6132:6134   */\n      0x40\n        /* \"#utility.yul\":6127:6130   */\n      dup3\n        /* \"#utility.yul\":6123:6135   */\n      add\n        /* \"#utility.yul\":6116:6135   */\n      swap1\n      pop\n        /* \"#utility.yul\":5775:6141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6147:6566   */\n    tag_81:\n        /* \"#utility.yul\":6313:6317   */\n      0x00\n        /* \"#utility.yul\":6351:6353   */\n      0x20\n        /* \"#utility.yul\":6340:6349   */\n      dup3\n        /* \"#utility.yul\":6336:6354   */\n      add\n        /* \"#utility.yul\":6328:6354   */\n      swap1\n      pop\n        /* \"#utility.yul\":6400:6409   */\n      dup2\n        /* \"#utility.yul\":6394:6398   */\n      dup2\n        /* \"#utility.yul\":6390:6410   */\n      sub\n        /* \"#utility.yul\":6386:6387   */\n      0x00\n        /* \"#utility.yul\":6375:6384   */\n      dup4\n        /* \"#utility.yul\":6371:6388   */\n      add\n        /* \"#utility.yul\":6364:6411   */\n      mstore\n        /* \"#utility.yul\":6428:6559   */\n      tag_255\n        /* \"#utility.yul\":6554:6558   */\n      dup2\n        /* \"#utility.yul\":6428:6559   */\n      tag_179\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6420:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6147:6566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6572:6687   */\n    tag_180:\n        /* \"#utility.yul\":6657:6680   */\n      tag_257\n        /* \"#utility.yul\":6674:6679   */\n      dup2\n        /* \"#utility.yul\":6657:6680   */\n      tag_159\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6652:6655   */\n      dup3\n        /* \"#utility.yul\":6645:6681   */\n      mstore\n        /* \"#utility.yul\":6572:6687   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:6911   */\n    tag_105:\n        /* \"#utility.yul\":6784:6788   */\n      0x00\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"#utility.yul\":6811:6820   */\n      dup3\n        /* \"#utility.yul\":6807:6825   */\n      add\n        /* \"#utility.yul\":6799:6825   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:6904   */\n      tag_259\n        /* \"#utility.yul\":6901:6902   */\n      0x00\n        /* \"#utility.yul\":6890:6899   */\n      dup4\n        /* \"#utility.yul\":6886:6903   */\n      add\n        /* \"#utility.yul\":6877:6883   */\n      dup5\n        /* \"#utility.yul\":6835:6904   */\n      tag_180\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6693:6911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7033   */\n    tag_181:\n        /* \"#utility.yul\":6987:7008   */\n      tag_261\n        /* \"#utility.yul\":7002:7007   */\n      dup2\n        /* \"#utility.yul\":6987:7008   */\n      tag_162\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6980:6985   */\n      dup2\n        /* \"#utility.yul\":6977:7009   */\n      eq\n        /* \"#utility.yul\":6967:7027   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":7023:7024   */\n      0x00\n        /* \"#utility.yul\":7020:7021   */\n      dup1\n        /* \"#utility.yul\":7013:7025   */\n      revert\n        /* \"#utility.yul\":6967:7027   */\n    tag_262:\n        /* \"#utility.yul\":6917:7033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7039:7176   */\n    tag_182:\n        /* \"#utility.yul\":7093:7098   */\n      0x00\n        /* \"#utility.yul\":7124:7130   */\n      dup2\n        /* \"#utility.yul\":7118:7131   */\n      mload\n        /* \"#utility.yul\":7109:7131   */\n      swap1\n      pop\n        /* \"#utility.yul\":7140:7170   */\n      tag_264\n        /* \"#utility.yul\":7164:7169   */\n      dup2\n        /* \"#utility.yul\":7140:7170   */\n      tag_181\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7039:7176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7182:7527   */\n    tag_109:\n        /* \"#utility.yul\":7249:7255   */\n      0x00\n        /* \"#utility.yul\":7298:7300   */\n      0x20\n        /* \"#utility.yul\":7286:7295   */\n      dup3\n        /* \"#utility.yul\":7277:7284   */\n      dup5\n        /* \"#utility.yul\":7273:7296   */\n      sub\n        /* \"#utility.yul\":7269:7301   */\n      slt\n        /* \"#utility.yul\":7266:7385   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":7304:7383   */\n      tag_267\n      tag_157\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7266:7385   */\n    tag_266:\n        /* \"#utility.yul\":7424:7425   */\n      0x00\n        /* \"#utility.yul\":7449:7510   */\n      tag_268\n        /* \"#utility.yul\":7502:7509   */\n      dup5\n        /* \"#utility.yul\":7493:7499   */\n      dup3\n        /* \"#utility.yul\":7482:7491   */\n      dup6\n        /* \"#utility.yul\":7478:7500   */\n      add\n        /* \"#utility.yul\":7449:7510   */\n      tag_182\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7439:7510   */\n      swap2\n      pop\n        /* \"#utility.yul\":7395:7520   */\n      pop\n        /* \"#utility.yul\":7182:7527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7533:7861   */\n    tag_112:\n        /* \"#utility.yul\":7652:7656   */\n      0x00\n        /* \"#utility.yul\":7690:7692   */\n      0x40\n        /* \"#utility.yul\":7679:7688   */\n      dup3\n        /* \"#utility.yul\":7675:7693   */\n      add\n        /* \"#utility.yul\":7667:7693   */\n      swap1\n      pop\n        /* \"#utility.yul\":7703:7774   */\n      tag_270\n        /* \"#utility.yul\":7771:7772   */\n      0x00\n        /* \"#utility.yul\":7760:7769   */\n      dup4\n        /* \"#utility.yul\":7756:7773   */\n      add\n        /* \"#utility.yul\":7747:7753   */\n      dup6\n        /* \"#utility.yul\":7703:7774   */\n      tag_168\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7784:7854   */\n      tag_271\n        /* \"#utility.yul\":7850:7852   */\n      0x20\n        /* \"#utility.yul\":7839:7848   */\n      dup4\n        /* \"#utility.yul\":7835:7853   */\n      add\n        /* \"#utility.yul\":7826:7832   */\n      dup5\n        /* \"#utility.yul\":7784:7854   */\n      tag_180\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7533:7861   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7867:8049   */\n    tag_183:\n        /* \"#utility.yul\":8007:8041   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8003:8004   */\n      0x00\n        /* \"#utility.yul\":7995:8001   */\n      dup3\n        /* \"#utility.yul\":7991:8005   */\n      add\n        /* \"#utility.yul\":7984:8042   */\n      mstore\n        /* \"#utility.yul\":7867:8049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8421   */\n    tag_184:\n        /* \"#utility.yul\":8197:8200   */\n      0x00\n        /* \"#utility.yul\":8218:8285   */\n      tag_274\n        /* \"#utility.yul\":8282:8284   */\n      0x20\n        /* \"#utility.yul\":8277:8280   */\n      dup4\n        /* \"#utility.yul\":8218:8285   */\n      tag_177\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8211:8285   */\n      swap2\n      pop\n        /* \"#utility.yul\":8294:8387   */\n      tag_275\n        /* \"#utility.yul\":8383:8386   */\n      dup3\n        /* \"#utility.yul\":8294:8387   */\n      tag_183\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8407:8410   */\n      dup3\n        /* \"#utility.yul\":8403:8415   */\n      add\n        /* \"#utility.yul\":8396:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8055:8421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8427:8846   */\n    tag_150:\n        /* \"#utility.yul\":8593:8597   */\n      0x00\n        /* \"#utility.yul\":8631:8633   */\n      0x20\n        /* \"#utility.yul\":8620:8629   */\n      dup3\n        /* \"#utility.yul\":8616:8634   */\n      add\n        /* \"#utility.yul\":8608:8634   */\n      swap1\n      pop\n        /* \"#utility.yul\":8680:8689   */\n      dup2\n        /* \"#utility.yul\":8674:8678   */\n      dup2\n        /* \"#utility.yul\":8670:8690   */\n      sub\n        /* \"#utility.yul\":8666:8667   */\n      0x00\n        /* \"#utility.yul\":8655:8664   */\n      dup4\n        /* \"#utility.yul\":8651:8668   */\n      add\n        /* \"#utility.yul\":8644:8691   */\n      mstore\n        /* \"#utility.yul\":8708:8839   */\n      tag_277\n        /* \"#utility.yul\":8834:8838   */\n      dup2\n        /* \"#utility.yul\":8708:8839   */\n      tag_184\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8700:8839   */\n      swap1\n      pop\n        /* \"#utility.yul\":8427:8846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207901167a7fa6ad54526b57ae410849c97af8730f4ebdafb679037c2e171165ea64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_100": {
									"entryPoint": null,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_535": {
									"entryPoint": null,
									"id": 535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_501": {
									"entryPoint": 111,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_623": {
									"entryPoint": 176,
									"id": 623,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_684": {
									"entryPoint": 119,
									"id": 684,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001701380380620017018339818101604052810190620000379190620001de565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200007760201b60201c565b5062000210565b600033905090565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055620000ad81620000b060201b60201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a68262000179565b9050919050565b620001b88162000199565b8114620001c457600080fd5b50565b600081519050620001d881620001ad565b92915050565b600060208284031215620001f757620001f662000174565b5b60006200020784828501620001c7565b91505092915050565b6114e180620002206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c23697a811610066578063c23697a814610121578063e30c397814610152578063e71d097b14610170578063e8828ea31461018c578063f2fde38b146101be5761009e565b806301ffc9a7146100a3578063715018a6146100d357806377e41fe9146100dd57806379ba5097146100f95780638da5cb5b14610103575b600080fd5b6100bd60048036038101906100b89190611079565b6101da565b6040516100ca91906110c1565b60405180910390f35b6100db6102ac565b005b6100f760048036038101906100f2919061113a565b6102c0565b005b610101610583565b005b61010b610610565b6040516101189190611176565b60405180910390f35b61013b6004803603810190610136919061113a565b610639565b6040516101499291906111b4565b60405180910390f35b61015a61073d565b6040516101679190611176565b60405180910390f35b61018a60048036038101906101859190611202565b610767565b005b6101a660048036038101906101a1919061113a565b610d95565b6040516101b5939291906112b9565b60405180910390f35b6101d860048036038101906101d3919061113a565b610df4565b005b60007fc23697a8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102a557507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6102b4610ea1565b6102be6000610f1f565b565b6102c8610ea1565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900460ff16600281111561039d5761039c611242565b5b60028111156103af576103ae611242565b5b8152505090506000816000015167ffffffffffffffff1614806103e157506000816020015167ffffffffffffffff1614155b1561042357816040517f3bee038a00000000000000000000000000000000000000000000000000000000815260040161041a9190611176565b60405180910390fd5b6040518060600160405280826000015167ffffffffffffffff1681526020014267ffffffffffffffff1681526020018260400151600281111561046957610468611242565b5b815250600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548160ff0219169083600281111561053457610533611242565b5b02179055509050508173ffffffffffffffffffffffffffffffffffffffff167f7e4b225e43d112f7188b3064745a2e7988701d3816dee2b4613507ffaff6b30260405160405180910390a25050565b600061058d610f50565b90508073ffffffffffffffffffffffffffffffffffffffff166105ae61073d565b73ffffffffffffffffffffffffffffffffffffffff1614610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90611373565b60405180910390fd5b61060d81610f1f565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900460ff16600281111561071157610710611242565b5b600281111561072357610722611242565b5b815250509050806000015192508060200151915050915091565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61076f610ea1565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900460ff16600281111561084457610843611242565b5b600281111561085657610855611242565b5b8152505090506000816000015167ffffffffffffffff16146108af57826040517f1bc90bc60000000000000000000000000000000000000000000000000000000081526004016108a69190611176565b60405180910390fd5b600160028111156108c3576108c2611242565b5b8260028111156108d6576108d5611242565b5b14801561097a57508273ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f907e1c56000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161093791906113a2565b602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097891906113e9565b155b156109de57827f907e1c56000000000000000000000000000000000000000000000000000000006040517fbe98cdba0000000000000000000000000000000000000000000000000000000081526004016109d5929190611416565b60405180910390fd5b600060028111156109f2576109f1611242565b5b826002811115610a0557610a04611242565b5b148015610aa957508273ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f3fce835e000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610a6691906113a2565b602060405180830381865afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa791906113e9565b155b15610b0d57827f3fce835e000000000000000000000000000000000000000000000000000000006040517fbe98cdba000000000000000000000000000000000000000000000000000000008152600401610b04929190611416565b60405180910390fd5b600280811115610b2057610b1f611242565b5b826002811115610b3357610b32611242565b5b148015610bd757508273ffffffffffffffffffffffffffffffffffffffff166301ffc9a77ff601ad15000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610b9491906113a2565b602060405180830381865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906113e9565b155b15610c3b57827ff601ad15000000000000000000000000000000000000000000000000000000006040517fbe98cdba000000000000000000000000000000000000000000000000000000008152600401610c32929190611416565b60405180910390fd5b60405180606001604052804267ffffffffffffffff168152602001600067ffffffffffffffff168152602001836002811115610c7a57610c79611242565b5b815250600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548160ff02191690836002811115610d4557610d44611242565b5b02179055509050508273ffffffffffffffffffffffffffffffffffffffff167f94c109d6a0f9d39b37ec79aa4e627154250f2c29adaf10079a79e29e95fefd6260405160405180910390a2505050565b60026020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16908060000160109054906101000a900460ff16905083565b610dfc610ea1565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610e5c610610565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610ea9610f50565b73ffffffffffffffffffffffffffffffffffffffff16610ec7610610565b73ffffffffffffffffffffffffffffffffffffffff1614610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f149061148b565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610f4d81610f58565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61105681611021565b811461106157600080fd5b50565b6000813590506110738161104d565b92915050565b60006020828403121561108f5761108e61101c565b5b600061109d84828501611064565b91505092915050565b60008115159050919050565b6110bb816110a6565b82525050565b60006020820190506110d660008301846110b2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611107826110dc565b9050919050565b611117816110fc565b811461112257600080fd5b50565b6000813590506111348161110e565b92915050565b6000602082840312156111505761114f61101c565b5b600061115e84828501611125565b91505092915050565b611170816110fc565b82525050565b600060208201905061118b6000830184611167565b92915050565b600067ffffffffffffffff82169050919050565b6111ae81611191565b82525050565b60006040820190506111c960008301856111a5565b6111d660208301846111a5565b9392505050565b600381106111ea57600080fd5b50565b6000813590506111fc816111dd565b92915050565b600080604083850312156112195761121861101c565b5b600061122785828601611125565b9250506020611238858286016111ed565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061128257611281611242565b5b50565b600081905061129382611271565b919050565b60006112a382611285565b9050919050565b6112b381611298565b82525050565b60006060820190506112ce60008301866111a5565b6112db60208301856111a5565b6112e860408301846112aa565b949350505050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b600061135d6029836112f0565b915061136882611301565b604082019050919050565b6000602082019050818103600083015261138c81611350565b9050919050565b61139c81611021565b82525050565b60006020820190506113b76000830184611393565b92915050565b6113c6816110a6565b81146113d157600080fd5b50565b6000815190506113e3816113bd565b92915050565b6000602082840312156113ff576113fe61101c565b5b600061140d848285016113d4565b91505092915050565b600060408201905061142b6000830185611167565b6114386020830184611393565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114756020836112f0565b91506114808261143f565b602082019050919050565b600060208201905081810360008301526114a481611468565b905091905056fea26469706673582212207901167a7fa6ad54526b57ae410849c97af8730f4ebdafb679037c2e171165ea64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1701 CODESIZE SUB DUP1 PUSH3 0x1701 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1DE JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x77 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x68 DUP2 PUSH3 0x77 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x210 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH3 0xAD DUP2 PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A6 DUP3 PUSH3 0x179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B8 DUP2 PUSH3 0x199 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D8 DUP2 PUSH3 0x1AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F7 JUMPI PUSH3 0x1F6 PUSH3 0x174 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x207 DUP5 DUP3 DUP6 ADD PUSH3 0x1C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E1 DUP1 PUSH3 0x220 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC23697A8 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC23697A8 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xE71D097B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xE8828EA3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BE JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x77E41FE9 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x2AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0x583 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP3 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xC23697A800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2A5 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x2BE PUSH1 0x0 PUSH2 0xF1F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0x1242 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AE PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3E1 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x423 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x3BEE038A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x534 JUMPI PUSH2 0x533 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7E4B225E43D112F7188B3064745A2E7988701D3816DEE2B4613507FFAFF6B302 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AE PUSH2 0x73D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FB SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60D DUP2 PUSH2 0xF1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x710 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x723 JUMPI PUSH2 0x722 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x76F PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x844 JUMPI PUSH2 0x843 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x1BC90BC600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x97A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x907E1C5600000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x954 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9DE JUMPI DUP3 PUSH32 0x907E1C5600000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH32 0xBE98CDBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F1 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xAA9 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x3FCE835E00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB0D JUMPI DUP3 PUSH32 0x3FCE835E00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH32 0xBE98CDBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xBD7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0xF601AD1500000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC3B JUMPI DUP3 PUSH32 0xF601AD1500000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH32 0xBE98CDBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC79 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD45 JUMPI PUSH2 0xD44 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x94C109D6A0F9D39B37EC79AA4E627154250F2C29ADAF10079A79E29E95FEFD62 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xDFC PUSH2 0xEA1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE5C PUSH2 0x610 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xEA9 PUSH2 0xF50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC7 PUSH2 0x610 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF14 SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xF4D DUP2 PUSH2 0xF58 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1056 DUP2 PUSH2 0x1021 JUMP JUMPDEST DUP2 EQ PUSH2 0x1061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1073 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109D DUP5 DUP3 DUP6 ADD PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BB DUP2 PUSH2 0x10A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 DUP3 PUSH2 0x10DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1117 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1134 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1150 JUMPI PUSH2 0x114F PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115E DUP5 DUP3 DUP6 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x118B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AE DUP2 PUSH2 0x1191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x11D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FC DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1218 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1227 DUP6 DUP3 DUP7 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1238 DUP6 DUP3 DUP7 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1282 JUMPI PUSH2 0x1281 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1293 DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A3 DUP3 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B3 DUP2 PUSH2 0x1298 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12CE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x12E8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135D PUSH1 0x29 DUP4 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1368 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138C DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1021 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C6 DUP2 PUSH2 0x10A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E3 DUP2 PUSH2 0x13BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FF JUMPI PUSH2 0x13FE PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140D DUP5 DUP3 DUP6 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x142B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1475 PUSH1 0x20 DUP4 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1480 DUP3 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A4 DUP2 PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x1167A7FA6AD54526B57AE410849C97AF8730F4EBDAFB679037C 0x2E OR GT PUSH6 0xEA64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "436:4348:2:-:0;;;1058:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:32:7;976:12;:10;;;:12;;:::i;:::-;957:18;;;:32;;:::i;:::-;1103::2;1122:12;1103:18;;;:32;;:::i;:::-;1058:85;436:4348;;656:98:6;709:7;736:10;729:17;;656:98;:::o;1544:156:8:-;1634:13;;1627:20;;;;;;;;;;;1658:34;1683:8;1658:24;;;:34;;:::i;:::-;1544:156;:::o;2496:191:7:-;2570:16;2589:6;;;;;;;;;;;2570:25;;2615:8;2606:6;;:17;;;;;;;;;;;;;;;;;;2670:8;2639:40;;2660:8;2639:40;;;;;;;;;;;;2559:128;2496:191;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;436:4348:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_566": {
									"entryPoint": 3745,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_501": {
									"entryPoint": 3920,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_623": {
									"entryPoint": 3928,
									"id": 623,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_684": {
									"entryPoint": 3871,
									"id": 684,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_706": {
									"entryPoint": 1411,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addIntegration_253": {
									"entryPoint": 1895,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@check_128": {
									"entryPoint": 1593,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@flagIntegration_304": {
									"entryPoint": 704,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@listedIntegrations_60": {
									"entryPoint": 3477,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_552": {
									"entryPoint": 1552,
									"id": 552,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_647": {
									"entryPoint": 1853,
									"id": 647,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_580": {
									"entryPoint": 684,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_327": {
									"entryPoint": 474,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_667": {
									"entryPoint": 3572,
									"id": 667,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_IntegrationType_$334": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_IntegrationType_$334": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_IntegrationType_$334_to_t_uint8_fromStack": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 4517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes4__to_t_address_t_bytes4__fromStack_reversed": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_enum$_IntegrationType_$334__to_t_uint64_t_uint64_t_uint8__fromStack_reversed": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_IntegrationType_$334": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_IntegrationType_$334_to_t_uint8": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 4674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_IntegrationType_$334": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_IntegrationType_$334": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8849:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:9",
														"type": ""
													}
												],
												"src": "1518:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:9",
														"type": ""
													}
												],
												"src": "1650:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:9"
															},
															"nodeType": "YulIf",
															"src": "1805:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:9",
														"type": ""
													}
												],
												"src": "1752:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:9",
														"type": ""
													}
												],
												"src": "1880:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:32:9"
															},
															"nodeType": "YulIf",
															"src": "2101:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2230:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2274:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2072:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2084:6:9",
														"type": ""
													}
												],
												"src": "2025:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2425:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2442:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2465:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2447:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2435:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2413:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2420:3:9",
														"type": ""
													}
												],
												"src": "2360:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2582:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2592:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2592:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2672:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2696:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2628:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2628:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2554:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2566:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2577:4:9",
														"type": ""
													}
												],
												"src": "2484:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2756:57:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2766:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2781:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:30:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2766:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2738:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2748:7:9",
														"type": ""
													}
												],
												"src": "2712:101:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2882:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2899:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2921:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "2904:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2870:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2877:3:9",
														"type": ""
													}
												],
												"src": "2819:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:202:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3084:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3095:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3072:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3174:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3108:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3108:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3108:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3229:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3253:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3238:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3187:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:70:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3187:70:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3026:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3038:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3046:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3057:4:9",
														"type": ""
													}
												],
												"src": "2940:324:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3332:56:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3366:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3375:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3378:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3368:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3355:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3362:1:9",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3352:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3352:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:20:9"
															},
															"nodeType": "YulIf",
															"src": "3342:40:9"
														}
													]
												},
												"name": "validator_revert_t_enum$_IntegrationType_$334",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3325:5:9",
														"type": ""
													}
												],
												"src": "3270:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:106:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3497:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3484:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3475:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3559:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_IntegrationType_$334",
																	"nodeType": "YulIdentifier",
																	"src": "3513:45:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3513:52:9"
														}
													]
												},
												"name": "abi_decode_t_enum$_IntegrationType_$334",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3443:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3451:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3459:5:9",
														"type": ""
													}
												],
												"src": "3394:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:410:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3725:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3727:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3727:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3700:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3696:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3696:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:32:9"
															},
															"nodeType": "YulIf",
															"src": "3689:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3818:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3833:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3837:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3862:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3897:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3908:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3893:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3893:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3917:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3862:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3945:137:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4044:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4055:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4040:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4040:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4064:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_IntegrationType_$334",
																			"nodeType": "YulIdentifier",
																			"src": "4000:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:72:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3990:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_IntegrationType_$334",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3641:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3652:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3664:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3672:6:9",
														"type": ""
													}
												],
												"src": "3577:512:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4140:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4133:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4133:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4237:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4240:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4230:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4264:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4254:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "4095:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4343:62:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4377:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "4379:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4379:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4379:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4366:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4373:1:9",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4363:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4363:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:20:9"
															},
															"nodeType": "YulIf",
															"src": "4353:46:9"
														}
													]
												},
												"name": "validator_assert_t_enum$_IntegrationType_$334",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4336:5:9",
														"type": ""
													}
												],
												"src": "4281:124:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:85:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4485:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4496:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4485:7:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4548:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_IntegrationType_$334",
																	"nodeType": "YulIdentifier",
																	"src": "4502:45:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4502:52:9"
														}
													]
												},
												"name": "cleanup_t_enum$_IntegrationType_$334",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4457:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4467:7:9",
														"type": ""
													}
												],
												"src": "4411:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4643:72:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4653:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4703:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_IntegrationType_$334",
																	"nodeType": "YulIdentifier",
																	"src": "4666:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:43:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4653:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_IntegrationType_$334_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4623:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4633:9:9",
														"type": ""
													}
												],
												"src": "4566:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4803:83:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4820:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4873:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_IntegrationType_$334_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4825:47:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4825:54:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4813:67:9"
														}
													]
												},
												"name": "abi_encode_t_enum$_IntegrationType_$334_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4791:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4798:3:9",
														"type": ""
													}
												],
												"src": "4721:165:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5059:301:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5069:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5081:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5092:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5069:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5147:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5160:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5171:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5156:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5156:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5105:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5105:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5239:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5250:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5235:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5184:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:70:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5184:70:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5325:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5338:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5349:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5334:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_IntegrationType_$334_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5264:60:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:89:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5264:89:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_enum$_IntegrationType_$334__to_t_uint64_t_uint64_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5015:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5027:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5043:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5054:4:9",
														"type": ""
													}
												],
												"src": "4892:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5479:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5484:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5472:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5472:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5500:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5519:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5524:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5515:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5500:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5434:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5439:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5450:11:9",
														"type": ""
													}
												],
												"src": "5366:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5647:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5669:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5681:34:9",
																		"type": "",
																		"value": "Ownable2Step: caller is not the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5658:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5737:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5745:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:15:9"
																	},
																	{
																		"hexValue": "6e6577206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5750:11:9",
																		"type": "",
																		"value": "new owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5639:6:9",
														"type": ""
													}
												],
												"src": "5541:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5921:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5931:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5997:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5938:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5931:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6103:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																	"nodeType": "YulIdentifier",
																	"src": "6014:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6014:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6014:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6116:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6127:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6132:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6123:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6116:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5909:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5917:3:9",
														"type": ""
													}
												],
												"src": "5775:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6318:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6328:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6340:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6351:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6336:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6336:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6328:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6394:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6400:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6390:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6420:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6554:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6428:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6428:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6420:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6298:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6313:4:9",
														"type": ""
													}
												],
												"src": "6147:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6635:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6652:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6674:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6657:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6645:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6645:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6630:3:9",
														"type": ""
													}
												],
												"src": "6572:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6789:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6799:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6807:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6799:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6877:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6890:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6901:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6835:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6835:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6761:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6773:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6784:4:9",
														"type": ""
													}
												],
												"src": "6693:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7011:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7020:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7023:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7013:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7013:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7013:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6980:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7002:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6987:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6987:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6977:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6977:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:40:9"
															},
															"nodeType": "YulIf",
															"src": "6967:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6950:5:9",
														"type": ""
													}
												],
												"src": "6917:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7099:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7109:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7124:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7118:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7109:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7164:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7140:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7140:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7077:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7085:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7093:5:9",
														"type": ""
													}
												],
												"src": "7039:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7256:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7302:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7304:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7304:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7304:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7277:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7286:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7273:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7298:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7269:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:32:9"
															},
															"nodeType": "YulIf",
															"src": "7266:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7395:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7410:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7424:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7414:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7439:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7482:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7493:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7478:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7478:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7502:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7449:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7449:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7439:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7226:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7237:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7249:6:9",
														"type": ""
													}
												],
												"src": "7182:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7657:204:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7667:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7679:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7690:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7667:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7747:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7760:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7771:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7756:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7756:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7703:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7703:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7826:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7839:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7850:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7835:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7784:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7784:70:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7784:70:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes4__to_t_address_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7621:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7633:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7641:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7652:4:9",
														"type": ""
													}
												],
												"src": "7533:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7973:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7995:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8003:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7991:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8007:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7984:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7984:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7965:6:9",
														"type": ""
													}
												],
												"src": "7867:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8201:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8211:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8282:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8218:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8218:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8211:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8383:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8294:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8294:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8396:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8407:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8403:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8396:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8189:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8197:3:9",
														"type": ""
													}
												],
												"src": "8055:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8608:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8620:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8631:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8616:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8608:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8655:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8666:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8651:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8651:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8674:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8680:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8670:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8670:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8644:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8644:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8644:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8700:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8834:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8708:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8700:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8578:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8593:4:9",
														"type": ""
													}
												],
												"src": "8427:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_enum$_IntegrationType_$334(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_IntegrationType_$334(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_IntegrationType_$334(value)\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_IntegrationType_$334(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_IntegrationType_$334(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_IntegrationType_$334(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_IntegrationType_$334(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_IntegrationType_$334(value)\n    }\n\n    function convert_t_enum$_IntegrationType_$334_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_IntegrationType_$334(value)\n    }\n\n    function abi_encode_t_enum$_IntegrationType_$334_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_IntegrationType_$334_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_enum$_IntegrationType_$334__to_t_uint64_t_uint64_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_IntegrationType_$334_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes4__to_t_address_t_bytes4__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c23697a811610066578063c23697a814610121578063e30c397814610152578063e71d097b14610170578063e8828ea31461018c578063f2fde38b146101be5761009e565b806301ffc9a7146100a3578063715018a6146100d357806377e41fe9146100dd57806379ba5097146100f95780638da5cb5b14610103575b600080fd5b6100bd60048036038101906100b89190611079565b6101da565b6040516100ca91906110c1565b60405180910390f35b6100db6102ac565b005b6100f760048036038101906100f2919061113a565b6102c0565b005b610101610583565b005b61010b610610565b6040516101189190611176565b60405180910390f35b61013b6004803603810190610136919061113a565b610639565b6040516101499291906111b4565b60405180910390f35b61015a61073d565b6040516101679190611176565b60405180910390f35b61018a60048036038101906101859190611202565b610767565b005b6101a660048036038101906101a1919061113a565b610d95565b6040516101b5939291906112b9565b60405180910390f35b6101d860048036038101906101d3919061113a565b610df4565b005b60007fc23697a8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102a557507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6102b4610ea1565b6102be6000610f1f565b565b6102c8610ea1565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900460ff16600281111561039d5761039c611242565b5b60028111156103af576103ae611242565b5b8152505090506000816000015167ffffffffffffffff1614806103e157506000816020015167ffffffffffffffff1614155b1561042357816040517f3bee038a00000000000000000000000000000000000000000000000000000000815260040161041a9190611176565b60405180910390fd5b6040518060600160405280826000015167ffffffffffffffff1681526020014267ffffffffffffffff1681526020018260400151600281111561046957610468611242565b5b815250600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548160ff0219169083600281111561053457610533611242565b5b02179055509050508173ffffffffffffffffffffffffffffffffffffffff167f7e4b225e43d112f7188b3064745a2e7988701d3816dee2b4613507ffaff6b30260405160405180910390a25050565b600061058d610f50565b90508073ffffffffffffffffffffffffffffffffffffffff166105ae61073d565b73ffffffffffffffffffffffffffffffffffffffff1614610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90611373565b60405180910390fd5b61060d81610f1f565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900460ff16600281111561071157610710611242565b5b600281111561072357610722611242565b5b815250509050806000015192508060200151915050915091565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61076f610ea1565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900460ff16600281111561084457610843611242565b5b600281111561085657610855611242565b5b8152505090506000816000015167ffffffffffffffff16146108af57826040517f1bc90bc60000000000000000000000000000000000000000000000000000000081526004016108a69190611176565b60405180910390fd5b600160028111156108c3576108c2611242565b5b8260028111156108d6576108d5611242565b5b14801561097a57508273ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f907e1c56000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161093791906113a2565b602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097891906113e9565b155b156109de57827f907e1c56000000000000000000000000000000000000000000000000000000006040517fbe98cdba0000000000000000000000000000000000000000000000000000000081526004016109d5929190611416565b60405180910390fd5b600060028111156109f2576109f1611242565b5b826002811115610a0557610a04611242565b5b148015610aa957508273ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f3fce835e000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610a6691906113a2565b602060405180830381865afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa791906113e9565b155b15610b0d57827f3fce835e000000000000000000000000000000000000000000000000000000006040517fbe98cdba000000000000000000000000000000000000000000000000000000008152600401610b04929190611416565b60405180910390fd5b600280811115610b2057610b1f611242565b5b826002811115610b3357610b32611242565b5b148015610bd757508273ffffffffffffffffffffffffffffffffffffffff166301ffc9a77ff601ad15000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610b9491906113a2565b602060405180830381865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906113e9565b155b15610c3b57827ff601ad15000000000000000000000000000000000000000000000000000000006040517fbe98cdba000000000000000000000000000000000000000000000000000000008152600401610c32929190611416565b60405180910390fd5b60405180606001604052804267ffffffffffffffff168152602001600067ffffffffffffffff168152602001836002811115610c7a57610c79611242565b5b815250600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548160ff02191690836002811115610d4557610d44611242565b5b02179055509050508273ffffffffffffffffffffffffffffffffffffffff167f94c109d6a0f9d39b37ec79aa4e627154250f2c29adaf10079a79e29e95fefd6260405160405180910390a2505050565b60026020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16908060000160109054906101000a900460ff16905083565b610dfc610ea1565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610e5c610610565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610ea9610f50565b73ffffffffffffffffffffffffffffffffffffffff16610ec7610610565b73ffffffffffffffffffffffffffffffffffffffff1614610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f149061148b565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610f4d81610f58565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61105681611021565b811461106157600080fd5b50565b6000813590506110738161104d565b92915050565b60006020828403121561108f5761108e61101c565b5b600061109d84828501611064565b91505092915050565b60008115159050919050565b6110bb816110a6565b82525050565b60006020820190506110d660008301846110b2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611107826110dc565b9050919050565b611117816110fc565b811461112257600080fd5b50565b6000813590506111348161110e565b92915050565b6000602082840312156111505761114f61101c565b5b600061115e84828501611125565b91505092915050565b611170816110fc565b82525050565b600060208201905061118b6000830184611167565b92915050565b600067ffffffffffffffff82169050919050565b6111ae81611191565b82525050565b60006040820190506111c960008301856111a5565b6111d660208301846111a5565b9392505050565b600381106111ea57600080fd5b50565b6000813590506111fc816111dd565b92915050565b600080604083850312156112195761121861101c565b5b600061122785828601611125565b9250506020611238858286016111ed565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061128257611281611242565b5b50565b600081905061129382611271565b919050565b60006112a382611285565b9050919050565b6112b381611298565b82525050565b60006060820190506112ce60008301866111a5565b6112db60208301856111a5565b6112e860408301846112aa565b949350505050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b600061135d6029836112f0565b915061136882611301565b604082019050919050565b6000602082019050818103600083015261138c81611350565b9050919050565b61139c81611021565b82525050565b60006020820190506113b76000830184611393565b92915050565b6113c6816110a6565b81146113d157600080fd5b50565b6000815190506113e3816113bd565b92915050565b6000602082840312156113ff576113fe61101c565b5b600061140d848285016113d4565b91505092915050565b600060408201905061142b6000830185611167565b6114386020830184611393565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114756020836112f0565b91506114808261143f565b602082019050919050565b600060208201905081810360008301526114a481611468565b905091905056fea26469706673582212207901167a7fa6ad54526b57ae410849c97af8730f4ebdafb679037c2e171165ea64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC23697A8 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC23697A8 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xE71D097B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xE8828EA3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BE JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x77E41FE9 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x2AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0x583 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP3 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xC23697A800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2A5 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x2BE PUSH1 0x0 PUSH2 0xF1F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0x1242 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AE PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3E1 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x423 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x3BEE038A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x534 JUMPI PUSH2 0x533 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7E4B225E43D112F7188B3064745A2E7988701D3816DEE2B4613507FFAFF6B302 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5AE PUSH2 0x73D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FB SWAP1 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60D DUP2 PUSH2 0xF1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x710 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x723 JUMPI PUSH2 0x722 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x76F PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x844 JUMPI PUSH2 0x843 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8AF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x1BC90BC600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x97A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x907E1C5600000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x954 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9DE JUMPI DUP3 PUSH32 0x907E1C5600000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH32 0xBE98CDBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F1 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xAA9 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x3FCE835E00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB0D JUMPI DUP3 PUSH32 0x3FCE835E00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH32 0xBE98CDBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xBD7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0xF601AD1500000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC3B JUMPI DUP3 PUSH32 0xF601AD1500000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH32 0xBE98CDBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC7A JUMPI PUSH2 0xC79 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD45 JUMPI PUSH2 0xD44 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x94C109D6A0F9D39B37EC79AA4E627154250F2C29ADAF10079A79E29E95FEFD62 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xDFC PUSH2 0xEA1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE5C PUSH2 0x610 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xEA9 PUSH2 0xF50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC7 PUSH2 0x610 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF14 SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xF4D DUP2 PUSH2 0xF58 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1056 DUP2 PUSH2 0x1021 JUMP JUMPDEST DUP2 EQ PUSH2 0x1061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1073 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109D DUP5 DUP3 DUP6 ADD PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BB DUP2 PUSH2 0x10A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 DUP3 PUSH2 0x10DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1117 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1134 DUP2 PUSH2 0x110E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1150 JUMPI PUSH2 0x114F PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115E DUP5 DUP3 DUP6 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1170 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x118B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AE DUP2 PUSH2 0x1191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x11D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FC DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1219 JUMPI PUSH2 0x1218 PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1227 DUP6 DUP3 DUP7 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1238 DUP6 DUP3 DUP7 ADD PUSH2 0x11ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1282 JUMPI PUSH2 0x1281 PUSH2 0x1242 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1293 DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A3 DUP3 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B3 DUP2 PUSH2 0x1298 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12CE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x12E8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135D PUSH1 0x29 DUP4 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1368 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x138C DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x1021 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C6 DUP2 PUSH2 0x10A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E3 DUP2 PUSH2 0x13BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FF JUMPI PUSH2 0x13FE PUSH2 0x101C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140D DUP5 DUP3 DUP6 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x142B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1475 PUSH1 0x20 DUP4 PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1480 DUP3 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A4 DUP2 PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x1167A7FA6AD54526B57AE410849C97AF8730F4EBDAFB679037C 0x2E OR GT PUSH6 0xEA64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "436:4348:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4572:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1877:103:7;;;:::i;:::-;;4016:548:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1785:216:8;;;:::i;:::-;;1236:87:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1508:279:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;873:101:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2219:1453:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;512:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1173:181:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4572:209:2;4651:4;4690:39;4675:54;;;:11;:54;;;;:98;;;;4748:25;4733:40;;;:11;:40;;;;4675:98;4668:105;;4572:209;;;:::o;1877:103:7:-;1122:13;:11;:13::i;:::-;1942:30:::1;1969:1;1942:18;:30::i;:::-;1877:103::o:0;4016:548:2:-;1122:13:7;:11;:13::i;:::-;4092:38:2::1;4133:18;:31;4152:11;4133:31;;;;;;;;;;;;;;;4092:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;::::0;::::1;;;4209:1;4181:15;:24;;;:29;;;:63;;;;4243:1;4214:15;:25;;;:30;;;;4181:63;4177:137;;;4290:11;4268:34;;;;;;;;;;;:::i;:::-;;;;;;;;4177:137;4360:149;;;;;;;;4390:15;:24;;;4360:149;;;;;;4436:15;4360:149;;;;;;4467:15;:31;;;4360:149;;;;;;;;:::i;:::-;;;;::::0;4326:18:::1;:31;4345:11;4326:31;;;;;;;;;;;;;;;:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4544:11;4525:31;;;;;;;;;;;;4081:483;4016:548:::0;:::o;1785:216:8:-;1838:14;1855:12;:10;:12::i;:::-;1838:29;;1904:6;1886:24;;:14;:12;:14::i;:::-;:24;;;1878:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1967:26;1986:6;1967:18;:26::i;:::-;1827:174;1785:216::o;1236:87:7:-;1282:7;1309:6;;;;;;;;;;;1302:13;;1236:87;:::o;1508:279:2:-;1567:15;1584:16;1613:38;1654:18;:31;1673:11;1654:31;;;;;;;;;;;;;;;1613:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1707:15;:24;;;1696:35;;1754:15;:25;;;1742:37;;1602:185;1508:279;;;:::o;873:101:8:-;926:7;953:13;;;;;;;;;;;946:20;;873:101;:::o;2219:1453:2:-;1122:13:7;:11;:13::i;:::-;2340:38:2::1;2381:18;:31;2400:11;2381:31;;;;;;;;;;;;;;;2340:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;::::0;::::1;;;2457:1;2429:15;:24;;;:29;;;2425:102;;2503:11;2482:33;;;;;;;;;;;:::i;:::-;;;;;;;;2425:102;2637:26;2618:45;;;;;;;;:::i;:::-;;:15;:45;;;;;;;;:::i;:::-;;;:126;;;;;2676:11;2668:38;;;2707:36;2668:76;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2667:77;2618:126;2600:913;;;2823:11;2836:36;2778:95;;;;;;;;;;;;:::i;:::-;;;;;;;;2600:913;2928:27;2909:46;;;;;;;;:::i;:::-;;:15;:46;;;;;;;;:::i;:::-;;;:128;;;;;2968:11;2960:38;;;2999:37;2960:77;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2959:78;2909:128;2891:622;;;3116:11;3129:37;3071:96;;;;;;;;;;;;:::i;:::-;;;;;;;;2891:622;3222:36;3203:55:::0;::::1;;;;;;;:::i;:::-;;:15;:55;;;;;;;;:::i;:::-;;;:159;;;;;3284:11;3276:38;;;3315:46;3276:86;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3275:87;3203:159;3185:328;;;3441:11;3454:46;3396:105;;;;;;;;;;;;:::i;:::-;;;;;;;;3185:328;3559:60;;;;;;;;3582:15;3559:60;;;;;;3600:1;3559:60;;;;;;3603:15;3559:60;;;;;;;;:::i;:::-;;;;::::0;3525:18:::1;:31;3544:11;3525:31;;;;;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3652:11;3635:29;;;;;;;;;;;;2329:1343;2219:1453:::0;;:::o;512:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1173:181:8:-;1122:13:7;:11;:13::i;:::-;1279:8:8::1;1263:13;;:24;;;;;;;;;;;;;;;;;;1337:8;1303:43;;1328:7;:5;:7::i;:::-;1303:43;;;;;;;;;;;;1173:181:::0;:::o;1401:132:7:-;1476:12;:10;:12::i;:::-;1465:23;;:7;:5;:7::i;:::-;:23;;;1457:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1401:132::o;1544:156:8:-;1634:13;;1627:20;;;;;;;;;;;1658:34;1683:8;1658:24;:34::i;:::-;1544:156;:::o;656:98:6:-;709:7;736:10;729:17;;656:98;:::o;2496:191:7:-;2570:16;2589:6;;;;;;;;;;;2570:25;;2615:8;2606:6;;:17;;;;;;;;;;;;;;;;;;2670:8;2639:40;;2660:8;2639:40;;;;;;;;;;;;2559:128;2496:191;:::o;88:117:9:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:118::-;2447:24;2465:5;2447:24;:::i;:::-;2442:3;2435:37;2360:118;;:::o;2484:222::-;2577:4;2615:2;2604:9;2600:18;2592:26;;2628:71;2696:1;2685:9;2681:17;2672:6;2628:71;:::i;:::-;2484:222;;;;:::o;2712:101::-;2748:7;2788:18;2781:5;2777:30;2766:41;;2712:101;;;:::o;2819:115::-;2904:23;2921:5;2904:23;:::i;:::-;2899:3;2892:36;2819:115;;:::o;2940:324::-;3057:4;3095:2;3084:9;3080:18;3072:26;;3108:69;3174:1;3163:9;3159:17;3150:6;3108:69;:::i;:::-;3187:70;3253:2;3242:9;3238:18;3229:6;3187:70;:::i;:::-;2940:324;;;;;:::o;3270:118::-;3362:1;3355:5;3352:12;3342:40;;3378:1;3375;3368:12;3342:40;3270:118;:::o;3394:177::-;3459:5;3497:6;3484:20;3475:29;;3513:52;3559:5;3513:52;:::i;:::-;3394:177;;;;:::o;3577:512::-;3664:6;3672;3721:2;3709:9;3700:7;3696:23;3692:32;3689:119;;;3727:79;;:::i;:::-;3689:119;3847:1;3872:53;3917:7;3908:6;3897:9;3893:22;3872:53;:::i;:::-;3862:63;;3818:117;3974:2;4000:72;4064:7;4055:6;4044:9;4040:22;4000:72;:::i;:::-;3990:82;;3945:137;3577:512;;;;;:::o;4095:180::-;4143:77;4140:1;4133:88;4240:4;4237:1;4230:15;4264:4;4261:1;4254:15;4281:124;4373:1;4366:5;4363:12;4353:46;;4379:18;;:::i;:::-;4353:46;4281:124;:::o;4411:149::-;4467:7;4496:5;4485:16;;4502:52;4548:5;4502:52;:::i;:::-;4411:149;;;:::o;4566:::-;4633:9;4666:43;4703:5;4666:43;:::i;:::-;4653:56;;4566:149;;;:::o;4721:165::-;4825:54;4873:5;4825:54;:::i;:::-;4820:3;4813:67;4721:165;;:::o;4892:468::-;5054:4;5092:2;5081:9;5077:18;5069:26;;5105:69;5171:1;5160:9;5156:17;5147:6;5105:69;:::i;:::-;5184:70;5250:2;5239:9;5235:18;5226:6;5184:70;:::i;:::-;5264:89;5349:2;5338:9;5334:18;5325:6;5264:89;:::i;:::-;4892:468;;;;;;:::o;5366:169::-;5450:11;5484:6;5479:3;5472:19;5524:4;5519:3;5515:14;5500:29;;5366:169;;;;:::o;5541:228::-;5681:34;5677:1;5669:6;5665:14;5658:58;5750:11;5745:2;5737:6;5733:15;5726:36;5541:228;:::o;5775:366::-;5917:3;5938:67;6002:2;5997:3;5938:67;:::i;:::-;5931:74;;6014:93;6103:3;6014:93;:::i;:::-;6132:2;6127:3;6123:12;6116:19;;5775:366;;;:::o;6147:419::-;6313:4;6351:2;6340:9;6336:18;6328:26;;6400:9;6394:4;6390:20;6386:1;6375:9;6371:17;6364:47;6428:131;6554:4;6428:131;:::i;:::-;6420:139;;6147:419;;;:::o;6572:115::-;6657:23;6674:5;6657:23;:::i;:::-;6652:3;6645:36;6572:115;;:::o;6693:218::-;6784:4;6822:2;6811:9;6807:18;6799:26;;6835:69;6901:1;6890:9;6886:17;6877:6;6835:69;:::i;:::-;6693:218;;;;:::o;6917:116::-;6987:21;7002:5;6987:21;:::i;:::-;6980:5;6977:32;6967:60;;7023:1;7020;7013:12;6967:60;6917:116;:::o;7039:137::-;7093:5;7124:6;7118:13;7109:22;;7140:30;7164:5;7140:30;:::i;:::-;7039:137;;;;:::o;7182:345::-;7249:6;7298:2;7286:9;7277:7;7273:23;7269:32;7266:119;;;7304:79;;:::i;:::-;7266:119;7424:1;7449:61;7502:7;7493:6;7482:9;7478:22;7449:61;:::i;:::-;7439:71;;7395:125;7182:345;;;;:::o;7533:328::-;7652:4;7690:2;7679:9;7675:18;7667:26;;7703:71;7771:1;7760:9;7756:17;7747:6;7703:71;:::i;:::-;7784:70;7850:2;7839:9;7835:18;7826:6;7784:70;:::i;:::-;7533:328;;;;;:::o;7867:182::-;8007:34;8003:1;7995:6;7991:14;7984:58;7867:182;:::o;8055:366::-;8197:3;8218:67;8282:2;8277:3;8218:67;:::i;:::-;8211:74;;8294:93;8383:3;8294:93;:::i;:::-;8412:2;8407:3;8403:12;8396:19;;8055:366;;;:::o;8427:419::-;8593:4;8631:2;8620:9;8616:18;8608:26;;8680:9;8674:4;8670:20;8666:1;8655:9;8651:17;8644:47;8708:131;8834:4;8708:131;:::i;:::-;8700:139;;8427:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1069000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "54725",
								"addIntegration(address,uint8)": "infinite",
								"check(address)": "infinite",
								"flagIntegration(address)": "infinite",
								"listedIntegrations(address)": "infinite",
								"owner()": "2611",
								"pendingOwner()": "2544",
								"renounceOwnership()": "54692",
								"supportsInterface(bytes4)": "685",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1058,
									"end": 1143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 976,
									"end": 988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 976,
									"end": 988,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 957,
									"end": 989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 989,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1122,
									"end": 1134,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1121,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1058,
									"end": 1143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1544,
									"end": 1700,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1544,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1634,
									"end": 1647,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1634,
									"end": 1647,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1683,
									"end": 1691,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1544,
									"end": 1700,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1544,
									"end": 1700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2586,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2615,
									"end": 2623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2670,
									"end": 2678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2660,
									"end": 2668,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 2559,
									"end": 2687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2496,
									"end": 2687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 436,
									"end": 4784,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207901167a7fa6ad54526b57ae410849c97af8730f4ebdafb679037c2e171165ea64736f6c63430008140033",
									".code": [
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "C23697A8"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "C23697A8"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "E30C3978"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "E71D097B"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "E8828EA3"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "77E41FE9"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "79BA5097"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 4784,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4572,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4572,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4572,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1877,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4016,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4016,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1785,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1236,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1236,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1508,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1508,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1508,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 873,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 873,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2219,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2219,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 512,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 512,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1173,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1173,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4729,
											"name": "PUSH",
											"source": 2,
											"value": "C23697A800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4729,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4675,
											"end": 4773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4773,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4733,
											"end": 4744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4733,
											"end": 4773,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4675,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4668,
											"end": 4773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4668,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1969,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1942,
											"end": 1972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1942,
											"end": 1972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 4130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4163,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4164,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4092,
											"end": 4164,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4092,
											"end": 4164,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4164,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4181,
											"end": 4210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4210,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4244,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4181,
											"end": 4244,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4244,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4244,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4244,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4181,
											"end": 4244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4177,
											"end": 4314,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4177,
											"end": 4314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4177,
											"end": 4314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3BEE038A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4268,
											"end": 4302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4177,
											"end": 4314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4177,
											"end": 4314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4405,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4451,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4482,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4467,
											"end": 4498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4360,
											"end": 4509,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4357,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4326,
											"end": 4509,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4544,
											"end": 4555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7E4B225E43D112F7188B3064745A2E7988701D3816DEE2B4613507FFAFF6B302"
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4556,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1886,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1878,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1967,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1993,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1967,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 2001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1282,
											"end": 1289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1600,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1684,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1685,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1613,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1613,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1779,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 966,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 946,
											"end": 966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 946,
											"end": 966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 873,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2411,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2412,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2340,
											"end": 2412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2340,
											"end": 2412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2458,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2425,
											"end": 2527,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2514,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1BC90BC600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2482,
											"end": 2515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2515,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2425,
											"end": 2527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2618,
											"end": 2663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2618,
											"end": 2663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2663,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 2707,
											"end": 2743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "907E1C5600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2668,
											"end": 2744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2668,
											"end": 2744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2668,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2618,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 3513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2600,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2834,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "907E1C5600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "BE98CDBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2778,
											"end": 2873,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2873,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 3513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2600,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2909,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2924,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2909,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2955,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 2998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 2999,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3FCE835E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2960,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2960,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2960,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2909,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2891,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3FCE835E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "BE98CDBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3071,
											"end": 3167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3167,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2891,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3203,
											"end": 3258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3203,
											"end": 3258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3203,
											"end": 3258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3258,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3295,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3276,
											"end": 3314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 3315,
											"end": 3361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F601AD1500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3276,
											"end": 3362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3276,
											"end": 3362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3276,
											"end": 3362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3203,
											"end": 3362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3185,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3441,
											"end": 3452,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F601AD1500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "BE98CDBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3396,
											"end": 3501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3185,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3597,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3618,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3559,
											"end": 3619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3555,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3525,
											"end": 3619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3663,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "94C109D6A0F9D39B37EC79AA4E627154250F2C29ADAF10079A79E29E95FEFD62"
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3664,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 3672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 512,
											"end": 573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 512,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 1276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1328,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1328,
											"end": 1335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1328,
											"end": 1335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1476,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1465,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1457,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1700,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1544,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1634,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1683,
											"end": 1691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1658,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2478,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2360,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2465,
											"end": 2470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2447,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2471,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2447,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2706,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2484,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2694,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 2698,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2628,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2699,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2628,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2813,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2712,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2786,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2807,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 2807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 2807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2934,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2819,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2921,
											"end": 2926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2904,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2902,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2928,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3108,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3177,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3108,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3253,
											"end": 3255,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3242,
											"end": 3251,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3187,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3257,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3187,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3388,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3270,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3363,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3342,
											"end": 3382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3382,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3342,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3270,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3571,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3394,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3504,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3559,
											"end": 3564,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3513,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3513,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3571,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3696,
											"end": 3719,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3724,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3727,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3847,
											"end": 3848,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3872,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3925,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4064,
											"end": 4071,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4040,
											"end": 4062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4000,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4072,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 4082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4095,
											"end": 4275,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4095,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4220,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4140,
											"end": 4141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4221,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4244,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4237,
											"end": 4238,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4230,
											"end": 4245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4268,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4261,
											"end": 4262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4269,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4405,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4281,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4373,
											"end": 4374,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4366,
											"end": 4371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4353,
											"end": 4399,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4379,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4379,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4399,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4353,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4560,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4411,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4502,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4548,
											"end": 4553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4502,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4502,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4502,
											"end": 4554,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4502,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4715,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4566,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4703,
											"end": 4708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4666,
											"end": 4709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4709,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4666,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4653,
											"end": 4709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4653,
											"end": 4709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4886,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4721,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4873,
											"end": 4878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4825,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4879,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4825,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4820,
											"end": 4823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4880,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5081,
											"end": 5090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5169,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5105,
											"end": 5174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5174,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5105,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5250,
											"end": 5252,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5184,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5254,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5184,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 5349,
											"end": 5351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 5264,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5353,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 5264,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 5360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5535,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5366,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5450,
											"end": 5461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5479,
											"end": 5482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5528,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 5522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5515,
											"end": 5529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5500,
											"end": 5529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5500,
											"end": 5529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5366,
											"end": 5535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5769,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5541,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520"
										},
										{
											"begin": 5677,
											"end": 5678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5658,
											"end": 5716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5761,
											"name": "PUSH",
											"source": 9,
											"value": "6E6577206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 6141,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5775,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5917,
											"end": 5920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5997,
											"end": 6000,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5938,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 6005,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5938,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6103,
											"end": 6106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 6014,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6107,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6014,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6134,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6127,
											"end": 6130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6116,
											"end": 6135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6116,
											"end": 6135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 6141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 6141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 6141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 6141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6566,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6147,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6313,
											"end": 6317,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6328,
											"end": 6354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6328,
											"end": 6354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6384,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6364,
											"end": 6411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6428,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6559,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 6428,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6657,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6657,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6652,
											"end": 6655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6899,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6835,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 6835,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6917,
											"end": 7033,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6917,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7002,
											"end": 7007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6987,
											"end": 7008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7008,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 6987,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 6985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 7009,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6967,
											"end": 7027,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7013,
											"end": 7025,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7027,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6967,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6917,
											"end": 7033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6917,
											"end": 7033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7176,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7039,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7093,
											"end": 7098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7109,
											"end": 7131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7109,
											"end": 7131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 7140,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7140,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7176,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7527,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7182,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7296,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7301,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7385,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 7266,
											"end": 7385,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7304,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 7304,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 7304,
											"end": 7383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7304,
											"end": 7383,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 7304,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7385,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 7266,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7424,
											"end": 7425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 7502,
											"end": 7509,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7449,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7449,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7449,
											"end": 7510,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 7449,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7510,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7395,
											"end": 7520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7527,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7652,
											"end": 7656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7675,
											"end": 7693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7667,
											"end": 7693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7667,
											"end": 7693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7747,
											"end": 7753,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7703,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7850,
											"end": 7852,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7848,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7832,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7784,
											"end": 7854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7854,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7784,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8049,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7867,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8041,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8003,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7995,
											"end": 8001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 8042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 8218,
											"end": 8285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8218,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 8383,
											"end": 8386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 8294,
											"end": 8387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 8294,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8846,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8427,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8633,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8670,
											"end": 8690,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 8667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8664,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8651,
											"end": 8668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8644,
											"end": 8691,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8834,
											"end": 8838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 8708,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8839,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8708,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8700,
											"end": 8839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8700,
											"end": 8839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"DataTypes.sol",
								"SafeProtocolRegistry.sol",
								"common/Enum.sol",
								"interfaces/Integrations.sol",
								"interfaces/Registry.sol",
								"ownable/Context.sol",
								"ownable/Ownable.sol",
								"ownable/Ownable2Step.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"addIntegration(address,uint8)": "e71d097b",
							"check(address)": "c23697a8",
							"flagIntegration(address)": "77e41fe9",
							"listedIntegrations(address)": "e8828ea3",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"CannotAddIntegration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"CannotFlagIntegration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"expectedInterfaceId\",\"type\":\"bytes4\"}],\"name\":\"IntegrationDoesNotSupportExpectedInterfaceId\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"IntegrationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"IntegrationFlagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"},{\"internalType\":\"enum Enum.IntegrationType\",\"name\":\"integrationType\",\"type\":\"uint8\"}],\"name\":\"addIntegration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"listedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flaggedAt\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"flagIntegration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listedIntegrations\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"listedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flaggedAt\",\"type\":\"uint64\"},{\"internalType\":\"enum Enum.IntegrationType\",\"name\":\"integrationType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addIntegration(address,uint8)\":{\"params\":{\"integration\":\"Address of the integration\",\"integrationType\":\"Enum.IntegrationType indicating the type of integration\"}},\"check(address)\":{\"params\":{\"integration\":\"Address of the integration to be checked\"},\"returns\":{\"flaggedAt\":\"Timestamp of falgging the integration. This value will be 0 if not flagged.\",\"listedAt\":\"Timestamp of listing the integration. This value will be 0 if not listed.\"}},\"flagIntegration(address)\":{\"params\":{\"integration\":\"Address of the integration\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addIntegration(address,uint8)\":{\"notice\":\"Allows only owner to add a integration. A integration can be any address including zero address for now.         This function does not permit adding a integration twice. This function validates if integration supports expected interfaceId.\"},\"check(address)\":{\"notice\":\"This function returns information about a integration\"},\"flagIntegration(address)\":{\"notice\":\"Allows only owner to flad a integration. Only previously added integration can be flagged.         This function does not permit flagging a integration twice.         A integration can be any address including zero address for now.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeProtocolRegistry.sol\":\"SafeProtocolRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"DataTypes.sol\":{\"keccak256\":\"0xba96a56684fa0731bb1553f865b156083c24abaeb3212d4704aaf5a76f36ba6b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fb9136ce85f8f5ea65d12c09ba433486afd10c23951ccfb583456a24831a6c6c\",\"dweb:/ipfs/QmfD95cswa47jGrmhDb2yrTEcGM5RLkESxWCZHMGiXYPe3\"]},\"SafeProtocolRegistry.sol\":{\"keccak256\":\"0x5369862a2ad7e91386c5f48d5ec2696f5f8ae7ca516ca094d3a3242441397de6\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3178d73d40200a06053de089bab13fadc65b7b2488eb6968cdfc6a4a5ef7ad5b\",\"dweb:/ipfs/QmXP35iCszZfLYDNtbnkFoFo3moFd6SJvxqGH3NS3i8rsA\"]},\"common/Enum.sol\":{\"keccak256\":\"0xf96606b2d5e0faf667ceb2ae0b29b617c99d8ad6d36b0e5db2aa4e6e10c18e28\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://936e5556c3bcfc7cffee8b362abf2b198871765219731f0ce03188ecce51e19e\",\"dweb:/ipfs/QmYDebakEh2N344igmXv8JtAqMAktAm5TuW49RiCoNhvxK\"]},\"interfaces/Integrations.sol\":{\"keccak256\":\"0x6a8e85474431c7cff76528d144353a6d9d318cfbe7b6375423b6d4117c33b597\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4cb3d9a800e0de8ddc43cbdb249b9ffd69c14a750c389d7139f8231b189987ad\",\"dweb:/ipfs/QmYrsATZ5L9XL28vgLqhWyb7hVQfhC45VRtA2A9jA7wXSA\"]},\"interfaces/Registry.sol\":{\"keccak256\":\"0x326d17098b54c6c7f777f329e7db6447e5955f69825b985167b9761d54191e46\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://207b876255d60c9d3b78bac355817e7ff952c39bd2805c0f0e0fa0ce14fbffd1\",\"dweb:/ipfs/QmNfaJgDfghYoPTumiLvy8TaZNfiNGDCLwENpDgsxmVq3m\"]},\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ownable/Ownable.sol\":{\"keccak256\":\"0x673b1da37f2744f44a9deb6a48a75634f35acb19cca8802ff92df829e381b0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e33fb87c6b3d834d9c884d96f9afb2259b765e1a31cec90bc1808e0a57e98d9\",\"dweb:/ipfs/Qmct4JbYxL1HEDQ6odktWtNUsRC6jxx6eDmbmuSpnVspZs\"]},\"ownable/Ownable2Step.sol\":{\"keccak256\":\"0x2dea0183b9f457f9827b30a5c07797252fe348a52b7bb65b3391c6a3ae9f159a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32647c7ad298438546cdedb9d16827fd1616a19717189cd580c76252c17c2632\",\"dweb:/ipfs/QmXdTR2C8uGedwnaZi81gKRc6rU8fpC4oAmSPLMHSrn96c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 519,
								"contract": "SafeProtocolRegistry.sol:SafeProtocolRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 632,
								"contract": "SafeProtocolRegistry.sol:SafeProtocolRegistry",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 60,
								"contract": "SafeProtocolRegistry.sol:SafeProtocolRegistry",
								"label": "listedIntegrations",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(IntegrationInfo)68_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(IntegrationType)334": {
								"encoding": "inplace",
								"label": "enum Enum.IntegrationType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(IntegrationInfo)68_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(IntegrationInfo)68_storage"
							},
							"t_struct(IntegrationInfo)68_storage": {
								"encoding": "inplace",
								"label": "struct SafeProtocolRegistry.IntegrationInfo",
								"members": [
									{
										"astId": 62,
										"contract": "SafeProtocolRegistry.sol:SafeProtocolRegistry",
										"label": "listedAt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 64,
										"contract": "SafeProtocolRegistry.sol:SafeProtocolRegistry",
										"label": "flaggedAt",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 67,
										"contract": "SafeProtocolRegistry.sol:SafeProtocolRegistry",
										"label": "integrationType",
										"offset": 16,
										"slot": "0",
										"type": "t_enum(IntegrationType)334"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addIntegration(address,uint8)": {
								"notice": "Allows only owner to add a integration. A integration can be any address including zero address for now.         This function does not permit adding a integration twice. This function validates if integration supports expected interfaceId."
							},
							"check(address)": {
								"notice": "This function returns information about a integration"
							},
							"flagIntegration(address)": {
								"notice": "Allows only owner to flad a integration. Only previously added integration can be flagged.         This function does not permit flagging a integration twice.         A integration can be any address including zero address for now."
							}
						},
						"version": 1
					}
				}
			},
			"common/Enum.sol": {
				"Enum": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"common/Enum.sol\":\"Enum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"common/Enum.sol\":{\"keccak256\":\"0xf96606b2d5e0faf667ceb2ae0b29b617c99d8ad6d36b0e5db2aa4e6e10c18e28\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://936e5556c3bcfc7cffee8b362abf2b198871765219731f0ce03188ecce51e19e\",\"dweb:/ipfs/QmYDebakEh2N344igmXv8JtAqMAktAm5TuW49RiCoNhvxK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/Integrations.sol": {
				"ISafeProtocolFunctionHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "handle",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "metadataProvider",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "providerType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "location",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"handle(address,address,uint256,bytes)": {
								"params": {
									"data": "Arbitrary length bytes",
									"safe": "A Safe instance",
									"sender": "Address of the sender",
									"value": "Amount of ETH"
								},
								"returns": {
									"result": "Arbitrary length bytes containing result of the operation"
								}
							},
							"metadataProvider()": {
								"returns": {
									"location": "bytes",
									"providerType": "uint256 Type of metadata provider"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "ISafeProtocolFunctionHandler - An interface that a Safe function handler should implement to handle static calls.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"handle(address,address,uint256,bytes)": "25d6803f",
							"metadataProvider()": "d3d72d2a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataProvider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"providerType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"location\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handle(address,address,uint256,bytes)\":{\"params\":{\"data\":\"Arbitrary length bytes\",\"safe\":\"A Safe instance\",\"sender\":\"Address of the sender\",\"value\":\"Amount of ETH\"},\"returns\":{\"result\":\"Arbitrary length bytes containing result of the operation\"}},\"metadataProvider()\":{\"returns\":{\"location\":\"bytes\",\"providerType\":\"uint256 Type of metadata provider\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"ISafeProtocolFunctionHandler - An interface that a Safe function handler should implement to handle static calls.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handle(address,address,uint256,bytes)\":{\"notice\":\"Handles calls to the Safe contract forwarded by the fallback function.\"},\"metadataProvider()\":{\"notice\":\"A function that returns information about the type of metadata provider and its location.         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\"}},\"notice\":\"In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe         and enable the contract implementing ISafeProtocolFunctionHandler interface as a function handler in the         SafeProtocolManager for the specific function identifier.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/Integrations.sol\":\"ISafeProtocolFunctionHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"DataTypes.sol\":{\"keccak256\":\"0xba96a56684fa0731bb1553f865b156083c24abaeb3212d4704aaf5a76f36ba6b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fb9136ce85f8f5ea65d12c09ba433486afd10c23951ccfb583456a24831a6c6c\",\"dweb:/ipfs/QmfD95cswa47jGrmhDb2yrTEcGM5RLkESxWCZHMGiXYPe3\"]},\"interfaces/Integrations.sol\":{\"keccak256\":\"0x6a8e85474431c7cff76528d144353a6d9d318cfbe7b6375423b6d4117c33b597\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4cb3d9a800e0de8ddc43cbdb249b9ffd69c14a750c389d7139f8231b189987ad\",\"dweb:/ipfs/QmYrsATZ5L9XL28vgLqhWyb7hVQfhC45VRtA2A9jA7wXSA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"handle(address,address,uint256,bytes)": {
								"notice": "Handles calls to the Safe contract forwarded by the fallback function."
							},
							"metadataProvider()": {
								"notice": "A function that returns information about the type of metadata provider and its location.         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/."
							}
						},
						"notice": "In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe         and enable the contract implementing ISafeProtocolFunctionHandler interface as a function handler in the         SafeProtocolManager for the specific function identifier.",
						"version": 1
					}
				},
				"ISafeProtocolHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "preCheckData",
									"type": "bytes"
								}
							],
							"name": "postCheck",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address payable",
													"name": "to",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												}
											],
											"internalType": "struct SafeProtocolAction[]",
											"name": "actions",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "metadataHash",
											"type": "bytes32"
										}
									],
									"internalType": "struct SafeTransaction",
									"name": "tx",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "executionType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "executionMeta",
									"type": "bytes"
								}
							],
							"name": "preCheck",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "preCheckData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address payable",
													"name": "to",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												}
											],
											"internalType": "struct SafeProtocolAction",
											"name": "action",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "metadataHash",
											"type": "bytes32"
										}
									],
									"internalType": "struct SafeRootAccess",
									"name": "rootAccess",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "executionType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "executionMeta",
									"type": "bytes"
								}
							],
							"name": "preCheckRootAccess",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "preCheckData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"postCheck(address,bool,bytes)": {
								"details": "Add custom logic in this function to validate the post-state after the transaction is executed.",
								"params": {
									"preCheckData": "Arbitrary length bytes that was returned by during pre-check of the transaction.",
									"safe": "ISafe",
									"success": "bool"
								}
							},
							"preCheck(address,((address,uint256,bytes)[],uint256,bytes32),uint256,bytes)": {
								"details": "Add custom logic in this function to validate the pre-state and contents of transaction for non-root access.",
								"params": {
									"executionMeta": "Arbitrary length of bytes",
									"executionType": "uint256",
									"safe": "A Safe instance",
									"tx": "A struct of type SafeTransaction that contains the details of the transaction."
								},
								"returns": {
									"preCheckData": "bytes"
								}
							},
							"preCheckRootAccess(address,((address,uint256,bytes),uint256,bytes32),uint256,bytes)": {
								"details": "Add custom logic in this function to validate the pre-state and contents of transaction for root access.",
								"params": {
									"executionMeta": "bytes",
									"executionType": "uint256",
									"rootAccess": "DataTypes.SafeRootAccess",
									"safe": "A Safe instance"
								},
								"returns": {
									"preCheckData": "bytes"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "ISafeProtocolHooks - An interface that a contract should implement to be enabled as hooks.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"postCheck(address,bool,bytes)": "f44d4ca3",
							"preCheck(address,((address,uint256,bytes)[],uint256,bytes32),uint256,bytes)": "176ae7b7",
							"preCheckRootAccess(address,((address,uint256,bytes),uint256,bytes32),uint256,bytes)": "7359b742",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"preCheckData\",\"type\":\"bytes\"}],\"name\":\"postCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct SafeProtocolAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"metadataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct SafeTransaction\",\"name\":\"tx\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"executionType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"executionMeta\",\"type\":\"bytes\"}],\"name\":\"preCheck\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"preCheckData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct SafeProtocolAction\",\"name\":\"action\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"metadataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct SafeRootAccess\",\"name\":\"rootAccess\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"executionType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"executionMeta\",\"type\":\"bytes\"}],\"name\":\"preCheckRootAccess\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"preCheckData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postCheck(address,bool,bytes)\":{\"details\":\"Add custom logic in this function to validate the post-state after the transaction is executed.\",\"params\":{\"preCheckData\":\"Arbitrary length bytes that was returned by during pre-check of the transaction.\",\"safe\":\"ISafe\",\"success\":\"bool\"}},\"preCheck(address,((address,uint256,bytes)[],uint256,bytes32),uint256,bytes)\":{\"details\":\"Add custom logic in this function to validate the pre-state and contents of transaction for non-root access.\",\"params\":{\"executionMeta\":\"Arbitrary length of bytes\",\"executionType\":\"uint256\",\"safe\":\"A Safe instance\",\"tx\":\"A struct of type SafeTransaction that contains the details of the transaction.\"},\"returns\":{\"preCheckData\":\"bytes\"}},\"preCheckRootAccess(address,((address,uint256,bytes),uint256,bytes32),uint256,bytes)\":{\"details\":\"Add custom logic in this function to validate the pre-state and contents of transaction for root access.\",\"params\":{\"executionMeta\":\"bytes\",\"executionType\":\"uint256\",\"rootAccess\":\"DataTypes.SafeRootAccess\",\"safe\":\"A Safe instance\"},\"returns\":{\"preCheckData\":\"bytes\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"ISafeProtocolHooks - An interface that a contract should implement to be enabled as hooks.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postCheck(address,bool,bytes)\":{\"notice\":\"A function that will be called by a safe after the execution of a transaction if the hooks are enabled. Hooks should revert if the post state of after the transaction is not as expected.\"},\"preCheck(address,((address,uint256,bytes)[],uint256,bytes32),uint256,bytes)\":{\"notice\":\"A function that will be called by a Safe before the execution of a transaction if the hooks are enabled\"},\"preCheckRootAccess(address,((address,uint256,bytes),uint256,bytes32),uint256,bytes)\":{\"notice\":\"A function that will be called by a safe before the execution of a transaction if the hooks are enabled and         transaction requies tool access.\"}},\"notice\":\"In Safe{Core} Protocol, hooks can approve or deny transactions based on the logic it implements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/Integrations.sol\":\"ISafeProtocolHooks\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"DataTypes.sol\":{\"keccak256\":\"0xba96a56684fa0731bb1553f865b156083c24abaeb3212d4704aaf5a76f36ba6b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fb9136ce85f8f5ea65d12c09ba433486afd10c23951ccfb583456a24831a6c6c\",\"dweb:/ipfs/QmfD95cswa47jGrmhDb2yrTEcGM5RLkESxWCZHMGiXYPe3\"]},\"interfaces/Integrations.sol\":{\"keccak256\":\"0x6a8e85474431c7cff76528d144353a6d9d318cfbe7b6375423b6d4117c33b597\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4cb3d9a800e0de8ddc43cbdb249b9ffd69c14a750c389d7139f8231b189987ad\",\"dweb:/ipfs/QmYrsATZ5L9XL28vgLqhWyb7hVQfhC45VRtA2A9jA7wXSA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"postCheck(address,bool,bytes)": {
								"notice": "A function that will be called by a safe after the execution of a transaction if the hooks are enabled. Hooks should revert if the post state of after the transaction is not as expected."
							},
							"preCheck(address,((address,uint256,bytes)[],uint256,bytes32),uint256,bytes)": {
								"notice": "A function that will be called by a Safe before the execution of a transaction if the hooks are enabled"
							},
							"preCheckRootAccess(address,((address,uint256,bytes),uint256,bytes32),uint256,bytes)": {
								"notice": "A function that will be called by a safe before the execution of a transaction if the hooks are enabled and         transaction requies tool access."
							}
						},
						"notice": "In Safe{Core} Protocol, hooks can approve or deny transactions based on the logic it implements.",
						"version": 1
					}
				},
				"ISafeProtocolPlugin": {
					"abi": [
						{
							"inputs": [],
							"name": "metadataProvider",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "providerType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "location",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiresRootAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "requiresRootAccess",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"metadataProvider()": {
								"returns": {
									"location": "bytes",
									"providerType": "uint256 Type of metadata provider"
								}
							},
							"name()": {
								"returns": {
									"name": "string name of the plugin"
								}
							},
							"requiresRootAccess()": {
								"returns": {
									"requiresRootAccess": "True if root access is required, false otherwise."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"version()": {
								"returns": {
									"version": "string version of the plugin"
								}
							}
						},
						"title": "ISafeProtocolPlugin - An interface that a Safe plugin should implement",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"metadataProvider()": "d3d72d2a",
							"name()": "06fdde03",
							"requiresRootAccess()": "be193d27",
							"supportsInterface(bytes4)": "01ffc9a7",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"metadataProvider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"providerType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"location\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiresRootAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"requiresRootAccess\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"metadataProvider()\":{\"returns\":{\"location\":\"bytes\",\"providerType\":\"uint256 Type of metadata provider\"}},\"name()\":{\"returns\":{\"name\":\"string name of the plugin\"}},\"requiresRootAccess()\":{\"returns\":{\"requiresRootAccess\":\"True if root access is required, false otherwise.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"version()\":{\"returns\":{\"version\":\"string version of the plugin\"}}},\"title\":\"ISafeProtocolPlugin - An interface that a Safe plugin should implement\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"metadataProvider()\":{\"notice\":\"A function that returns information about the type of metadata provider and its location.         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\"},\"name()\":{\"notice\":\"A funtion that returns name of the plugin\"},\"requiresRootAccess()\":{\"notice\":\"A function that indicates if the plugin requires root access to a Safe.\"},\"version()\":{\"notice\":\"A function that returns version of the plugin\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/Integrations.sol\":\"ISafeProtocolPlugin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"DataTypes.sol\":{\"keccak256\":\"0xba96a56684fa0731bb1553f865b156083c24abaeb3212d4704aaf5a76f36ba6b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fb9136ce85f8f5ea65d12c09ba433486afd10c23951ccfb583456a24831a6c6c\",\"dweb:/ipfs/QmfD95cswa47jGrmhDb2yrTEcGM5RLkESxWCZHMGiXYPe3\"]},\"interfaces/Integrations.sol\":{\"keccak256\":\"0x6a8e85474431c7cff76528d144353a6d9d318cfbe7b6375423b6d4117c33b597\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4cb3d9a800e0de8ddc43cbdb249b9ffd69c14a750c389d7139f8231b189987ad\",\"dweb:/ipfs/QmYrsATZ5L9XL28vgLqhWyb7hVQfhC45VRtA2A9jA7wXSA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"metadataProvider()": {
								"notice": "A function that returns information about the type of metadata provider and its location.         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/."
							},
							"name()": {
								"notice": "A funtion that returns name of the plugin"
							},
							"requiresRootAccess()": {
								"notice": "A function that indicates if the plugin requires root access to a Safe."
							},
							"version()": {
								"notice": "A function that returns version of the plugin"
							}
						},
						"version": 1
					}
				},
				"ISafeProtocolStaticFunctionHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "handle",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "metadataProvider",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "providerType",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "location",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"handle(address,address,uint256,bytes)": {
								"params": {
									"data": "Arbitrary length bytes",
									"safe": "A Safe instance",
									"sender": "Address of the sender",
									"value": "Amount of ETH"
								},
								"returns": {
									"result": "Arbitrary length bytes containing result of the operation"
								}
							},
							"metadataProvider()": {
								"returns": {
									"location": "bytes",
									"providerType": "uint256 Type of metadata provider"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "ISafeProtocolStaticFunctionHandler - An interface that a Safe functionhandler should implement in case when handling static calls",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"handle(address,address,uint256,bytes)": "25d6803f",
							"metadataProvider()": "d3d72d2a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataProvider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"providerType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"location\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handle(address,address,uint256,bytes)\":{\"params\":{\"data\":\"Arbitrary length bytes\",\"safe\":\"A Safe instance\",\"sender\":\"Address of the sender\",\"value\":\"Amount of ETH\"},\"returns\":{\"result\":\"Arbitrary length bytes containing result of the operation\"}},\"metadataProvider()\":{\"returns\":{\"location\":\"bytes\",\"providerType\":\"uint256 Type of metadata provider\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"ISafeProtocolStaticFunctionHandler - An interface that a Safe functionhandler should implement in case when handling static calls\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handle(address,address,uint256,bytes)\":{\"notice\":\"Handles static calls to the Safe contract forwarded by the fallback function.\"},\"metadataProvider()\":{\"notice\":\"A function that returns information about the type of metadata provider and its location.         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\"}},\"notice\":\"In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe         and enable the contract implementing ISafeProtocolStaticFunctionHandler interface as a function handler in the         SafeProtocolManager for the specific function identifier.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/Integrations.sol\":\"ISafeProtocolStaticFunctionHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"DataTypes.sol\":{\"keccak256\":\"0xba96a56684fa0731bb1553f865b156083c24abaeb3212d4704aaf5a76f36ba6b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fb9136ce85f8f5ea65d12c09ba433486afd10c23951ccfb583456a24831a6c6c\",\"dweb:/ipfs/QmfD95cswa47jGrmhDb2yrTEcGM5RLkESxWCZHMGiXYPe3\"]},\"interfaces/Integrations.sol\":{\"keccak256\":\"0x6a8e85474431c7cff76528d144353a6d9d318cfbe7b6375423b6d4117c33b597\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4cb3d9a800e0de8ddc43cbdb249b9ffd69c14a750c389d7139f8231b189987ad\",\"dweb:/ipfs/QmYrsATZ5L9XL28vgLqhWyb7hVQfhC45VRtA2A9jA7wXSA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"handle(address,address,uint256,bytes)": {
								"notice": "Handles static calls to the Safe contract forwarded by the fallback function."
							},
							"metadataProvider()": {
								"notice": "A function that returns information about the type of metadata provider and its location.         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/."
							}
						},
						"notice": "In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe         and enable the contract implementing ISafeProtocolStaticFunctionHandler interface as a function handler in the         SafeProtocolManager for the specific function identifier.",
						"version": 1
					}
				}
			},
			"interfaces/Registry.sol": {
				"ISafeProtocolRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "integration",
									"type": "address"
								}
							],
							"name": "check",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "listedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "flaggedAt",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"check(address)": {
								"params": {
									"integration": "Address of the integration that should be checked"
								},
								"returns": {
									"flaggedAt": "MUST return the block number when the integration was listed in the flagged as faulty (or 0 if not flagged)",
									"listedAt": "MUST return the block number when the integration was listed in the registry (or 0 if not listed)"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"check(address)": "c23697a8",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integration\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"listedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flaggedAt\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check(address)\":{\"params\":{\"integration\":\"Address of the integration that should be checked\"},\"returns\":{\"flaggedAt\":\"MUST return the block number when the integration was listed in the flagged as faulty (or 0 if not flagged)\",\"listedAt\":\"MUST return the block number when the integration was listed in the registry (or 0 if not listed)\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/Registry.sol\":\"ISafeProtocolRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"interfaces/Registry.sol\":{\"keccak256\":\"0x326d17098b54c6c7f777f329e7db6447e5955f69825b985167b9761d54191e46\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://207b876255d60c9d3b78bac355817e7ff952c39bd2805c0f0e0fa0ce14fbffd1\",\"dweb:/ipfs/QmNfaJgDfghYoPTumiLvy8TaZNfiNGDCLwENpDgsxmVq3m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ownable/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownable/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ownable/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownable/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ownable/Ownable.sol\":{\"keccak256\":\"0x673b1da37f2744f44a9deb6a48a75634f35acb19cca8802ff92df829e381b0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e33fb87c6b3d834d9c884d96f9afb2259b765e1a31cec90bc1808e0a57e98d9\",\"dweb:/ipfs/Qmct4JbYxL1HEDQ6odktWtNUsRC6jxx6eDmbmuSpnVspZs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 519,
								"contract": "ownable/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ownable/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownable/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ownable/Ownable.sol\":{\"keccak256\":\"0x673b1da37f2744f44a9deb6a48a75634f35acb19cca8802ff92df829e381b0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e33fb87c6b3d834d9c884d96f9afb2259b765e1a31cec90bc1808e0a57e98d9\",\"dweb:/ipfs/Qmct4JbYxL1HEDQ6odktWtNUsRC6jxx6eDmbmuSpnVspZs\"]},\"ownable/Ownable2Step.sol\":{\"keccak256\":\"0x2dea0183b9f457f9827b30a5c07797252fe348a52b7bb65b3391c6a3ae9f159a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32647c7ad298438546cdedb9d16827fd1616a19717189cd580c76252c17c2632\",\"dweb:/ipfs/QmXdTR2C8uGedwnaZi81gKRc6rU8fpC4oAmSPLMHSrn96c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 519,
								"contract": "ownable/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 632,
								"contract": "ownable/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> SafeProtocolRegistry.sol:95:5:\n   |\n95 |     function supportsInterface(bytes4 interfaceId) external view override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 4781,
					"file": "SafeProtocolRegistry.sol",
					"start": 4572
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						]
					},
					"id": 12,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "431:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "817:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "860:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:0"
									},
									"scope": 11,
									"src": "790:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "421:447:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:0"
				},
				"id": 0
			},
			"DataTypes.sol": {
				"ast": {
					"absolutePath": "DataTypes.sol",
					"exportedSymbols": {
						"SafeProtocolAction": [
							20
						],
						"SafeRootAccess": [
							37
						],
						"SafeTransaction": [
							29
						]
					},
					"id": 38,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:1"
						},
						{
							"canonicalName": "SafeProtocolAction",
							"id": 20,
							"members": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "120:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 20,
									"src": "104:18:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "104:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "137:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 20,
									"src": "129:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "129:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "155:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 20,
									"src": "149:10:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 18,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "149:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SafeProtocolAction",
							"nameLocation": "78:18:1",
							"nodeType": "StructDefinition",
							"scope": 38,
							"src": "71:92:1",
							"visibility": "public"
						},
						{
							"canonicalName": "SafeTransaction",
							"id": 29,
							"members": [
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "actions",
									"nameLocation": "218:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 29,
									"src": "197:28:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_SafeProtocolAction_$20_storage_$dyn_storage_ptr",
										"typeString": "struct SafeProtocolAction[]"
									},
									"typeName": {
										"baseType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "SafeProtocolAction",
												"nameLocations": [
													"197:18:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 20,
												"src": "197:18:1"
											},
											"referencedDeclaration": 20,
											"src": "197:18:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_SafeProtocolAction_$20_storage_ptr",
												"typeString": "struct SafeProtocolAction"
											}
										},
										"id": 23,
										"nodeType": "ArrayTypeName",
										"src": "197:20:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_SafeProtocolAction_$20_storage_$dyn_storage_ptr",
											"typeString": "struct SafeProtocolAction[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "240:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 29,
									"src": "232:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "metadataHash",
									"nameLocation": "260:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 29,
									"src": "252:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SafeTransaction",
							"nameLocation": "174:15:1",
							"nodeType": "StructDefinition",
							"scope": 38,
							"src": "167:109:1",
							"visibility": "public"
						},
						{
							"canonicalName": "SafeRootAccess",
							"id": 37,
							"members": [
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "action",
									"nameLocation": "328:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "309:25:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SafeProtocolAction_$20_storage_ptr",
										"typeString": "struct SafeProtocolAction"
									},
									"typeName": {
										"id": 31,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 30,
											"name": "SafeProtocolAction",
											"nameLocations": [
												"309:18:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 20,
											"src": "309:18:1"
										},
										"referencedDeclaration": 20,
										"src": "309:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SafeProtocolAction_$20_storage_ptr",
											"typeString": "struct SafeProtocolAction"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "349:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "341:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "metadataHash",
									"nameLocation": "369:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "361:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 35,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SafeRootAccess",
							"nameLocation": "287:14:1",
							"nodeType": "StructDefinition",
							"scope": 38,
							"src": "280:105:1",
							"visibility": "public"
						}
					],
					"src": "43:344:1"
				},
				"id": 1
			},
			"SafeProtocolRegistry.sol": {
				"ast": {
					"absolutePath": "SafeProtocolRegistry.sol",
					"exportedSymbols": {
						"Enum": [
							339
						],
						"IERC165": [
							11
						],
						"ISafeProtocolFunctionHandler": [
							372
						],
						"ISafeProtocolHooks": [
							442
						],
						"ISafeProtocolPlugin": [
							472
						],
						"ISafeProtocolRegistry": [
							489
						],
						"Ownable2Step": [
							707
						],
						"SafeProtocolRegistry": [
							328
						]
					},
					"id": 329,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 39,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:2"
						},
						{
							"absolutePath": "interfaces/Registry.sol",
							"file": "./interfaces/Registry.sol",
							"id": 41,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 490,
							"src": "69:64:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 40,
										"name": "ISafeProtocolRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 489,
										"src": "77:21:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "ownable/Ownable2Step.sol",
							"file": "./ownable/Ownable2Step.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 708,
							"src": "135:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 42,
										"name": "Ownable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 707,
										"src": "143:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 45,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 12,
							"src": "193:80:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 44,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 11,
										"src": "201:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "common/Enum.sol",
							"file": "./common/Enum.sol",
							"id": 47,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 340,
							"src": "275:39:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 46,
										"name": "Enum",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 339,
										"src": "283:4:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/Integrations.sol",
							"file": "./interfaces/Integrations.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 473,
							"src": "316:116:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "ISafeProtocolFunctionHandler",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 372,
										"src": "324:28:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 49,
										"name": "ISafeProtocolHooks",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 442,
										"src": "354:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 50,
										"name": "ISafeProtocolPlugin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 472,
										"src": "374:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 52,
										"name": "ISafeProtocolRegistry",
										"nameLocations": [
											"469:21:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 489,
										"src": "469:21:2"
									},
									"id": 53,
									"nodeType": "InheritanceSpecifier",
									"src": "469:21:2"
								},
								{
									"baseName": {
										"id": 54,
										"name": "Ownable2Step",
										"nameLocations": [
											"492:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 707,
										"src": "492:12:2"
									},
									"id": 55,
									"nodeType": "InheritanceSpecifier",
									"src": "492:12:2"
								}
							],
							"canonicalName": "SafeProtocolRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 328,
							"linearizedBaseContracts": [
								328,
								707,
								624,
								511,
								489,
								11
							],
							"name": "SafeProtocolRegistry",
							"nameLocation": "445:20:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e8828ea3",
									"id": 60,
									"mutability": "mutable",
									"name": "listedIntegrations",
									"nameLocation": "555:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "512:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
										"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo)"
									},
									"typeName": {
										"id": 59,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 56,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "512:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
											"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 58,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 57,
												"name": "IntegrationInfo",
												"nameLocations": [
													"531:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "531:15:2"
											},
											"referencedDeclaration": 68,
											"src": "531:15:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage_ptr",
												"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SafeProtocolRegistry.IntegrationInfo",
									"id": 68,
									"members": [
										{
											"constant": false,
											"id": 62,
											"mutability": "mutable",
											"name": "listedAt",
											"nameLocation": "623:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "616:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 61,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "616:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "flaggedAt",
											"nameLocation": "649:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "642:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 63,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "642:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"mutability": "mutable",
											"name": "integrationType",
											"nameLocation": "690:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "669:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_IntegrationType_$334",
												"typeString": "enum Enum.IntegrationType"
											},
											"typeName": {
												"id": 66,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 65,
													"name": "Enum.IntegrationType",
													"nameLocations": [
														"669:4:2",
														"674:15:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 334,
													"src": "669:20:2"
												},
												"referencedDeclaration": 334,
												"src": "669:20:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IntegrationType_$334",
													"typeString": "enum Enum.IntegrationType"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IntegrationInfo",
									"nameLocation": "589:15:2",
									"nodeType": "StructDefinition",
									"scope": 328,
									"src": "582:131:2",
									"visibility": "public"
								},
								{
									"errorSelector": "3bee038a",
									"id": 72,
									"name": "CannotFlagIntegration",
									"nameLocation": "727:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "757:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "749:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:21:2"
									},
									"src": "721:49:2"
								},
								{
									"errorSelector": "1bc90bc6",
									"id": 76,
									"name": "CannotAddIntegration",
									"nameLocation": "782:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "811:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "803:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:21:2"
									},
									"src": "776:48:2"
								},
								{
									"errorSelector": "be98cdba",
									"id": 82,
									"name": "IntegrationDoesNotSupportExpectedInterfaceId",
									"nameLocation": "836:44:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "889:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "881:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "expectedInterfaceId",
												"nameLocation": "909:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "902:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 79,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "902:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:49:2"
									},
									"src": "830:100:2"
								},
								{
									"anonymous": false,
									"eventSelector": "94c109d6a0f9d39b37ec79aa4e627154250f2c29adaf10079a79e29e95fefd62",
									"id": 86,
									"name": "IntegrationAdded",
									"nameLocation": "944:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "977:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "961:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:29:2"
									},
									"src": "938:52:2"
								},
								{
									"anonymous": false,
									"eventSelector": "7e4b225e43d112f7188b3064745a2e7988701d3816dee2b4613507ffaff6b302",
									"id": 90,
									"name": "IntegrationFlagged",
									"nameLocation": "1002:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "1037:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1021:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:29:2"
									},
									"src": "996:54:2"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1092:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1122:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															684
														],
														"referencedDeclaration": 684,
														"src": "1103:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1103:32:2"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1078:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1070:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:22:2"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1092:0:2"
									},
									"scope": 328,
									"src": "1058:85:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										488
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1602:185:2",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "integrationInfo",
														"nameLocation": "1636:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "1613:38:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
														},
														"typeName": {
															"id": 111,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 110,
																"name": "IntegrationInfo",
																"nameLocations": [
																	"1613:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 68,
																"src": "1613:15:2"
															},
															"referencedDeclaration": 68,
															"src": "1613:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage_ptr",
																"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"baseExpression": {
														"id": 113,
														"name": "listedIntegrations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1654:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
															"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo storage ref)"
														}
													},
													"id": 115,
													"indexExpression": {
														"id": 114,
														"name": "integration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1673:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1654:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
														"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:72:2"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 117,
														"name": "listedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1696:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 118,
															"name": "integrationInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1707:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1723:8:2",
														"memberName": "listedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "1707:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1696:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1696:35:2"
											},
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "flaggedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1742:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 123,
															"name": "integrationInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1754:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1770:9:2",
														"memberName": "flaggedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1754:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1742:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1742:37:2"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1151:351:2",
										"text": " @notice This function returns information about a integration\n @param integration Address of the integration to be checked\n @return listedAt Timestamp of listing the integration. This value will be 0 if not listed.\n @return flaggedAt Timestamp of falgging the integration. This value will be 0 if not flagged."
									},
									"functionSelector": "c23697a8",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nameLocation": "1517:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "1531:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1523:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1522:21:2"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "listedAt",
												"nameLocation": "1574:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1567:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 105,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1567:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "flaggedAt",
												"nameLocation": "1591:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1584:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 107,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1584:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:35:2"
									},
									"scope": 328,
									"src": "1508:279:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2329:1343:2",
										"statements": [
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "integrationInfo",
														"nameLocation": "2363:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "2340:38:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
														},
														"typeName": {
															"id": 140,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 139,
																"name": "IntegrationInfo",
																"nameLocations": [
																	"2340:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 68,
																"src": "2340:15:2"
															},
															"referencedDeclaration": 68,
															"src": "2340:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage_ptr",
																"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"baseExpression": {
														"id": 142,
														"name": "listedIntegrations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "2381:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
															"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo storage ref)"
														}
													},
													"id": 144,
													"indexExpression": {
														"id": 143,
														"name": "integration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2400:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2381:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
														"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2340:72:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 146,
															"name": "integrationInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2429:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2445:8:2",
														"memberName": "listedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "2429:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2457:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2429:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "2425:102:2",
												"trueBody": {
													"id": 154,
													"nodeType": "Block",
													"src": "2460:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 151,
																		"name": "integration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "2503:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "CannotAddIntegration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2482:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2482:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 153,
															"nodeType": "RevertStatement",
															"src": "2475:40:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_IntegrationType_$334",
															"typeString": "enum Enum.IntegrationType"
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 156,
															"name": "integrationType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2618:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IntegrationType_$334",
																"typeString": "enum Enum.IntegrationType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 157,
																	"name": "Enum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2637:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Enum_$339_$",
																		"typeString": "type(contract Enum)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2642:15:2",
																"memberName": "IntegrationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 334,
																"src": "2637:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IntegrationType_$334_$",
																	"typeString": "type(enum Enum.IntegrationType)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2658:5:2",
															"memberName": "Hooks",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 332,
															"src": "2637:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IntegrationType_$334",
																"typeString": "enum Enum.IntegrationType"
															}
														},
														"src": "2618:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2667:77:2",
														"subExpression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 166,
																				"name": "ISafeProtocolHooks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 442,
																				"src": "2712:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$442_$",
																					"typeString": "type(contract ISafeProtocolHooks)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$442_$",
																					"typeString": "type(contract ISafeProtocolHooks)"
																				}
																			],
																			"id": 165,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "2707:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2707:24:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolHooks_$442",
																			"typeString": "type(contract ISafeProtocolHooks)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2732:11:2",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "2707:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 162,
																			"name": "integration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "2676:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 161,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "2668:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2668:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC165_$11",
																		"typeString": "contract IERC165"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2689:17:2",
																"memberName": "supportsInterface",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "2668:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (bytes4) view external returns (bool)"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:76:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2618:126:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_IntegrationType_$334",
																"typeString": "enum Enum.IntegrationType"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "integrationType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "2909:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 182,
																		"name": "Enum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "2928:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Enum_$339_$",
																			"typeString": "type(contract Enum)"
																		}
																	},
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2933:15:2",
																	"memberName": "IntegrationType",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "2928:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_IntegrationType_$334_$",
																		"typeString": "type(enum Enum.IntegrationType)"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2949:6:2",
																"memberName": "Plugin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 331,
																"src": "2928:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																}
															},
															"src": "2909:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2959:78:2",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 191,
																					"name": "ISafeProtocolPlugin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "3004:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ISafeProtocolPlugin_$472_$",
																						"typeString": "type(contract ISafeProtocolPlugin)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_contract$_ISafeProtocolPlugin_$472_$",
																						"typeString": "type(contract ISafeProtocolPlugin)"
																					}
																				],
																				"id": 190,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "2999:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2999:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolPlugin_$472",
																				"typeString": "type(contract ISafeProtocolPlugin)"
																			}
																		},
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3025:11:2",
																		"memberName": "interfaceId",
																		"nodeType": "MemberAccess",
																		"src": "2999:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 187,
																				"name": "integration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "2968:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 186,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "2960:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2960:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$11",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2981:17:2",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 10,
																	"src": "2960:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2960:77:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2909:128:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 206,
																	"name": "integrationType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "3203:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IntegrationType_$334",
																		"typeString": "enum Enum.IntegrationType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 207,
																			"name": "Enum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "3222:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Enum_$339_$",
																				"typeString": "type(contract Enum)"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3227:15:2",
																		"memberName": "IntegrationType",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 334,
																		"src": "3222:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_IntegrationType_$334_$",
																			"typeString": "type(enum Enum.IntegrationType)"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3243:15:2",
																	"memberName": "FunctionHandler",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 333,
																	"src": "3222:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IntegrationType_$334",
																		"typeString": "enum Enum.IntegrationType"
																	}
																},
																"src": "3203:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3275:87:2",
																"subExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 216,
																						"name": "ISafeProtocolFunctionHandler",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 372,
																						"src": "3320:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ISafeProtocolFunctionHandler_$372_$",
																							"typeString": "type(contract ISafeProtocolFunctionHandler)"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_contract$_ISafeProtocolFunctionHandler_$372_$",
																							"typeString": "type(contract ISafeProtocolFunctionHandler)"
																						}
																					],
																					"id": 215,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "3315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3315:34:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolFunctionHandler_$372",
																					"typeString": "type(contract ISafeProtocolFunctionHandler)"
																				}
																			},
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3350:11:2",
																			"memberName": "interfaceId",
																			"nodeType": "MemberAccess",
																			"src": "3315:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 212,
																					"name": "integration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 131,
																					"src": "3284:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 211,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "3276:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																					"typeString": "type(contract IERC165)"
																				}
																			},
																			"id": 213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3276:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC165_$11",
																				"typeString": "contract IERC165"
																			}
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3297:17:2",
																		"memberName": "supportsInterface",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "3276:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (bytes4) view external returns (bool)"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3276:86:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3203:159:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 231,
														"nodeType": "IfStatement",
														"src": "3185:328:2",
														"trueBody": {
															"id": 230,
															"nodeType": "Block",
															"src": "3374:139:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 223,
																				"name": "integration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "3441:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 225,
																							"name": "ISafeProtocolFunctionHandler",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 372,
																							"src": "3459:28:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ISafeProtocolFunctionHandler_$372_$",
																								"typeString": "type(contract ISafeProtocolFunctionHandler)"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_contract$_ISafeProtocolFunctionHandler_$372_$",
																								"typeString": "type(contract ISafeProtocolFunctionHandler)"
																							}
																						],
																						"id": 224,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "3454:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 226,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3454:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolFunctionHandler_$372",
																						"typeString": "type(contract ISafeProtocolFunctionHandler)"
																					}
																				},
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3489:11:2",
																				"memberName": "interfaceId",
																				"nodeType": "MemberAccess",
																				"src": "3454:46:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 222,
																			"name": "IntegrationDoesNotSupportExpectedInterfaceId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "3396:44:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes4_$returns$__$",
																				"typeString": "function (address,bytes4) pure"
																			}
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3396:105:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 229,
																	"nodeType": "RevertStatement",
																	"src": "3389:112:2"
																}
															]
														}
													},
													"id": 232,
													"nodeType": "IfStatement",
													"src": "2891:622:2",
													"trueBody": {
														"id": 205,
														"nodeType": "Block",
														"src": "3049:130:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 198,
																			"name": "integration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "3116:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 200,
																						"name": "ISafeProtocolPlugin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 472,
																						"src": "3134:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ISafeProtocolPlugin_$472_$",
																							"typeString": "type(contract ISafeProtocolPlugin)"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_contract$_ISafeProtocolPlugin_$472_$",
																							"typeString": "type(contract ISafeProtocolPlugin)"
																						}
																					],
																					"id": 199,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "3129:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3129:25:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolPlugin_$472",
																					"typeString": "type(contract ISafeProtocolPlugin)"
																				}
																			},
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3155:11:2",
																			"memberName": "interfaceId",
																			"nodeType": "MemberAccess",
																			"src": "3129:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 197,
																		"name": "IntegrationDoesNotSupportExpectedInterfaceId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 82,
																		"src": "3071:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes4_$returns$__$",
																			"typeString": "function (address,bytes4) pure"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3071:96:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 204,
																"nodeType": "RevertStatement",
																"src": "3064:103:2"
															}
														]
													}
												},
												"id": 233,
												"nodeType": "IfStatement",
												"src": "2600:913:2",
												"trueBody": {
													"id": 180,
													"nodeType": "Block",
													"src": "2756:129:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 173,
																		"name": "integration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "2823:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 175,
																					"name": "ISafeProtocolHooks",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 442,
																					"src": "2841:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$442_$",
																						"typeString": "type(contract ISafeProtocolHooks)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$442_$",
																						"typeString": "type(contract ISafeProtocolHooks)"
																					}
																				],
																				"id": 174,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "2836:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2836:24:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolHooks_$442",
																				"typeString": "type(contract ISafeProtocolHooks)"
																			}
																		},
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2861:11:2",
																		"memberName": "interfaceId",
																		"nodeType": "MemberAccess",
																		"src": "2836:36:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 172,
																	"name": "IntegrationDoesNotSupportExpectedInterfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "2778:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes4_$returns$__$",
																		"typeString": "function (address,bytes4) pure"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2778:95:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 179,
															"nodeType": "RevertStatement",
															"src": "2771:102:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 234,
															"name": "listedIntegrations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "3525:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
																"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo storage ref)"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "integration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3544:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3525:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 240,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3582:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3588:9:2",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3582:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3575:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 238,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3575:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3575:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3600:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 244,
																"name": "integrationType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "3603:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																}
															],
															"id": 237,
															"name": "IntegrationInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "3559:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_IntegrationInfo_$68_storage_ptr_$",
																"typeString": "type(struct SafeProtocolRegistry.IntegrationInfo storage pointer)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3559:60:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
														}
													},
													"src": "3525:94:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
														"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "3525:94:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "integration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3652:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "IntegrationAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "3635:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3635:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "EmitStatement",
												"src": "3630:34:2"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1795:418:2",
										"text": " @notice Allows only owner to add a integration. A integration can be any address including zero address for now.\n         This function does not permit adding a integration twice. This function validates if integration supports expected interfaceId.\n @param integration Address of the integration\n @param integrationType Enum.IntegrationType indicating the type of integration"
									},
									"functionSelector": "e71d097b",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyOwner",
												"nameLocations": [
													"2319:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 543,
												"src": "2319:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2319:9:2"
										}
									],
									"name": "addIntegration",
									"nameLocation": "2228:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "2251:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2243:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "integrationType",
												"nameLocation": "2285:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2264:36:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IntegrationType_$334",
													"typeString": "enum Enum.IntegrationType"
												},
												"typeName": {
													"id": 133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 132,
														"name": "Enum.IntegrationType",
														"nameLocations": [
															"2264:4:2",
															"2269:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 334,
														"src": "2264:20:2"
													},
													"referencedDeclaration": 334,
													"src": "2264:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IntegrationType_$334",
														"typeString": "enum Enum.IntegrationType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:59:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2329:0:2"
									},
									"scope": 328,
									"src": "2219:1453:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4081:483:2",
										"statements": [
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "integrationInfo",
														"nameLocation": "4115:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "4092:38:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
														},
														"typeName": {
															"id": 262,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 261,
																"name": "IntegrationInfo",
																"nameLocations": [
																	"4092:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 68,
																"src": "4092:15:2"
															},
															"referencedDeclaration": 68,
															"src": "4092:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage_ptr",
																"typeString": "struct SafeProtocolRegistry.IntegrationInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"baseExpression": {
														"id": 264,
														"name": "listedIntegrations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "4133:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
															"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo storage ref)"
														}
													},
													"id": 266,
													"indexExpression": {
														"id": 265,
														"name": "integration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4152:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4133:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
														"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4092:72:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 268,
																"name": "integrationInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "4181:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																	"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4197:8:2",
															"memberName": "listedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 62,
															"src": "4181:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4209:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4181:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 272,
																"name": "integrationInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "4214:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																	"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4230:9:2",
															"memberName": "flaggedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "4214:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4243:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4214:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4181:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "4177:137:2",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "4246:68:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "integration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "4290:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "CannotFlagIntegration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "4268:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4268:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "4261:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 283,
															"name": "listedIntegrations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "4326:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IntegrationInfo_$68_storage_$",
																"typeString": "mapping(address => struct SafeProtocolRegistry.IntegrationInfo storage ref)"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "integration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4345:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4326:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 287,
																	"name": "integrationInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "4390:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																		"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4406:8:2",
																"memberName": "listedAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 62,
																"src": "4390:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 291,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4436:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4442:9:2",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4436:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4429:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 289,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "4429:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4429:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"expression": {
																	"id": 294,
																	"name": "integrationInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "4467:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
																		"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4483:15:2",
																"memberName": "integrationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 67,
																"src": "4467:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_enum$_IntegrationType_$334",
																	"typeString": "enum Enum.IntegrationType"
																}
															],
															"id": 286,
															"name": "IntegrationInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "4360:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_IntegrationInfo_$68_storage_ptr_$",
																"typeString": "type(struct SafeProtocolRegistry.IntegrationInfo storage pointer)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4360:149:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IntegrationInfo_$68_memory_ptr",
															"typeString": "struct SafeProtocolRegistry.IntegrationInfo memory"
														}
													},
													"src": "4326:183:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IntegrationInfo_$68_storage",
														"typeString": "struct SafeProtocolRegistry.IntegrationInfo storage ref"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4326:183:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 300,
															"name": "integration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4544:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 299,
														"name": "IntegrationFlagged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "4525:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4525:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "EmitStatement",
												"src": "4520:36:2"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "3680:330:2",
										"text": " @notice Allows only owner to flad a integration. Only previously added integration can be flagged.\n         This function does not permit flagging a integration twice.\n         A integration can be any address including zero address for now.\n @param integration Address of the integration"
									},
									"functionSelector": "77e41fe9",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 258,
												"name": "onlyOwner",
												"nameLocations": [
													"4071:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 543,
												"src": "4071:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4071:9:2"
										}
									],
									"name": "flagIntegration",
									"nameLocation": "4025:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "4049:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4041:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4040:21:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4081:0:2"
									},
									"scope": 328,
									"src": "4016:548:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4657:124:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 312,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4675:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 314,
																		"name": "ISafeProtocolRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "4695:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$489_$",
																			"typeString": "type(contract ISafeProtocolRegistry)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$489_$",
																			"typeString": "type(contract ISafeProtocolRegistry)"
																		}
																	],
																	"id": 313,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4690:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:27:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolRegistry_$489",
																	"typeString": "type(contract ISafeProtocolRegistry)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4718:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "4690:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "4675:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 318,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4733:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 320,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "4753:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 319,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4748:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4748:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4762:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "4748:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "4733:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:98:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 311,
												"id": 325,
												"nodeType": "Return",
												"src": "4668:105:2"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4581:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4633:8:2"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4606:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4599:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 305,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4599:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4598:20:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4651:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4651:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:6:2"
									},
									"scope": 328,
									"src": "4572:209:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 329,
							"src": "436:4348:2",
							"usedErrors": [
								72,
								76,
								82
							],
							"usedEvents": [
								86,
								90,
								525,
								638
							]
						}
					],
					"src": "43:4743:2"
				},
				"id": 2
			},
			"common/Enum.sol": {
				"ast": {
					"absolutePath": "common/Enum.sol",
					"exportedSymbols": {
						"Enum": [
							339
						]
					},
					"id": 340,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Enum",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "Enum",
							"nameLocation": "89:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Enum.IntegrationType",
									"id": 334,
									"members": [
										{
											"id": 331,
											"name": "Plugin",
											"nameLocation": "133:6:3",
											"nodeType": "EnumValue",
											"src": "133:6:3"
										},
										{
											"id": 332,
											"name": "Hooks",
											"nameLocation": "150:5:3",
											"nodeType": "EnumValue",
											"src": "150:5:3"
										},
										{
											"id": 333,
											"name": "FunctionHandler",
											"nameLocation": "166:15:3",
											"nodeType": "EnumValue",
											"src": "166:15:3"
										}
									],
									"name": "IntegrationType",
									"nameLocation": "106:15:3",
									"nodeType": "EnumDefinition",
									"src": "101:87:3"
								},
								{
									"canonicalName": "Enum.Operation",
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "196:220:3",
										"text": " @title Enum - Collection of enums used in Safe contracts.\n @dev Source: https://github.com/safe-global/safe-contracts/blob/7d767973bd21e2d621a4895fdaf9524132efc2f9/contracts/common/Enum.sol#L8"
									},
									"id": 338,
									"members": [
										{
											"id": 336,
											"name": "Call",
											"nameLocation": "448:4:3",
											"nodeType": "EnumValue",
											"src": "448:4:3"
										},
										{
											"id": 337,
											"name": "DelegateCall",
											"nameLocation": "463:12:3",
											"nodeType": "EnumValue",
											"src": "463:12:3"
										}
									],
									"name": "Operation",
									"nameLocation": "427:9:3",
									"nodeType": "EnumDefinition",
									"src": "422:60:3"
								}
							],
							"scope": 340,
							"src": "71:414:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "43:444:3"
				},
				"id": 3
			},
			"interfaces/Integrations.sol": {
				"ast": {
					"absolutePath": "interfaces/Integrations.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						],
						"ISafeProtocolFunctionHandler": [
							372
						],
						"ISafeProtocolHooks": [
							442
						],
						"ISafeProtocolPlugin": [
							472
						],
						"ISafeProtocolStaticFunctionHandler": [
							398
						],
						"SafeRootAccess": [
							37
						],
						"SafeTransaction": [
							29
						]
					},
					"id": 473,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:4"
						},
						{
							"absolutePath": "DataTypes.sol",
							"file": "../DataTypes.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 38,
							"src": "67:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 342,
										"name": "SafeTransaction",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "75:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 343,
										"name": "SafeRootAccess",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "92:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 12,
							"src": "133:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 345,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 11,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 348,
										"name": "IERC165",
										"nameLocations": [
											"803:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "803:7:4"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "803:7:4"
								}
							],
							"canonicalName": "ISafeProtocolFunctionHandler",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 347,
								"nodeType": "StructuredDocumentation",
								"src": "215:545:4",
								"text": " @title ISafeProtocolFunctionHandler - An interface that a Safe function handler should implement to handle static calls.\n @notice In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.\n         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe\n         and enable the contract implementing ISafeProtocolFunctionHandler interface as a function handler in the\n         SafeProtocolManager for the specific function identifier."
							},
							"fullyImplemented": false,
							"id": 372,
							"linearizedBaseContracts": [
								372,
								11
							],
							"name": "ISafeProtocolFunctionHandler",
							"nameLocation": "771:28:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "817:331:4",
										"text": " @notice Handles calls to the Safe contract forwarded by the fallback function.\n @param safe A Safe instance\n @param sender Address of the sender\n @param value Amount of ETH\n @param data Arbitrary length bytes\n @return result Arbitrary length bytes containing result of the operation"
									},
									"functionSelector": "25d6803f",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handle",
									"nameLocation": "1162:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "1177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1191:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1207:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1199:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1229:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1214:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1214:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:66:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1266:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1253:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1253:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:21:4"
									},
									"scope": 372,
									"src": "1153:121:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1280:333:4",
										"text": " @notice A function that returns information about the type of metadata provider and its location.\n         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\n @return providerType uint256 Type of metadata provider\n @return location bytes"
									},
									"functionSelector": "d3d72d2a",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "metadataProvider",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1643:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "providerType",
												"nameLocation": "1677:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1669:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "location",
												"nameLocation": "1704:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1691:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1691:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:45:4"
									},
									"scope": 372,
									"src": "1618:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 473,
							"src": "761:955:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 374,
										"name": "IERC165",
										"nameLocations": [
											"2334:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "2334:7:4"
									},
									"id": 375,
									"nodeType": "InheritanceSpecifier",
									"src": "2334:7:4"
								}
							],
							"canonicalName": "ISafeProtocolStaticFunctionHandler",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 373,
								"nodeType": "StructuredDocumentation",
								"src": "1718:567:4",
								"text": " @title ISafeProtocolStaticFunctionHandler - An interface that a Safe functionhandler should implement in case when handling static calls\n @notice In Safe{Core} Protocol, a function handler can be used to add additional functionality to a Safe.\n         User(s) should add SafeProtocolManager as a function handler (aka fallback handler in Safe v1.x) to the Safe\n         and enable the contract implementing ISafeProtocolStaticFunctionHandler interface as a function handler in the\n         SafeProtocolManager for the specific function identifier."
							},
							"fullyImplemented": false,
							"id": 398,
							"linearizedBaseContracts": [
								398,
								11
							],
							"name": "ISafeProtocolStaticFunctionHandler",
							"nameLocation": "2296:34:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2348:338:4",
										"text": " @notice Handles static calls to the Safe contract forwarded by the fallback function.\n @param safe A Safe instance\n @param sender Address of the sender\n @param value Amount of ETH\n @param data Arbitrary length bytes\n @return result Arbitrary length bytes containing result of the operation"
									},
									"functionSelector": "25d6803f",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handle",
									"nameLocation": "2700:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "2715:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2707:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2729:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2721:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2767:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2752:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2752:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:66:4"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2809:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2796:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2796:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:21:4"
									},
									"scope": 398,
									"src": "2691:126:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "2823:333:4",
										"text": " @notice A function that returns information about the type of metadata provider and its location.\n         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\n @return providerType uint256 Type of metadata provider\n @return location bytes"
									},
									"functionSelector": "d3d72d2a",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "metadataProvider",
									"nameLocation": "3170:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:2:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "providerType",
												"nameLocation": "3220:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3212:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "location",
												"nameLocation": "3247:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3234:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3234:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3211:45:4"
									},
									"scope": 398,
									"src": "3161:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 473,
							"src": "2286:973:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 400,
										"name": "IERC165",
										"nameLocations": [
											"3510:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "3510:7:4"
									},
									"id": 401,
									"nodeType": "InheritanceSpecifier",
									"src": "3510:7:4"
								}
							],
							"canonicalName": "ISafeProtocolHooks",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "3261:216:4",
								"text": " @title ISafeProtocolHooks - An interface that a contract should implement to be enabled as hooks.\n @notice In Safe{Core} Protocol, hooks can approve or deny transactions based on the logic it implements."
							},
							"fullyImplemented": false,
							"id": 442,
							"linearizedBaseContracts": [
								442,
								11
							],
							"name": "ISafeProtocolHooks",
							"nameLocation": "3488:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "3524:506:4",
										"text": " @notice A function that will be called by a Safe before the execution of a transaction if the hooks are enabled\n @dev Add custom logic in this function to validate the pre-state and contents of transaction for non-root access.\n @param safe A Safe instance\n @param tx A struct of type SafeTransaction that contains the details of the transaction.\n @param executionType uint256\n @param executionMeta Arbitrary length of bytes\n @return preCheckData bytes"
									},
									"functionSelector": "176ae7b7",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "preCheck",
									"nameLocation": "4044:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "4070:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4062:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4062:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "tx",
												"nameLocation": "4109:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4084:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SafeTransaction_$29_calldata_ptr",
													"typeString": "struct SafeTransaction"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "SafeTransaction",
														"nameLocations": [
															"4084:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 29,
														"src": "4084:15:4"
													},
													"referencedDeclaration": 29,
													"src": "4084:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SafeTransaction_$29_storage_ptr",
														"typeString": "struct SafeTransaction"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "executionType",
												"nameLocation": "4129:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4121:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "executionMeta",
												"nameLocation": "4167:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4152:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4052:134:4"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "preCheckData",
												"nameLocation": "4218:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4205:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:27:4"
									},
									"scope": 442,
									"src": "4035:197:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "4238:488:4",
										"text": " @notice A function that will be called by a safe before the execution of a transaction if the hooks are enabled and\n         transaction requies tool access.\n @dev Add custom logic in this function to validate the pre-state and contents of transaction for root access.\n @param safe A Safe instance\n @param rootAccess DataTypes.SafeRootAccess\n @param executionType uint256\n @param executionMeta bytes\n @return preCheckData bytes"
									},
									"functionSelector": "7359b742",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "preCheckRootAccess",
									"nameLocation": "4740:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "4776:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4768:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "rootAccess",
												"nameLocation": "4814:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4790:34:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SafeRootAccess_$37_calldata_ptr",
													"typeString": "struct SafeRootAccess"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "SafeRootAccess",
														"nameLocations": [
															"4790:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 37,
														"src": "4790:14:4"
													},
													"referencedDeclaration": 37,
													"src": "4790:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SafeRootAccess_$37_storage_ptr",
														"typeString": "struct SafeRootAccess"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "executionType",
												"nameLocation": "4842:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4834:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "executionMeta",
												"nameLocation": "4880:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4865:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4865:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4758:141:4"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "preCheckData",
												"nameLocation": "4931:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4918:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4918:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4917:27:4"
									},
									"scope": 442,
									"src": "4731:214:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "4951:481:4",
										"text": " @notice A function that will be called by a safe after the execution of a transaction if the hooks are enabled. Hooks should revert if the post state of after the transaction is not as expected.\n @dev Add custom logic in this function to validate the post-state after the transaction is executed.\n @param safe ISafe\n @param success bool\n @param preCheckData Arbitrary length bytes that was returned by during pre-check of the transaction."
									},
									"functionSelector": "f44d4ca3",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "postCheck",
									"nameLocation": "5446:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "5464:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5456:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5475:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5470:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5470:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "preCheckData",
												"nameLocation": "5499:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5484:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5484:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5455:57:4"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5521:0:4"
									},
									"scope": 442,
									"src": "5437:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 473,
							"src": "3478:2046:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 444,
										"name": "IERC165",
										"nameLocations": [
											"5648:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "5648:7:4"
									},
									"id": 445,
									"nodeType": "InheritanceSpecifier",
									"src": "5648:7:4"
								}
							],
							"canonicalName": "ISafeProtocolPlugin",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 443,
								"nodeType": "StructuredDocumentation",
								"src": "5526:88:4",
								"text": " @title ISafeProtocolPlugin - An interface that a Safe plugin should implement"
							},
							"fullyImplemented": false,
							"id": 472,
							"linearizedBaseContracts": [
								472,
								11
							],
							"name": "ISafeProtocolPlugin",
							"nameLocation": "5625:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "5662:114:4",
										"text": " @notice A funtion that returns name of the plugin\n @return name string name of the plugin"
									},
									"functionSelector": "06fdde03",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5790:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5794:2:4"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5834:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "5820:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5820:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5819:20:4"
									},
									"scope": 472,
									"src": "5781:59:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "5846:124:4",
										"text": " @notice A function that returns version of the plugin\n @return version string version of the plugin"
									},
									"functionSelector": "54fd4d50",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "5984:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5991:2:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "6017:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6017:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6016:23:4"
									},
									"scope": 472,
									"src": "5975:65:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "6046:333:4",
										"text": " @notice A function that returns information about the type of metadata provider and its location.\n         For more information on metadata provider, refer to https://github.com/safe-global/safe-core-protocol-specs/.\n @return providerType uint256 Type of metadata provider\n @return location bytes"
									},
									"functionSelector": "d3d72d2a",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "metadataProvider",
									"nameLocation": "6393:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6409:2:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "providerType",
												"nameLocation": "6443:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "6435:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "location",
												"nameLocation": "6470:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "6457:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6457:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6434:45:4"
									},
									"scope": 472,
									"src": "6384:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "6486:182:4",
										"text": " @notice A function that indicates if the plugin requires root access to a Safe.\n @return requiresRootAccess True if root access is required, false otherwise."
									},
									"functionSelector": "be193d27",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requiresRootAccess",
									"nameLocation": "6682:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6700:2:4"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "requiresRootAccess",
												"nameLocation": "6731:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "6726:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6726:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:25:4"
									},
									"scope": 472,
									"src": "6673:78:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 473,
							"src": "5615:1138:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:6712:4"
				},
				"id": 4
			},
			"interfaces/Registry.sol": {
				"ast": {
					"absolutePath": "interfaces/Registry.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						],
						"ISafeProtocolRegistry": [
							489
						]
					},
					"id": 490,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 476,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 12,
							"src": "69:80:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 475,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 11,
										"src": "77:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 477,
										"name": "IERC165",
										"nameLocations": [
											"188:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "188:7:5"
									},
									"id": 478,
									"nodeType": "InheritanceSpecifier",
									"src": "188:7:5"
								}
							],
							"canonicalName": "ISafeProtocolRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 489,
							"linearizedBaseContracts": [
								489,
								11
							],
							"name": "ISafeProtocolRegistry",
							"nameLocation": "163:21:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "203:331:5",
										"text": "@param integration Address of the integration that should be checked\n @return listedAt MUST return the block number when the integration was listed in the registry (or 0 if not listed)\n @return flaggedAt MUST return the block number when the integration was listed in the flagged as faulty (or 0 if not flagged)"
									},
									"functionSelector": "c23697a8",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nameLocation": "549:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "integration",
												"nameLocation": "563:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "555:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:21:5"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "listedAt",
												"nameLocation": "606:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "599:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 483,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "flaggedAt",
												"nameLocation": "623:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "616:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 485,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "616:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:35:5"
									},
									"scope": 489,
									"src": "540:94:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 490,
							"src": "153:484:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "43:596:5"
				},
				"id": 5
			},
			"ownable/Context.sol": {
				"ast": {
					"absolutePath": "ownable/Context.sol",
					"exportedSymbols": {
						"Context": [
							511
						]
					},
					"id": 512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 492,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 511,
							"linearizedBaseContracts": [
								511
							],
							"name": "Context",
							"nameLocation": "641:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "718:36:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 497,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 496,
												"id": 499,
												"nodeType": "Return",
												"src": "729:17:6"
											}
										]
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 511,
									"src": "656:98:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "829:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 506,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 505,
												"id": 508,
												"nodeType": "Return",
												"src": "840:15:6"
											}
										]
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:6"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "813:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 503,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:6"
									},
									"scope": 511,
									"src": "762:101:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 512,
							"src": "623:243:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "89:779:6"
				},
				"id": 6
			},
			"ownable/Ownable.sol": {
				"ast": {
					"absolutePath": "ownable/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							511
						],
						"Ownable": [
							624
						]
					},
					"id": 625,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:7"
						},
						{
							"absolutePath": "ownable/Context.sol",
							"file": "./Context.sol",
							"id": 514,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 625,
							"sourceUnit": 512,
							"src": "132:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 516,
										"name": "Context",
										"nameLocations": [
											"695:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 511,
										"src": "695:7:7"
									},
									"id": 517,
									"nodeType": "InheritanceSpecifier",
									"src": "695:7:7"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 515,
								"nodeType": "StructuredDocumentation",
								"src": "159:505:7",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 624,
							"linearizedBaseContracts": [
								624,
								511
							],
							"name": "Ownable",
							"nameLocation": "684:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 519,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "726:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "710:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 518,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 525,
									"name": "OwnershipTransferred",
									"nameLocation": "747:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "784:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "768:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "815:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "799:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:57:7"
									},
									"src": "741:84:7"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "946:51:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "976:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "957:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "957:32:7"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "833:93:7",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 535,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:2:7"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:7"
									},
									"scope": 624,
									"src": "932:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "1111:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 538,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "1122:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1122:13:7"
											},
											{
												"id": 541,
												"nodeType": "PlaceholderStatement",
												"src": "1146:1:7"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "1005:79:7",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 543,
									"name": "onlyOwner",
									"nameLocation": "1099:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:7"
									},
									"src": "1090:65:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "1291:32:7",
										"statements": [
											{
												"expression": {
													"id": 549,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 519,
													"src": "1309:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 548,
												"id": 550,
												"nodeType": "Return",
												"src": "1302:13:7"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "1163:67:7",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1245:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:2:7"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1282:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:9:7"
									},
									"scope": 624,
									"src": "1236:87:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "1446:87:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 557,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "1465:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1465:7:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 559,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "1476:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1476:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1465:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1457:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "1457:68:7"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "1331:64:7",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1410:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:2:7"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:7"
									},
									"scope": 624,
									"src": "1401:132:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "1931:49:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1969:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1961:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1961:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1961:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 572,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "1942:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "1942:30:7"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1541:330:7",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 570,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 569,
												"name": "onlyOwner",
												"nameLocations": [
													"1921:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 543,
												"src": "1921:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1921:9:7"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1886:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:7"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:7"
									},
									"scope": 624,
									"src": "1877:103:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2205:131:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "2224:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2244:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2236:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2236:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2236:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2224:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2216:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2216:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "2319:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 598,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "2300:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "2300:28:7"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "1988:141:7",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 585,
												"name": "onlyOwner",
												"nameLocations": [
													"2195:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 543,
												"src": "2195:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2195:9:7"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2144:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2170:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2162:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:18:7"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:0:7"
									},
									"scope": 624,
									"src": "2135:201:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "2559:128:7",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2578:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "2570:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2570:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"id": 611,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 519,
													"src": "2589:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:25:7"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 613,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2606:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "2615:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2606:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "2606:17:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 618,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "2660:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2670:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2639:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "EmitStatement",
												"src": "2634:45:7"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2344:146:7",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2505:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2532:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2524:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:18:7"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:0:7"
									},
									"scope": 624,
									"src": "2496:191:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 625,
							"src": "666:2024:7",
							"usedErrors": [],
							"usedEvents": [
								525
							]
						}
					],
					"src": "105:2587:7"
				},
				"id": 7
			},
			"ownable/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "ownable/Ownable2Step.sol",
					"exportedSymbols": {
						"Context": [
							511
						],
						"Ownable": [
							624
						],
						"Ownable2Step": [
							707
						]
					},
					"id": 708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:8"
						},
						{
							"absolutePath": "ownable/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 625,
							"src": "137:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 629,
										"name": "Ownable",
										"nameLocations": [
											"651:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "651:7:8"
									},
									"id": 630,
									"nodeType": "InheritanceSpecifier",
									"src": "651:7:8"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 628,
								"nodeType": "StructuredDocumentation",
								"src": "164:451:8",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 707,
							"linearizedBaseContracts": [
								707,
								624,
								511
							],
							"name": "Ownable2Step",
							"nameLocation": "635:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 632,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "682:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 707,
									"src": "666:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 638,
									"name": "OwnershipTransferStarted",
									"nameLocation": "710:24:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "751:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "735:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "782:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "766:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:57:8"
									},
									"src": "704:88:8"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "935:39:8",
										"statements": [
											{
												"expression": {
													"id": 644,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "953:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 643,
												"id": 645,
												"nodeType": "Return",
												"src": "946:20:8"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "800:67:8",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "882:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:2:8"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 707,
									"src": "873:101:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										603
									],
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1252:102:8",
										"statements": [
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "1263:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 657,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "1279:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1263:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "1263:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "1328:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "1337:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1303:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1303:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "EmitStatement",
												"src": "1298:48:8"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "982:185:8",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyOwner",
												"nameLocations": [
													"1242:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 543,
												"src": "1242:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1242:9:8"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1182:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 652,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1233:8:8"
									},
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1208:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1200:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:18:8"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:8"
									},
									"scope": 707,
									"src": "1173:181:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										623
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1616:84:8",
										"statements": [
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1627:20:8",
													"subExpression": {
														"id": 674,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "1634:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "1627:20:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "1683:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 677,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1658:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$707_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1664:18:8",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 623,
														"src": "1658:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "1658:34:8"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "1362:176:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1553:18:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 672,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1607:8:8"
									},
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1580:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1572:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:18:8"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:8"
									},
									"scope": 707,
									"src": "1544:156:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "1827:174:8",
										"statements": [
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1846:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "1838:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 688,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1838:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 690,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1855:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1855:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1838:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 694,
																	"name": "pendingOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "1886:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1886:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 696,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "1904:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1886:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																"typeString": "literal_string \"Ownable2Step: caller is not the new owner\""
															},
															"value": "Ownable2Step: caller is not the new owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																"typeString": "literal_string \"Ownable2Step: caller is not the new owner\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1878:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "1878:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1986:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 701,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															684
														],
														"referencedDeclaration": 684,
														"src": "1967:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "1967:26:8"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1708:71:8",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1794:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:2:8"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:8"
									},
									"scope": 707,
									"src": "1785:216:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 708,
							"src": "617:1387:8",
							"usedErrors": [],
							"usedEvents": [
								525,
								638
							]
						}
					],
					"src": "110:1896:8"
				},
				"id": 8
			}
		}
	}
}