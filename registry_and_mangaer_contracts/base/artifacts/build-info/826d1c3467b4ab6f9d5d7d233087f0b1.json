{
	"id": "826d1c3467b4ab6f9d5d7d233087f0b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"base/RegistryManager.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.18;\r\nimport {Ownable2Step} from \"../ownable/Ownable2Step.sol\";\r\nimport {ISafeProtocolRegistry} from \"../interfaces/Registry.sol\";\r\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\n\r\ncontract RegistryManager is Ownable2Step {\r\n    address public registry;\r\n\r\n    event RegistryChanged(address indexed oldRegistry, address indexed newRegistry);\r\n\r\n    error ModuleNotPermitted(address plugin, uint64 listedAt, uint64 flaggedAt, uint8 moduleType);\r\n    error ContractDoesNotImplementValidInterfaceId(address account);\r\n\r\n    modifier onlyPermittedModule(address module, uint8 moduleType) {\r\n        checkPermittedModule(module, moduleType);\r\n        _;\r\n    }\r\n\r\n    /*\r\n     * @notice Constructor that sets registry address and owner address.\r\n     * @param initialOwner Address of the owner for this contract.\r\n     *        Owner is expected to be an account that appends 20 bytes of caller (i.e. self) address to the calldata when calling setRegistry(address) function.\r\n     * @param _registry address of the account implementing ISafeProtocolRegistry interface.\r\n     */\r\n    constructor(address _registry, address initialOwner) {\r\n        _transferOwnership(initialOwner);\r\n        if (!IERC165(_registry).supportsInterface(type(ISafeProtocolRegistry).interfaceId)) {\r\n            revert ContractDoesNotImplementValidInterfaceId(_registry);\r\n        }\r\n        registry = _registry;\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if given module address is listed and not flagged in the registry.\r\n     *         Reverts if given address is not-listed or flagged.\r\n     * @param module Address of the module\r\n     */\r\n    function checkPermittedModule(address module, uint8 moduleType) internal view {\r\n        // Only allow registered and non-flagged modules\r\n        (uint64 listedAt, uint64 flaggedAt) = ISafeProtocolRegistry(registry).check(module, bytes32(uint256(moduleType)));\r\n        if (listedAt == 0 || flaggedAt != 0) {\r\n            revert ModuleNotPermitted(module, listedAt, flaggedAt, moduleType);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Allows only owner to update the address of a registry. Emits event RegistryChanged(egistry, newRegistry)\r\n     * @param newRegistry Address of new registry\r\n     */\r\n    function setRegistry(address newRegistry) external onlyOwner {\r\n        if (!IERC165(newRegistry).supportsInterface(type(ISafeProtocolRegistry).interfaceId)) {\r\n            revert ContractDoesNotImplementValidInterfaceId(newRegistry);\r\n        }\r\n        emit RegistryChanged(registry, newRegistry);\r\n        registry = newRegistry;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"interfaces/Registry.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.18;\r\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\n\r\ninterface ISafeProtocolRegistry is IERC165 {\r\n    /**\r\n     * @notice This function allows external contracts to check if a module is listed and not flagged as faulty in the registry.\r\n     * @param module Address of the module that should be checked\r\n     * @param data bytes32 providing more information about the module. The type of this parameter is bytes32 to provide the flexibility to the developers to interpret the value in the registry. For example, it can be moduleType and registry would then check if given address can be used as that type of module.\r\n     * @return listedAt MUST return the block number when the module was listed in the registry (or 0 if not listed)\r\n     * @return flaggedAt MUST return the block number when the module was listed in the flagged as faulty (or 0 if not flagged)\r\n     */\r\n    function check(address module, bytes32 data) external view returns (uint64 listedAt, uint64 flaggedAt);\r\n}\r\n"
			},
			"ownable/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Ownable.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership} and {acceptOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available all functions\r\n * from parent (Ownable).\r\n */\r\nabstract contract Ownable2Step is Ownable {\r\n    address private _pendingOwner;\r\n\r\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Returns the address of the pending owner.\r\n     */\r\n    function pendingOwner() public view virtual returns (address) {\r\n        return _pendingOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\r\n        _pendingOwner = newOwner;\r\n        emit OwnershipTransferStarted(owner(), newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual override {\r\n        delete _pendingOwner;\r\n        super._transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev The new owner accepts the ownership transfer.\r\n     */\r\n    function acceptOwnership() public virtual {\r\n        address sender = _msgSender();\r\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\r\n        _transferOwnership(sender);\r\n    }\r\n}\r\n"
			},
			"ownable/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"ownable/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"base/RegistryManager.sol": {
				"RegistryManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ContractDoesNotImplementValidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "plugin",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "listedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "flaggedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint8",
									"name": "moduleType",
									"type": "uint8"
								}
							],
							"name": "ModuleNotPermitted",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldRegistry",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "RegistryChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "setRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setRegistry(address)": {
								"params": {
									"newRegistry": "Address of new registry"
								}
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"base/RegistryManager.sol\":279:2665  contract RegistryManager is Ownable2Step {... */\n  mstore(0x40, 0x80)\n    /* \"base/RegistryManager.sol\":1176:1490  constructor(address _registry, address initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ownable/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"ownable/Ownable.sol\":976:988  _msgSender() */\n  tag_8\n    /* \"ownable/Ownable.sol\":976:986  _msgSender */\n  shl(0x20, tag_9)\n    /* \"ownable/Ownable.sol\":976:988  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"ownable/Ownable.sol\":957:975  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"ownable/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"base/RegistryManager.sol\":1240:1272  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"base/RegistryManager.sol\":1259:1271  initialOwner */\n  dup2\n    /* \"base/RegistryManager.sol\":1240:1258  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"base/RegistryManager.sol\":1240:1272  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"base/RegistryManager.sol\":1296:1305  _registry */\n  dup2\n    /* \"base/RegistryManager.sol\":1288:1324  IERC165(_registry).supportsInterface */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x01ffc9a7\n    /* \"base/RegistryManager.sol\":1325:1364  type(ISafeProtocolRegistry).interfaceId */\n  0x253bd7b700000000000000000000000000000000000000000000000000000000\n    /* \"base/RegistryManager.sol\":1288:1365  IERC165(_registry).supportsInterface(type(ISafeProtocolRegistry).interfaceId) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_16\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_16:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"base/RegistryManager.sol\":1283:1452  if (!IERC165(_registry).supportsInterface(type(ISafeProtocolRegistry).interfaceId)) {... */\n  tag_19\n  jumpi\n    /* \"base/RegistryManager.sol\":1430:1439  _registry */\n  dup2\n    /* \"base/RegistryManager.sol\":1389:1440  ContractDoesNotImplementValidInterfaceId(_registry) */\n  mload(0x40)\n  0x24ea21a700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"base/RegistryManager.sol\":1283:1452  if (!IERC165(_registry).supportsInterface(type(ISafeProtocolRegistry).interfaceId)) {... */\ntag_19:\n    /* \"base/RegistryManager.sol\":1473:1482  _registry */\n  dup2\n    /* \"base/RegistryManager.sol\":1462:1470  registry */\n  0x02\n  0x00\n    /* \"base/RegistryManager.sol\":1462:1482  registry = _registry */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"base/RegistryManager.sol\":1176:1490  constructor(address _registry, address initialOwner) {... */\n  pop\n  pop\n    /* \"base/RegistryManager.sol\":279:2665  contract RegistryManager is Ownable2Step {... */\n  jump(tag_22)\n    /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"ownable/Context.sol\":709:716  address */\n  0x00\n    /* \"ownable/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"ownable/Context.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\ntag_10:\n    /* \"ownable/Ownable2Step.sol\":1634:1647  _pendingOwner */\n  0x01\n  0x00\n    /* \"ownable/Ownable2Step.sol\":1627:1647  delete _pendingOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n    /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n  tag_25\n    /* \"ownable/Ownable2Step.sol\":1683:1691  newOwner */\n  dup2\n    /* \"ownable/Ownable2Step.sol\":1658:1682  super._transferOwnership */\n  shl(0x20, tag_26)\n    /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\n  pop\n  jump\t// out\n    /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\ntag_26:\n    /* \"ownable/Ownable.sol\":2570:2586  address oldOwner */\n  0x00\n    /* \"ownable/Ownable.sol\":2589:2595  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ownable/Ownable.sol\":2570:2595  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"ownable/Ownable.sol\":2615:2623  newOwner */\n  dup2\n    /* \"ownable/Ownable.sol\":2606:2612  _owner */\n  0x00\n  dup1\n    /* \"ownable/Ownable.sol\":2606:2623  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ownable/Ownable.sol\":2670:2678  newOwner */\n  dup2\n    /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ownable/Ownable.sol\":2660:2668  oldOwner */\n  dup2\n    /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ownable/Ownable.sol\":2559:2687  {... */\n  pop\n    /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_29:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_31:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_32:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_31\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_33:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_32\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_34:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_33\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_55\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":949:1068   */\ntag_54:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_56\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_34\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_57\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_34\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1507   */\ntag_35:\n    /* \"#utility.yul\":1394:1401   */\n  0x00\n    /* \"#utility.yul\":1434:1500   */\n  0xffffffff00000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1427:1432   */\n  dup3\n    /* \"#utility.yul\":1423:1501   */\n  and\n    /* \"#utility.yul\":1412:1501   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1507   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1513:1628   */\ntag_36:\n    /* \"#utility.yul\":1598:1621   */\n  tag_60\n    /* \"#utility.yul\":1615:1620   */\n  dup2\n    /* \"#utility.yul\":1598:1621   */\n  tag_35\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1593:1596   */\n  dup3\n    /* \"#utility.yul\":1586:1622   */\n  mstore\n    /* \"#utility.yul\":1513:1628   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1634:1852   */\ntag_14:\n    /* \"#utility.yul\":1725:1729   */\n  0x00\n    /* \"#utility.yul\":1763:1765   */\n  0x20\n    /* \"#utility.yul\":1752:1761   */\n  dup3\n    /* \"#utility.yul\":1748:1766   */\n  add\n    /* \"#utility.yul\":1740:1766   */\n  swap1\n  pop\n    /* \"#utility.yul\":1776:1845   */\n  tag_62\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1831:1840   */\n  dup4\n    /* \"#utility.yul\":1827:1844   */\n  add\n    /* \"#utility.yul\":1818:1824   */\n  dup5\n    /* \"#utility.yul\":1776:1845   */\n  tag_36\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1634:1852   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1858:1948   */\ntag_37:\n    /* \"#utility.yul\":1892:1899   */\n  0x00\n    /* \"#utility.yul\":1935:1940   */\n  dup2\n    /* \"#utility.yul\":1928:1941   */\n  iszero\n    /* \"#utility.yul\":1921:1942   */\n  iszero\n    /* \"#utility.yul\":1910:1942   */\n  swap1\n  pop\n    /* \"#utility.yul\":1858:1948   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1954:2070   */\ntag_38:\n    /* \"#utility.yul\":2024:2045   */\n  tag_65\n    /* \"#utility.yul\":2039:2044   */\n  dup2\n    /* \"#utility.yul\":2024:2045   */\n  tag_37\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2017:2022   */\n  dup2\n    /* \"#utility.yul\":2014:2046   */\n  eq\n    /* \"#utility.yul\":2004:2064   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2060:2061   */\n  0x00\n    /* \"#utility.yul\":2057:2058   */\n  dup1\n    /* \"#utility.yul\":2050:2062   */\n  revert\n    /* \"#utility.yul\":2004:2064   */\ntag_66:\n    /* \"#utility.yul\":1954:2070   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2076:2213   */\ntag_39:\n    /* \"#utility.yul\":2130:2135   */\n  0x00\n    /* \"#utility.yul\":2161:2167   */\n  dup2\n    /* \"#utility.yul\":2155:2168   */\n  mload\n    /* \"#utility.yul\":2146:2168   */\n  swap1\n  pop\n    /* \"#utility.yul\":2177:2207   */\n  tag_68\n    /* \"#utility.yul\":2201:2206   */\n  dup2\n    /* \"#utility.yul\":2177:2207   */\n  tag_38\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2076:2213   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2219:2564   */\ntag_18:\n    /* \"#utility.yul\":2286:2292   */\n  0x00\n    /* \"#utility.yul\":2335:2337   */\n  0x20\n    /* \"#utility.yul\":2323:2332   */\n  dup3\n    /* \"#utility.yul\":2314:2321   */\n  dup5\n    /* \"#utility.yul\":2310:2333   */\n  sub\n    /* \"#utility.yul\":2306:2338   */\n  slt\n    /* \"#utility.yul\":2303:2422   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2341:2420   */\n  tag_71\n  tag_29\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2303:2422   */\ntag_70:\n    /* \"#utility.yul\":2461:2462   */\n  0x00\n    /* \"#utility.yul\":2486:2547   */\n  tag_72\n    /* \"#utility.yul\":2539:2546   */\n  dup5\n    /* \"#utility.yul\":2530:2536   */\n  dup3\n    /* \"#utility.yul\":2519:2528   */\n  dup6\n    /* \"#utility.yul\":2515:2537   */\n  add\n    /* \"#utility.yul\":2486:2547   */\n  tag_39\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2476:2547   */\n  swap2\n  pop\n    /* \"#utility.yul\":2432:2557   */\n  pop\n    /* \"#utility.yul\":2219:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2688   */\ntag_40:\n    /* \"#utility.yul\":2657:2681   */\n  tag_74\n    /* \"#utility.yul\":2675:2680   */\n  dup2\n    /* \"#utility.yul\":2657:2681   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2652:2655   */\n  dup3\n    /* \"#utility.yul\":2645:2682   */\n  mstore\n    /* \"#utility.yul\":2570:2688   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2694:2916   */\ntag_21:\n    /* \"#utility.yul\":2787:2791   */\n  0x00\n    /* \"#utility.yul\":2825:2827   */\n  0x20\n    /* \"#utility.yul\":2814:2823   */\n  dup3\n    /* \"#utility.yul\":2810:2828   */\n  add\n    /* \"#utility.yul\":2802:2828   */\n  swap1\n  pop\n    /* \"#utility.yul\":2838:2909   */\n  tag_76\n    /* \"#utility.yul\":2906:2907   */\n  0x00\n    /* \"#utility.yul\":2895:2904   */\n  dup4\n    /* \"#utility.yul\":2891:2908   */\n  add\n    /* \"#utility.yul\":2882:2888   */\n  dup5\n    /* \"#utility.yul\":2838:2909   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2694:2916   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"base/RegistryManager.sol\":279:2665  contract RegistryManager is Ownable2Step {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"base/RegistryManager.sol\":279:2665  contract RegistryManager is Ownable2Step {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa91ee0dc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7b103999\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ownable/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"ownable/Ownable2Step.sol\":1785:2001  function acceptOwnership() public virtual {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"base/RegistryManager.sol\":327:350  address public registry */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/RegistryManager.sol\":2323:2662  function setRegistry(address newRegistry) external onlyOwner {... */\n    tag_7:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"ownable/Ownable2Step.sol\":873:974  function pendingOwner() public view virtual returns (address) {... */\n    tag_8:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable/Ownable2Step.sol\":1173:1354  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"ownable/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_33\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_34\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_33:\n        /* \"ownable/Ownable.sol\":1942:1972  _transferOwnership(address(0)) */\n      tag_36\n        /* \"ownable/Ownable.sol\":1969:1970  0 */\n      0x00\n        /* \"ownable/Ownable.sol\":1942:1960  _transferOwnership */\n      tag_37\n        /* \"ownable/Ownable.sol\":1942:1972  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_36:\n        /* \"ownable/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":1785:2001  function acceptOwnership() public virtual {... */\n    tag_14:\n        /* \"ownable/Ownable2Step.sol\":1838:1852  address sender */\n      0x00\n        /* \"ownable/Ownable2Step.sol\":1855:1867  _msgSender() */\n      tag_39\n        /* \"ownable/Ownable2Step.sol\":1855:1865  _msgSender */\n      tag_40\n        /* \"ownable/Ownable2Step.sol\":1855:1867  _msgSender() */\n      jump\t// in\n    tag_39:\n        /* \"ownable/Ownable2Step.sol\":1838:1867  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"ownable/Ownable2Step.sol\":1904:1910  sender */\n      dup1\n        /* \"ownable/Ownable2Step.sol\":1886:1910  pendingOwner() == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable2Step.sol\":1886:1900  pendingOwner() */\n      tag_41\n        /* \"ownable/Ownable2Step.sol\":1886:1898  pendingOwner */\n      tag_27\n        /* \"ownable/Ownable2Step.sol\":1886:1900  pendingOwner() */\n      jump\t// in\n    tag_41:\n        /* \"ownable/Ownable2Step.sol\":1886:1910  pendingOwner() == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ownable/Ownable2Step.sol\":1878:1956  require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"ownable/Ownable2Step.sol\":1967:1993  _transferOwnership(sender) */\n      tag_45\n        /* \"ownable/Ownable2Step.sol\":1986:1992  sender */\n      dup2\n        /* \"ownable/Ownable2Step.sol\":1967:1985  _transferOwnership */\n      tag_37\n        /* \"ownable/Ownable2Step.sol\":1967:1993  _transferOwnership(sender) */\n      jump\t// in\n    tag_45:\n        /* \"ownable/Ownable2Step.sol\":1827:2001  {... */\n      pop\n        /* \"ownable/Ownable2Step.sol\":1785:2001  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"base/RegistryManager.sol\":327:350  address public registry */\n    tag_16:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ownable/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"ownable/Ownable.sol\":1282:1289  address */\n      0x00\n        /* \"ownable/Ownable.sol\":1309:1315  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":1302:1315  return _owner */\n      swap1\n      pop\n        /* \"ownable/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"base/RegistryManager.sol\":2323:2662  function setRegistry(address newRegistry) external onlyOwner {... */\n    tag_25:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_48\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_34\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"base/RegistryManager.sol\":2408:2419  newRegistry */\n      dup1\n        /* \"base/RegistryManager.sol\":2400:2438  IERC165(newRegistry).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ffc9a7\n        /* \"base/RegistryManager.sol\":2439:2478  type(ISafeProtocolRegistry).interfaceId */\n      0x253bd7b700000000000000000000000000000000000000000000000000000000\n        /* \"base/RegistryManager.sol\":2400:2479  IERC165(newRegistry).supportsInterface(type(ISafeProtocolRegistry).interfaceId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"base/RegistryManager.sol\":2395:2568  if (!IERC165(newRegistry).supportsInterface(type(ISafeProtocolRegistry).interfaceId)) {... */\n      tag_56\n      jumpi\n        /* \"base/RegistryManager.sol\":2544:2555  newRegistry */\n      dup1\n        /* \"base/RegistryManager.sol\":2503:2556  ContractDoesNotImplementValidInterfaceId(newRegistry) */\n      mload(0x40)\n      0x24ea21a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/RegistryManager.sol\":2395:2568  if (!IERC165(newRegistry).supportsInterface(type(ISafeProtocolRegistry).interfaceId)) {... */\n    tag_56:\n        /* \"base/RegistryManager.sol\":2609:2620  newRegistry */\n      dup1\n        /* \"base/RegistryManager.sol\":2583:2621  RegistryChanged(registry, newRegistry) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"base/RegistryManager.sol\":2599:2607  registry */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"base/RegistryManager.sol\":2583:2621  RegistryChanged(registry, newRegistry) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4803049971913703d2dd43c06110dc7fad451e4603e9f485cbeebdda11263ab0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"base/RegistryManager.sol\":2643:2654  newRegistry */\n      dup1\n        /* \"base/RegistryManager.sol\":2632:2640  registry */\n      0x02\n      0x00\n        /* \"base/RegistryManager.sol\":2632:2654  registry = newRegistry */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/RegistryManager.sol\":2323:2662  function setRegistry(address newRegistry) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":873:974  function pendingOwner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"ownable/Ownable2Step.sol\":926:933  address */\n      0x00\n        /* \"ownable/Ownable2Step.sol\":953:966  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable2Step.sol\":946:966  return _pendingOwner */\n      swap1\n      pop\n        /* \"ownable/Ownable2Step.sol\":873:974  function pendingOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":1173:1354  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_31:\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_60\n        /* \"ownable/Ownable.sol\":1122:1133  _checkOwner */\n      tag_34\n        /* \"ownable/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"ownable/Ownable2Step.sol\":1279:1287  newOwner */\n      dup1\n        /* \"ownable/Ownable2Step.sol\":1263:1276  _pendingOwner */\n      0x01\n      0x00\n        /* \"ownable/Ownable2Step.sol\":1263:1287  _pendingOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownable/Ownable2Step.sol\":1337:1345  newOwner */\n      dup1\n        /* \"ownable/Ownable2Step.sol\":1303:1346  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable2Step.sol\":1328:1335  owner() */\n      tag_62\n        /* \"ownable/Ownable2Step.sol\":1328:1333  owner */\n      tag_20\n        /* \"ownable/Ownable2Step.sol\":1328:1335  owner() */\n      jump\t// in\n    tag_62:\n        /* \"ownable/Ownable2Step.sol\":1303:1346  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ownable/Ownable2Step.sol\":1173:1354  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ownable/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {... */\n    tag_34:\n        /* \"ownable/Ownable.sol\":1476:1488  _msgSender() */\n      tag_64\n        /* \"ownable/Ownable.sol\":1476:1486  _msgSender */\n      tag_40\n        /* \"ownable/Ownable.sol\":1476:1488  _msgSender() */\n      jump\t// in\n    tag_64:\n        /* \"ownable/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":1465:1472  owner() */\n      tag_65\n        /* \"ownable/Ownable.sol\":1465:1470  owner */\n      tag_20\n        /* \"ownable/Ownable.sol\":1465:1472  owner() */\n      jump\t// in\n    tag_65:\n        /* \"ownable/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ownable/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"ownable/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_37:\n        /* \"ownable/Ownable2Step.sol\":1634:1647  _pendingOwner */\n      0x01\n      0x00\n        /* \"ownable/Ownable2Step.sol\":1627:1647  delete _pendingOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n      tag_70\n        /* \"ownable/Ownable2Step.sol\":1683:1691  newOwner */\n      dup2\n        /* \"ownable/Ownable2Step.sol\":1658:1682  super._transferOwnership */\n      tag_71\n        /* \"ownable/Ownable2Step.sol\":1658:1692  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_70:\n        /* \"ownable/Ownable2Step.sol\":1544:1700  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_40:\n        /* \"ownable/Context.sol\":709:716  address */\n      0x00\n        /* \"ownable/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ownable/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"ownable/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_71:\n        /* \"ownable/Ownable.sol\":2570:2586  address oldOwner */\n      0x00\n        /* \"ownable/Ownable.sol\":2589:2595  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":2570:2595  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"ownable/Ownable.sol\":2615:2623  newOwner */\n      dup2\n        /* \"ownable/Ownable.sol\":2606:2612  _owner */\n      0x00\n      dup1\n        /* \"ownable/Ownable.sol\":2606:2623  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownable/Ownable.sol\":2670:2678  newOwner */\n      dup2\n        /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable/Ownable.sol\":2660:2668  oldOwner */\n      dup2\n        /* \"ownable/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ownable/Ownable.sol\":2559:2687  {... */\n      pop\n        /* \"ownable/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_74:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_75:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_95\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_74\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_76:\n        /* \"#utility.yul\":328:352   */\n      tag_97\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_75\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_18:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_99\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_76\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_78:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_80:\n        /* \"#utility.yul\":993:1017   */\n      tag_104\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_75\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_105:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_81:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_107\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_80\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_24:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_110\n      tag_78\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1269:1388   */\n    tag_109:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_111\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_81\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_82:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1931   */\n    tag_83:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1923   */\n      0x6e6577206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1924   */\n      mstore\n        /* \"#utility.yul\":1703:1931   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1937:2303   */\n    tag_84:\n        /* \"#utility.yul\":2079:2082   */\n      0x00\n        /* \"#utility.yul\":2100:2167   */\n      tag_115\n        /* \"#utility.yul\":2164:2166   */\n      0x29\n        /* \"#utility.yul\":2159:2162   */\n      dup4\n        /* \"#utility.yul\":2100:2167   */\n      tag_82\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2093:2167   */\n      swap2\n      pop\n        /* \"#utility.yul\":2176:2269   */\n      tag_116\n        /* \"#utility.yul\":2265:2268   */\n      dup3\n        /* \"#utility.yul\":2176:2269   */\n      tag_83\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2294:2296   */\n      0x40\n        /* \"#utility.yul\":2289:2292   */\n      dup3\n        /* \"#utility.yul\":2285:2297   */\n      add\n        /* \"#utility.yul\":2278:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":1937:2303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2728   */\n    tag_44:\n        /* \"#utility.yul\":2475:2479   */\n      0x00\n        /* \"#utility.yul\":2513:2515   */\n      0x20\n        /* \"#utility.yul\":2502:2511   */\n      dup3\n        /* \"#utility.yul\":2498:2516   */\n      add\n        /* \"#utility.yul\":2490:2516   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2571   */\n      dup2\n        /* \"#utility.yul\":2556:2560   */\n      dup2\n        /* \"#utility.yul\":2552:2572   */\n      sub\n        /* \"#utility.yul\":2548:2549   */\n      0x00\n        /* \"#utility.yul\":2537:2546   */\n      dup4\n        /* \"#utility.yul\":2533:2550   */\n      add\n        /* \"#utility.yul\":2526:2573   */\n      mstore\n        /* \"#utility.yul\":2590:2721   */\n      tag_118\n        /* \"#utility.yul\":2716:2720   */\n      dup2\n        /* \"#utility.yul\":2590:2721   */\n      tag_84\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2582:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2734:2883   */\n    tag_85:\n        /* \"#utility.yul\":2770:2777   */\n      0x00\n        /* \"#utility.yul\":2810:2876   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2803:2808   */\n      dup3\n        /* \"#utility.yul\":2799:2877   */\n      and\n        /* \"#utility.yul\":2788:2877   */\n      swap1\n      pop\n        /* \"#utility.yul\":2734:2883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:3004   */\n    tag_86:\n        /* \"#utility.yul\":2974:2997   */\n      tag_121\n        /* \"#utility.yul\":2991:2996   */\n      dup2\n        /* \"#utility.yul\":2974:2997   */\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2969:2972   */\n      dup3\n        /* \"#utility.yul\":2962:2998   */\n      mstore\n        /* \"#utility.yul\":2889:3004   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3010:3228   */\n    tag_51:\n        /* \"#utility.yul\":3101:3105   */\n      0x00\n        /* \"#utility.yul\":3139:3141   */\n      0x20\n        /* \"#utility.yul\":3128:3137   */\n      dup3\n        /* \"#utility.yul\":3124:3142   */\n      add\n        /* \"#utility.yul\":3116:3142   */\n      swap1\n      pop\n        /* \"#utility.yul\":3152:3221   */\n      tag_123\n        /* \"#utility.yul\":3218:3219   */\n      0x00\n        /* \"#utility.yul\":3207:3216   */\n      dup4\n        /* \"#utility.yul\":3203:3220   */\n      add\n        /* \"#utility.yul\":3194:3200   */\n      dup5\n        /* \"#utility.yul\":3152:3221   */\n      tag_86\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3010:3228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3234:3324   */\n    tag_87:\n        /* \"#utility.yul\":3268:3275   */\n      0x00\n        /* \"#utility.yul\":3311:3316   */\n      dup2\n        /* \"#utility.yul\":3304:3317   */\n      iszero\n        /* \"#utility.yul\":3297:3318   */\n      iszero\n        /* \"#utility.yul\":3286:3318   */\n      swap1\n      pop\n        /* \"#utility.yul\":3234:3324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3330:3446   */\n    tag_88:\n        /* \"#utility.yul\":3400:3421   */\n      tag_126\n        /* \"#utility.yul\":3415:3420   */\n      dup2\n        /* \"#utility.yul\":3400:3421   */\n      tag_87\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3393:3398   */\n      dup2\n        /* \"#utility.yul\":3390:3422   */\n      eq\n        /* \"#utility.yul\":3380:3440   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3433:3434   */\n      dup1\n        /* \"#utility.yul\":3426:3438   */\n      revert\n        /* \"#utility.yul\":3380:3440   */\n    tag_127:\n        /* \"#utility.yul\":3330:3446   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3452:3589   */\n    tag_89:\n        /* \"#utility.yul\":3506:3511   */\n      0x00\n        /* \"#utility.yul\":3537:3543   */\n      dup2\n        /* \"#utility.yul\":3531:3544   */\n      mload\n        /* \"#utility.yul\":3522:3544   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3583   */\n      tag_129\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3553:3583   */\n      tag_88\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3452:3589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3595:3940   */\n    tag_55:\n        /* \"#utility.yul\":3662:3668   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3699:3708   */\n      dup3\n        /* \"#utility.yul\":3690:3697   */\n      dup5\n        /* \"#utility.yul\":3686:3709   */\n      sub\n        /* \"#utility.yul\":3682:3714   */\n      slt\n        /* \"#utility.yul\":3679:3798   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3717:3796   */\n      tag_132\n      tag_78\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3679:3798   */\n    tag_131:\n        /* \"#utility.yul\":3837:3838   */\n      0x00\n        /* \"#utility.yul\":3862:3923   */\n      tag_133\n        /* \"#utility.yul\":3915:3922   */\n      dup5\n        /* \"#utility.yul\":3906:3912   */\n      dup3\n        /* \"#utility.yul\":3895:3904   */\n      dup6\n        /* \"#utility.yul\":3891:3913   */\n      add\n        /* \"#utility.yul\":3862:3923   */\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3852:3923   */\n      swap2\n      pop\n        /* \"#utility.yul\":3808:3933   */\n      pop\n        /* \"#utility.yul\":3595:3940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3946:4128   */\n    tag_90:\n        /* \"#utility.yul\":4086:4120   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4082:4083   */\n      0x00\n        /* \"#utility.yul\":4074:4080   */\n      dup3\n        /* \"#utility.yul\":4070:4084   */\n      add\n        /* \"#utility.yul\":4063:4121   */\n      mstore\n        /* \"#utility.yul\":3946:4128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4500   */\n    tag_91:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4297:4364   */\n      tag_136\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"#utility.yul\":4356:4359   */\n      dup4\n        /* \"#utility.yul\":4297:4364   */\n      tag_82\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4290:4364   */\n      swap2\n      pop\n        /* \"#utility.yul\":4373:4466   */\n      tag_137\n        /* \"#utility.yul\":4462:4465   */\n      dup3\n        /* \"#utility.yul\":4373:4466   */\n      tag_90\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4491:4493   */\n      0x20\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4482:4494   */\n      add\n        /* \"#utility.yul\":4475:4494   */\n      swap1\n      pop\n        /* \"#utility.yul\":4134:4500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4925   */\n    tag_68:\n        /* \"#utility.yul\":4672:4676   */\n      0x00\n        /* \"#utility.yul\":4710:4712   */\n      0x20\n        /* \"#utility.yul\":4699:4708   */\n      dup3\n        /* \"#utility.yul\":4695:4713   */\n      add\n        /* \"#utility.yul\":4687:4713   */\n      swap1\n      pop\n        /* \"#utility.yul\":4759:4768   */\n      dup2\n        /* \"#utility.yul\":4753:4757   */\n      dup2\n        /* \"#utility.yul\":4749:4769   */\n      sub\n        /* \"#utility.yul\":4745:4746   */\n      0x00\n        /* \"#utility.yul\":4734:4743   */\n      dup4\n        /* \"#utility.yul\":4730:4747   */\n      add\n        /* \"#utility.yul\":4723:4770   */\n      mstore\n        /* \"#utility.yul\":4787:4918   */\n      tag_139\n        /* \"#utility.yul\":4913:4917   */\n      dup2\n        /* \"#utility.yul\":4787:4918   */\n      tag_91\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4779:4918   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220feb9aecf6198274f9ffd69897d7a9ada8be6e850639f3a64c457b916d523b2ad64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_197": {
									"entryPoint": 404,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_319": {
									"entryPoint": 469,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_380": {
									"entryPoint": 412,
									"id": 380,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2919:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1412:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1427:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1423:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1412:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1384:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1394:7:6",
														"type": ""
													}
												],
												"src": "1358:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1598:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1586:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1571:3:6",
														"type": ""
													}
												],
												"src": "1513:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1752:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1763:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1748:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1740:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1818:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1842:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1776:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1776:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1702:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1714:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1725:4:6",
														"type": ""
													}
												],
												"src": "1634:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1900:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1910:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1935:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1928:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1928:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1910:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1882:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1892:7:6",
														"type": ""
													}
												],
												"src": "1858:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2048:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2060:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2050:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2050:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2050:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2017:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2039:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2024:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2024:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2014:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2014:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:40:6"
															},
															"nodeType": "YulIf",
															"src": "2004:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1987:5:6",
														"type": ""
													}
												],
												"src": "1954:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2136:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2146:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2161:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2155:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2146:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2201:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2177:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2177:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2114:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2122:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2130:5:6",
														"type": ""
													}
												],
												"src": "2076:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2293:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2339:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2341:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2341:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2341:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2323:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2310:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2310:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:32:6"
															},
															"nodeType": "YulIf",
															"src": "2303:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2432:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2447:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2461:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2451:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2476:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2519:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2530:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2515:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2515:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2486:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2486:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2476:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2263:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2274:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2286:6:6",
														"type": ""
													}
												],
												"src": "2219:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2652:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2675:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2657:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2657:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2645:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2623:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2630:3:6",
														"type": ""
													}
												],
												"src": "2570:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2802:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2814:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2825:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2810:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2802:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2882:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2895:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2906:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2891:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2838:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2838:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2764:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2787:4:6",
														"type": ""
													}
												],
												"src": "2694:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000d1838038062000d18833981810160405281019062000037919062000303565b620000576200004b6200019460201b60201c565b6200019c60201b60201c565b62000068816200019c60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f253bd7b7000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401620000c3919062000387565b602060405180830381865afa158015620000e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001079190620003e1565b6200014b57816040517f24ea21a700000000000000000000000000000000000000000000000000000000815260040162000142919062000424565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000441565b600033905090565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055620001d281620001d560201b60201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002cb826200029e565b9050919050565b620002dd81620002be565b8114620002e957600080fd5b50565b600081519050620002fd81620002d2565b92915050565b600080604083850312156200031d576200031c62000299565b5b60006200032d85828601620002ec565b92505060206200034085828601620002ec565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b62000381816200034a565b82525050565b60006020820190506200039e600083018462000376565b92915050565b60008115159050919050565b620003bb81620003a4565b8114620003c757600080fd5b50565b600081519050620003db81620003b0565b92915050565b600060208284031215620003fa57620003f962000299565b5b60006200040a84828501620003ca565b91505092915050565b6200041e81620002be565b82525050565b60006020820190506200043b600083018462000413565b92915050565b6108c780620004516000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b4578063a91ee0dc146100d2578063e30c3978146100ee578063f2fde38b1461010c5761007d565b8063715018a61461008257806379ba50971461008c5780637b10399914610096575b600080fd5b61008a610128565b005b61009461013c565b005b61009e6101c9565b6040516100ab919061064e565b60405180910390f35b6100bc6101ef565b6040516100c9919061064e565b60405180910390f35b6100ec60048036038101906100e7919061069a565b610218565b005b6100f66103bb565b604051610103919061064e565b60405180910390f35b6101266004803603810190610121919061069a565b6103e5565b005b610130610492565b61013a6000610510565b565b6000610146610541565b90508073ffffffffffffffffffffffffffffffffffffffff166101676103bb565b73ffffffffffffffffffffffffffffffffffffffff16146101bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b49061074a565b60405180910390fd5b6101c681610510565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610220610492565b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f253bd7b7000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161027991906107a5565b602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba91906107f8565b6102fb57806040517f24ea21a70000000000000000000000000000000000000000000000000000000081526004016102f2919061064e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f4803049971913703d2dd43c06110dc7fad451e4603e9f485cbeebdda11263ab060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103ed610492565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1661044d6101ef565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61049a610541565b73ffffffffffffffffffffffffffffffffffffffff166104b86101ef565b73ffffffffffffffffffffffffffffffffffffffff161461050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610871565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561053e81610549565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106388261060d565b9050919050565b6106488161062d565b82525050565b6000602082019050610663600083018461063f565b92915050565b600080fd5b6106778161062d565b811461068257600080fd5b50565b6000813590506106948161066e565b92915050565b6000602082840312156106b0576106af610669565b5b60006106be84828501610685565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b60006107346029836106c7565b915061073f826106d8565b604082019050919050565b6000602082019050818103600083015261076381610727565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61079f8161076a565b82525050565b60006020820190506107ba6000830184610796565b92915050565b60008115159050919050565b6107d5816107c0565b81146107e057600080fd5b50565b6000815190506107f2816107cc565b92915050565b60006020828403121561080e5761080d610669565b5b600061081c848285016107e3565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061085b6020836106c7565b915061086682610825565b602082019050919050565b6000602082019050818103600083015261088a8161084e565b905091905056fea2646970667358221220feb9aecf6198274f9ffd69897d7a9ada8be6e850639f3a64c457b916d523b2ad64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD18 CODESIZE SUB DUP1 PUSH3 0xD18 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x303 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x19C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x68 DUP2 PUSH3 0x19C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x253BD7B700000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC3 SWAP2 SWAP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x107 SWAP2 SWAP1 PUSH3 0x3E1 JUMP JUMPDEST PUSH3 0x14B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x24EA21A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x142 SWAP2 SWAP1 PUSH3 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x441 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH3 0x1D2 DUP2 PUSH3 0x1D5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CB DUP3 PUSH3 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DD DUP2 PUSH3 0x2BE JUMP JUMPDEST DUP2 EQ PUSH3 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2FD DUP2 PUSH3 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x31D JUMPI PUSH3 0x31C PUSH3 0x299 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x32D DUP6 DUP3 DUP7 ADD PUSH3 0x2EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x340 DUP6 DUP3 DUP7 ADD PUSH3 0x2EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x381 DUP2 PUSH3 0x34A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x39E PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3BB DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3DB DUP2 PUSH3 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3FA JUMPI PUSH3 0x3F9 PUSH3 0x299 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x40A DUP5 DUP3 DUP6 ADD PUSH3 0x3CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x41E DUP2 PUSH3 0x2BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x43B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x413 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C7 DUP1 PUSH3 0x451 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x13A PUSH1 0x0 PUSH2 0x510 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146 PUSH2 0x541 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167 PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4 SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x510 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x492 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x253BD7B700000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2FB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x24EA21A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4803049971913703D2DD43C06110DC7FAD451E4603E9F485CBEEBDDA11263AB0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x492 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x44D PUSH2 0x1EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x49A PUSH2 0x541 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B8 PUSH2 0x1EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x53E DUP2 PUSH2 0x549 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x638 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x648 DUP2 PUSH2 0x62D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x663 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x63F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x62D JUMP JUMPDEST DUP2 EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x694 DUP2 PUSH2 0x66E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6AF PUSH2 0x669 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6BE DUP5 DUP3 DUP6 ADD PUSH2 0x685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 PUSH1 0x29 DUP4 PUSH2 0x6C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x73F DUP3 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x763 DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79F DUP2 PUSH2 0x76A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D5 DUP2 PUSH2 0x7C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7F2 DUP2 PUSH2 0x7CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80E JUMPI PUSH2 0x80D PUSH2 0x669 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x81C DUP5 DUP3 DUP6 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85B PUSH1 0x20 DUP4 PUSH2 0x6C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x866 DUP3 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88A DUP2 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xB9 0xAE 0xCF PUSH2 0x9827 0x4F SWAP16 REVERT PUSH10 0x897D7A9ADA8BE6E85063 SWAP16 GASPRICE PUSH5 0xC457B916D5 0x23 0xB2 0xAD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "279:2386:1:-:0;;;1176:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:32:4;976:12;:10;;;:12;;:::i;:::-;957:18;;;:32;;:::i;:::-;1240::1;1259:12;1240:18;;;:32;;:::i;:::-;1296:9;1288:36;;;1325:39;1288:77;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:169;;1430:9;1389:51;;;;;;;;;;;:::i;:::-;;;;;;;;1283:169;1473:9;1462:8;;:20;;;;;;;;;;;;;;;;;;1176:314;;279:2386;;656:98:3;709:7;736:10;729:17;;656:98;:::o;1544:156:5:-;1634:13;;1627:20;;;;;;;;;;;1658:34;1683:8;1658:24;;;:34;;:::i;:::-;1544:156;:::o;2496:191:4:-;2570:16;2589:6;;;;;;;;;;;2570:25;;2615:8;2606:6;;:17;;;;;;;;;;;;;;;;;;2670:8;2639:40;;2660:8;2639:40;;;;;;;;;;;;2559:128;2496:191;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:149::-;1394:7;1434:66;1427:5;1423:78;1412:89;;1358:149;;;:::o;1513:115::-;1598:23;1615:5;1598:23;:::i;:::-;1593:3;1586:36;1513:115;;:::o;1634:218::-;1725:4;1763:2;1752:9;1748:18;1740:26;;1776:69;1842:1;1831:9;1827:17;1818:6;1776:69;:::i;:::-;1634:218;;;;:::o;1858:90::-;1892:7;1935:5;1928:13;1921:21;1910:32;;1858:90;;;:::o;1954:116::-;2024:21;2039:5;2024:21;:::i;:::-;2017:5;2014:32;2004:60;;2060:1;2057;2050:12;2004:60;1954:116;:::o;2076:137::-;2130:5;2161:6;2155:13;2146:22;;2177:30;2201:5;2177:30;:::i;:::-;2076:137;;;;:::o;2219:345::-;2286:6;2335:2;2323:9;2314:7;2310:23;2306:32;2303:119;;;2341:79;;:::i;:::-;2303:119;2461:1;2486:61;2539:7;2530:6;2519:9;2515:22;2486:61;:::i;:::-;2476:71;;2432:125;2219:345;;;;:::o;2570:118::-;2657:24;2675:5;2657:24;:::i;:::-;2652:3;2645:37;2570:118;;:::o;2694:222::-;2787:4;2825:2;2814:9;2810:18;2802:26;;2838:71;2906:1;2895:9;2891:17;2882:6;2838:71;:::i;:::-;2694:222;;;;:::o;279:2386:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_262": {
									"entryPoint": 1170,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_197": {
									"entryPoint": 1345,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_319": {
									"entryPoint": 1353,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_380": {
									"entryPoint": 1296,
									"id": 380,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_402": {
									"entryPoint": 316,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_248": {
									"entryPoint": 495,
									"id": 248,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_343": {
									"entryPoint": 955,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registry_23": {
									"entryPoint": 457,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_276": {
									"entryPoint": 296,
									"id": 276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRegistry_165": {
									"entryPoint": 536,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_363": {
									"entryPoint": 997,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4928:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:6",
														"type": ""
													}
												],
												"src": "593:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:6"
															},
															"nodeType": "YulIf",
															"src": "973:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:6",
														"type": ""
													}
												],
												"src": "920:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:6",
														"type": ""
													}
												],
												"src": "1048:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:6"
															},
															"nodeType": "YulIf",
															"src": "1269:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:6",
														"type": ""
													}
												],
												"src": "1193:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:6",
														"type": ""
													}
												],
												"src": "1528:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:6",
																		"type": "",
																		"value": "Ownable2Step: caller is not the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:6"
																	},
																	{
																		"hexValue": "6e6577206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:11:6",
																		"type": "",
																		"value": "new owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:6",
														"type": ""
													}
												],
												"src": "1703:228:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2083:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2093:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2159:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:2:6",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2100:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2265:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																	"nodeType": "YulIdentifier",
																	"src": "2176:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2176:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2278:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2289:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2071:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2079:3:6",
														"type": ""
													}
												],
												"src": "1937:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2480:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2490:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2502:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2498:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2498:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2490:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2537:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2548:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2533:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2533:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2556:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2562:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2526:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2526:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2582:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2716:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2590:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2582:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2460:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2475:4:6",
														"type": ""
													}
												],
												"src": "2309:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2778:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2788:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2803:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2810:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2788:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2760:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2770:7:6",
														"type": ""
													}
												],
												"src": "2734:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2969:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2991:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2974:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2962:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2940:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2947:3:6",
														"type": ""
													}
												],
												"src": "2889:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3106:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3116:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3128:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3139:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3116:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3194:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3218:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3152:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3078:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3090:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3101:4:6",
														"type": ""
													}
												],
												"src": "3010:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3276:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3286:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3311:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3304:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3304:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3297:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3286:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3258:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3268:7:6",
														"type": ""
													}
												],
												"src": "3234:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3424:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3433:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3436:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3426:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3426:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3426:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3393:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3415:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3400:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3400:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3390:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3390:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:40:6"
															},
															"nodeType": "YulIf",
															"src": "3380:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3363:5:6",
														"type": ""
													}
												],
												"src": "3330:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3522:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3537:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3522:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3577:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3553:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3553:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3490:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3498:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3506:5:6",
														"type": ""
													}
												],
												"src": "3452:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3715:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3717:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3717:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3717:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3690:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3699:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:32:6"
															},
															"nodeType": "YulIf",
															"src": "3679:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3808:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3823:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3837:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3827:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3852:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3895:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3906:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3891:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3891:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3915:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3862:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3852:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3639:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3650:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3662:6:6",
														"type": ""
													}
												],
												"src": "3595:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4052:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4074:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4082:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4070:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4070:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4086:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4063:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4063:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4044:6:6",
														"type": ""
													}
												],
												"src": "3946:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4280:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4290:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4297:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4462:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4373:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4373:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4475:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4491:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4276:3:6",
														"type": ""
													}
												],
												"src": "4134:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4677:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4687:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4699:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4710:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4695:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4687:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4734:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4745:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4730:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4730:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4753:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4759:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4749:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4749:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4723:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4779:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4913:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4787:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4779:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4657:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4672:4:6",
														"type": ""
													}
												],
												"src": "4506:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b4578063a91ee0dc146100d2578063e30c3978146100ee578063f2fde38b1461010c5761007d565b8063715018a61461008257806379ba50971461008c5780637b10399914610096575b600080fd5b61008a610128565b005b61009461013c565b005b61009e6101c9565b6040516100ab919061064e565b60405180910390f35b6100bc6101ef565b6040516100c9919061064e565b60405180910390f35b6100ec60048036038101906100e7919061069a565b610218565b005b6100f66103bb565b604051610103919061064e565b60405180910390f35b6101266004803603810190610121919061069a565b6103e5565b005b610130610492565b61013a6000610510565b565b6000610146610541565b90508073ffffffffffffffffffffffffffffffffffffffff166101676103bb565b73ffffffffffffffffffffffffffffffffffffffff16146101bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b49061074a565b60405180910390fd5b6101c681610510565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610220610492565b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f253bd7b7000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161027991906107a5565b602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba91906107f8565b6102fb57806040517f24ea21a70000000000000000000000000000000000000000000000000000000081526004016102f2919061064e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f4803049971913703d2dd43c06110dc7fad451e4603e9f485cbeebdda11263ab060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103ed610492565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1661044d6101ef565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61049a610541565b73ffffffffffffffffffffffffffffffffffffffff166104b86101ef565b73ffffffffffffffffffffffffffffffffffffffff161461050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610871565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561053e81610549565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106388261060d565b9050919050565b6106488161062d565b82525050565b6000602082019050610663600083018461063f565b92915050565b600080fd5b6106778161062d565b811461068257600080fd5b50565b6000813590506106948161066e565b92915050565b6000602082840312156106b0576106af610669565b5b60006106be84828501610685565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b60006107346029836106c7565b915061073f826106d8565b604082019050919050565b6000602082019050818103600083015261076381610727565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61079f8161076a565b82525050565b60006020820190506107ba6000830184610796565b92915050565b60008115159050919050565b6107d5816107c0565b81146107e057600080fd5b50565b6000815190506107f2816107cc565b92915050565b60006020828403121561080e5761080d610669565b5b600061081c848285016107e3565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061085b6020836106c7565b915061086682610825565b602082019050919050565b6000602082019050818103600083015261088a8161084e565b905091905056fea2646970667358221220feb9aecf6198274f9ffd69897d7a9ada8be6e850639f3a64c457b916d523b2ad64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x13A PUSH1 0x0 PUSH2 0x510 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146 PUSH2 0x541 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167 PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4 SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x510 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x492 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH32 0x253BD7B700000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x2FB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x24EA21A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4803049971913703D2DD43C06110DC7FAD451E4603E9F485CBEEBDDA11263AB0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x492 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x44D PUSH2 0x1EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x49A PUSH2 0x541 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B8 PUSH2 0x1EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x53E DUP2 PUSH2 0x549 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x638 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x648 DUP2 PUSH2 0x62D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x663 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x63F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x62D JUMP JUMPDEST DUP2 EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x694 DUP2 PUSH2 0x66E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6AF PUSH2 0x669 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6BE DUP5 DUP3 DUP6 ADD PUSH2 0x685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 PUSH1 0x29 DUP4 PUSH2 0x6C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x73F DUP3 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x763 DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79F DUP2 PUSH2 0x76A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D5 DUP2 PUSH2 0x7C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7F2 DUP2 PUSH2 0x7CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80E JUMPI PUSH2 0x80D PUSH2 0x669 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x81C DUP5 DUP3 DUP6 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85B PUSH1 0x20 DUP4 PUSH2 0x6C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x866 DUP3 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88A DUP2 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xB9 0xAE 0xCF PUSH2 0x9827 0x4F SWAP16 REVERT PUSH10 0x897D7A9ADA8BE6E85063 SWAP16 GASPRICE PUSH5 0xC457B916D5 0x23 0xB2 0xAD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "279:2386:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:103:4;;;:::i;:::-;;1785:216:5;;;:::i;:::-;;327:23:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:87:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2323:339:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;873:101:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1173:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1877:103:4;1122:13;:11;:13::i;:::-;1942:30:::1;1969:1;1942:18;:30::i;:::-;1877:103::o:0;1785:216:5:-;1838:14;1855:12;:10;:12::i;:::-;1838:29;;1904:6;1886:24;;:14;:12;:14::i;:::-;:24;;;1878:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1967:26;1986:6;1967:18;:26::i;:::-;1827:174;1785:216::o;327:23:1:-;;;;;;;;;;;;;:::o;1236:87:4:-;1282:7;1309:6;;;;;;;;;;;1302:13;;1236:87;:::o;2323:339:1:-;1122:13:4;:11;:13::i;:::-;2408:11:1::1;2400:38;;;2439:39;2400:79;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2395:173;;2544:11;2503:53;;;;;;;;;;;:::i;:::-;;;;;;;;2395:173;2609:11;2583:38;;2599:8;;;;;;;;;;;2583:38;;;;;;;;;;;;2643:11;2632:8;;:22;;;;;;;;;;;;;;;;;;2323:339:::0;:::o;873:101:5:-;926:7;953:13;;;;;;;;;;;946:20;;873:101;:::o;1173:181::-;1122:13:4;:11;:13::i;:::-;1279:8:5::1;1263:13;;:24;;;;;;;;;;;;;;;;;;1337:8;1303:43;;1328:7;:5;:7::i;:::-;1303:43;;;;;;;;;;;;1173:181:::0;:::o;1401:132:4:-;1476:12;:10;:12::i;:::-;1465:23;;:7;:5;:7::i;:::-;:23;;;1457:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1401:132::o;1544:156:5:-;1634:13;;1627:20;;;;;;;;;;;1658:34;1683:8;1658:24;:34::i;:::-;1544:156;:::o;656:98:3:-;709:7;736:10;729:17;;656:98;:::o;2496:191:4:-;2570:16;2589:6;;;;;;;;;;;2570:25;;2615:8;2606:6;;:17;;;;;;;;;;;;;;;;;;2670:8;2639:40;;2660:8;2639:40;;;;;;;;;;;;2559:128;2496:191;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:228::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:11;1907:2;1899:6;1895:15;1888:36;1703:228;:::o;1937:366::-;2079:3;2100:67;2164:2;2159:3;2100:67;:::i;:::-;2093:74;;2176:93;2265:3;2176:93;:::i;:::-;2294:2;2289:3;2285:12;2278:19;;1937:366;;;:::o;2309:419::-;2475:4;2513:2;2502:9;2498:18;2490:26;;2562:9;2556:4;2552:20;2548:1;2537:9;2533:17;2526:47;2590:131;2716:4;2590:131;:::i;:::-;2582:139;;2309:419;;;:::o;2734:149::-;2770:7;2810:66;2803:5;2799:78;2788:89;;2734:149;;;:::o;2889:115::-;2974:23;2991:5;2974:23;:::i;:::-;2969:3;2962:36;2889:115;;:::o;3010:218::-;3101:4;3139:2;3128:9;3124:18;3116:26;;3152:69;3218:1;3207:9;3203:17;3194:6;3152:69;:::i;:::-;3010:218;;;;:::o;3234:90::-;3268:7;3311:5;3304:13;3297:21;3286:32;;3234:90;;;:::o;3330:116::-;3400:21;3415:5;3400:21;:::i;:::-;3393:5;3390:32;3380:60;;3436:1;3433;3426:12;3380:60;3330:116;:::o;3452:137::-;3506:5;3537:6;3531:13;3522:22;;3553:30;3577:5;3553:30;:::i;:::-;3452:137;;;;:::o;3595:345::-;3662:6;3711:2;3699:9;3690:7;3686:23;3682:32;3679:119;;;3717:79;;:::i;:::-;3679:119;3837:1;3862:61;3915:7;3906:6;3895:9;3891:22;3862:61;:::i;:::-;3852:71;;3808:125;3595:345;;;;:::o;3946:182::-;4086:34;4082:1;4074:6;4070:14;4063:58;3946:182;:::o;4134:366::-;4276:3;4297:67;4361:2;4356:3;4297:67;:::i;:::-;4290:74;;4373:93;4462:3;4373:93;:::i;:::-;4491:2;4486:3;4482:12;4475:19;;4134:366;;;:::o;4506:419::-;4672:4;4710:2;4699:9;4695:18;4687:26;;4759:9;4753:4;4749:20;4745:1;4734:9;4730:17;4723:47;4787:131;4913:4;4787:131;:::i;:::-;4779:139;;4506:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "449400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "54681",
								"owner()": "2522",
								"pendingOwner()": "2566",
								"registry()": "2559",
								"renounceOwnership()": "54670",
								"setRegistry(address)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"checkPermittedModule(address,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1176,
									"end": 1490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 976,
									"end": 988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 976,
									"end": 988,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 957,
									"end": 989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 989,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1240,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1259,
									"end": 1271,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1240,
									"end": 1258,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1258,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1272,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1272,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1272,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1240,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1324,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1324,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1324,
									"name": "PUSH",
									"source": 1,
									"value": "1FFC9A7"
								},
								{
									"begin": 1325,
									"end": 1364,
									"name": "PUSH",
									"source": 1,
									"value": "253BD7B700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1288,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "STATICCALL",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1288,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1288,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1283,
									"end": 1452,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "PUSH",
									"source": 1,
									"value": "24EA21A700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1389,
									"end": 1440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1440,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1452,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1283,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1470,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1462,
									"end": 1470,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1700,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1544,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1647,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1634,
									"end": 1647,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1647,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1683,
									"end": 1691,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1658,
									"end": 1692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1544,
									"end": 1700,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1544,
									"end": 1700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2615,
									"end": 2623,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2670,
									"end": 2678,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2668,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2687,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2496,
									"end": 2687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1507,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1358,
									"end": 1507,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1394,
									"end": 1401,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1500,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1427,
									"end": 1432,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1501,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1501,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1507,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1507,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1628,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1513,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1615,
									"end": 1620,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1598,
									"end": 1621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1621,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1598,
									"end": 1621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1622,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1634,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1729,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1765,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1752,
									"end": 1761,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1831,
									"end": 1840,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1844,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1824,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1776,
									"end": 1845,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1845,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1776,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1852,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1852,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1852,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1852,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1948,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1858,
									"end": 1948,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1892,
									"end": 1899,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1935,
									"end": 1940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1928,
									"end": 1941,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1921,
									"end": 1942,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1910,
									"end": 1942,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1910,
									"end": 1942,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1948,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1948,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1948,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1954,
									"end": 2070,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1954,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2024,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2039,
									"end": 2044,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2024,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2024,
									"end": 2045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2024,
									"end": 2045,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2024,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2022,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2014,
									"end": 2046,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2004,
									"end": 2064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2060,
									"end": 2061,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2057,
									"end": 2058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2050,
									"end": 2062,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2064,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2004,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1954,
									"end": 2070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1954,
									"end": 2070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2213,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2076,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2130,
									"end": 2135,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2161,
									"end": 2167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2155,
									"end": 2168,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2146,
									"end": 2168,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2146,
									"end": 2168,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2177,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2201,
									"end": 2206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2177,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2177,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2177,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2177,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2213,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2213,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2213,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2213,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2219,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2286,
									"end": 2292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2335,
									"end": 2337,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2323,
									"end": 2332,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2314,
									"end": 2321,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2310,
									"end": 2333,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2338,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2422,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2303,
									"end": 2422,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2341,
									"end": 2420,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2341,
									"end": 2420,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2341,
									"end": 2420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2341,
									"end": 2420,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2341,
									"end": 2420,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2422,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2303,
									"end": 2422,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2462,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2486,
									"end": 2547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2539,
									"end": 2546,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2530,
									"end": 2536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2519,
									"end": 2528,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2515,
									"end": 2537,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2486,
									"end": 2547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2486,
									"end": 2547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2486,
									"end": 2547,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2486,
									"end": 2547,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2547,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2432,
									"end": 2557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2688,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2570,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2657,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2675,
									"end": 2680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2657,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2657,
									"end": 2681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2657,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2657,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2652,
									"end": 2655,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2645,
									"end": 2682,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2916,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2694,
									"end": 2916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2791,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2825,
									"end": 2827,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2814,
									"end": 2823,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2802,
									"end": 2828,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2802,
									"end": 2828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2906,
									"end": 2907,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2904,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2891,
									"end": 2908,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2882,
									"end": 2888,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2838,
									"end": 2909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2838,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2916,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2916,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2916,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 2665,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220feb9aecf6198274f9ffd69897d7a9ada8be6e850639f3a64c457b916d523b2ad64736f6c63430008140033",
									".code": [
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "A91EE0DC"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "E30C3978"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "79BA5097"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "7B103999"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 2665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1877,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1785,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 327,
											"end": 350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 327,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 327,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2323,
											"end": 2662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2323,
											"end": 2662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 873,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 873,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1173,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1173,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1969,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1942,
											"end": 1972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1942,
											"end": 1972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1785,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1886,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1886,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1878,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1878,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1967,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1993,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1967,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 327,
											"end": 350,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1282,
											"end": 1289,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2419,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2400,
											"end": 2438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 2439,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "253BD7B700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2400,
											"end": 2479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2400,
											"end": 2479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2400,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2395,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2555,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "24EA21A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2503,
											"end": 2556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2556,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2395,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2620,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2599,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4803049971913703D2DD43C06110DC7FAD451E4603E9F485CBEEBDDA11263AB0"
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2621,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2632,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 873,
											"end": 974,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 873,
											"end": 974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 953,
											"end": 966,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 953,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 946,
											"end": 966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 946,
											"end": 966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1122,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 1276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1328,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1328,
											"end": 1335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1346,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1457,
											"end": 1525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1700,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1544,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1683,
											"end": 1691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1658,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1658,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1931,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1703,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "6E6577206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1937,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2164,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2159,
											"end": 2162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2100,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2265,
											"end": 2268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2176,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2269,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2176,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2296,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 2303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2728,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2309,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2572,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2590,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2721,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2590,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2728,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2883,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2734,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 3004,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2889,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2991,
											"end": 2996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2974,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2997,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2974,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 3004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 3004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 3004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3228,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3010,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3152,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3221,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3152,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3228,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3324,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3234,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3317,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3318,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3446,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3330,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3415,
											"end": 3420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3400,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3390,
											"end": 3422,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3380,
											"end": 3440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3438,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3380,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3452,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3553,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3583,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3553,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3940,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3595,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3709,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3798,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3679,
											"end": 3798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3717,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3717,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3796,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3717,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3798,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3679,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3915,
											"end": 3922,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3862,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3862,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4128,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3946,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4120,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4500,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4134,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4297,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4364,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4297,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4462,
											"end": 4465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4373,
											"end": 4466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4373,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4925,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4506,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4699,
											"end": 4708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4770,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4787,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4918,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4787,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"base/RegistryManager.sol",
								"interfaces/Registry.sol",
								"ownable/Context.sol",
								"ownable/Ownable.sol",
								"ownable/Ownable2Step.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"registry()": "7b103999",
							"renounceOwnership()": "715018a6",
							"setRegistry(address)": "a91ee0dc",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ContractDoesNotImplementValidInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"listedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flaggedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"moduleType\",\"type\":\"uint8\"}],\"name\":\"ModuleNotPermitted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRegistry\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"RegistryChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"newRegistry\":\"Address of new registry\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegistry(address)\":{\"notice\":\"Allows only owner to update the address of a registry. Emits event RegistryChanged(egistry, newRegistry)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"base/RegistryManager.sol\":\"RegistryManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"base/RegistryManager.sol\":{\"keccak256\":\"0x0a0b390bc06affac3661d6939d6b1bb1be239641b6f0b882dd1d747c548f4f4f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b960f3a8eab7777086bc53494cc70be1f625e6e7a547c1540205b5e98a810a2a\",\"dweb:/ipfs/QmPcD3KZaKqHA3cpcUWCcSZNiggJnj8musiDhaFweXRF9o\"]},\"interfaces/Registry.sol\":{\"keccak256\":\"0x866dde6d6df847f704e0474ceb67b8f006dc9da95317e284e70e8d9378cf8d23\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7b19a60ded218ec719b3df68995121c3d117e620180e18107cac2316a9c29dcb\",\"dweb:/ipfs/QmY6uRhT3S18BtVDSmo8NmiKzAWu6r2MpuGMaByXSQRH4F\"]},\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ownable/Ownable.sol\":{\"keccak256\":\"0x673b1da37f2744f44a9deb6a48a75634f35acb19cca8802ff92df829e381b0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e33fb87c6b3d834d9c884d96f9afb2259b765e1a31cec90bc1808e0a57e98d9\",\"dweb:/ipfs/Qmct4JbYxL1HEDQ6odktWtNUsRC6jxx6eDmbmuSpnVspZs\"]},\"ownable/Ownable2Step.sol\":{\"keccak256\":\"0x2dea0183b9f457f9827b30a5c07797252fe348a52b7bb65b3391c6a3ae9f159a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32647c7ad298438546cdedb9d16827fd1616a19717189cd580c76252c17c2632\",\"dweb:/ipfs/QmXdTR2C8uGedwnaZi81gKRc6rU8fpC4oAmSPLMHSrn96c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 215,
								"contract": "base/RegistryManager.sol:RegistryManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 328,
								"contract": "base/RegistryManager.sol:RegistryManager",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 23,
								"contract": "base/RegistryManager.sol:RegistryManager",
								"label": "registry",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegistry(address)": {
								"notice": "Allows only owner to update the address of a registry. Emits event RegistryChanged(egistry, newRegistry)"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/Registry.sol": {
				"ISafeProtocolRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "module",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "check",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "listedAt",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "flaggedAt",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"check(address,bytes32)": {
								"params": {
									"data": "bytes32 providing more information about the module. The type of this parameter is bytes32 to provide the flexibility to the developers to interpret the value in the registry. For example, it can be moduleType and registry would then check if given address can be used as that type of module.",
									"module": "Address of the module that should be checked"
								},
								"returns": {
									"flaggedAt": "MUST return the block number when the module was listed in the flagged as faulty (or 0 if not flagged)",
									"listedAt": "MUST return the block number when the module was listed in the registry (or 0 if not listed)"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"check(address,bytes32)": "253bd7b7",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"listedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flaggedAt\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check(address,bytes32)\":{\"params\":{\"data\":\"bytes32 providing more information about the module. The type of this parameter is bytes32 to provide the flexibility to the developers to interpret the value in the registry. For example, it can be moduleType and registry would then check if given address can be used as that type of module.\",\"module\":\"Address of the module that should be checked\"},\"returns\":{\"flaggedAt\":\"MUST return the block number when the module was listed in the flagged as faulty (or 0 if not flagged)\",\"listedAt\":\"MUST return the block number when the module was listed in the registry (or 0 if not listed)\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check(address,bytes32)\":{\"notice\":\"This function allows external contracts to check if a module is listed and not flagged as faulty in the registry.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/Registry.sol\":\"ISafeProtocolRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"interfaces/Registry.sol\":{\"keccak256\":\"0x866dde6d6df847f704e0474ceb67b8f006dc9da95317e284e70e8d9378cf8d23\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7b19a60ded218ec719b3df68995121c3d117e620180e18107cac2316a9c29dcb\",\"dweb:/ipfs/QmY6uRhT3S18BtVDSmo8NmiKzAWu6r2MpuGMaByXSQRH4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"check(address,bytes32)": {
								"notice": "This function allows external contracts to check if a module is listed and not flagged as faulty in the registry."
							}
						},
						"version": 1
					}
				}
			},
			"ownable/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownable/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ownable/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownable/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ownable/Ownable.sol\":{\"keccak256\":\"0x673b1da37f2744f44a9deb6a48a75634f35acb19cca8802ff92df829e381b0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e33fb87c6b3d834d9c884d96f9afb2259b765e1a31cec90bc1808e0a57e98d9\",\"dweb:/ipfs/Qmct4JbYxL1HEDQ6odktWtNUsRC6jxx6eDmbmuSpnVspZs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 215,
								"contract": "ownable/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ownable/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownable/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ownable/Ownable.sol\":{\"keccak256\":\"0x673b1da37f2744f44a9deb6a48a75634f35acb19cca8802ff92df829e381b0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e33fb87c6b3d834d9c884d96f9afb2259b765e1a31cec90bc1808e0a57e98d9\",\"dweb:/ipfs/Qmct4JbYxL1HEDQ6odktWtNUsRC6jxx6eDmbmuSpnVspZs\"]},\"ownable/Ownable2Step.sol\":{\"keccak256\":\"0x2dea0183b9f457f9827b30a5c07797252fe348a52b7bb65b3391c6a3ae9f159a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32647c7ad298438546cdedb9d16827fd1616a19717189cd580c76252c17c2632\",\"dweb:/ipfs/QmXdTR2C8uGedwnaZi81gKRc6rU8fpC4oAmSPLMHSrn96c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 215,
								"contract": "ownable/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 328,
								"contract": "ownable/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						]
					},
					"id": 12,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "431:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "817:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "860:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:0"
									},
									"scope": 11,
									"src": "790:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "421:447:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:0"
				},
				"id": 0
			},
			"base/RegistryManager.sol": {
				"ast": {
					"absolutePath": "base/RegistryManager.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						],
						"ISafeProtocolRegistry": [
							185
						],
						"Ownable2Step": [
							403
						],
						"RegistryManager": [
							166
						]
					},
					"id": 167,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:1"
						},
						{
							"absolutePath": "ownable/Ownable2Step.sol",
							"file": "../ownable/Ownable2Step.sol",
							"id": 15,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 404,
							"src": "69:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 14,
										"name": "Ownable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 403,
										"src": "77:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/Registry.sol",
							"file": "../interfaces/Registry.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 186,
							"src": "128:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 16,
										"name": "ISafeProtocolRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 185,
										"src": "136:21:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 19,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 12,
							"src": "195:80:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 18,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 11,
										"src": "203:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 20,
										"name": "Ownable2Step",
										"nameLocations": [
											"307:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "307:12:1"
									},
									"id": 21,
									"nodeType": "InheritanceSpecifier",
									"src": "307:12:1"
								}
							],
							"canonicalName": "RegistryManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166,
								403,
								320,
								207
							],
							"name": "RegistryManager",
							"nameLocation": "288:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7b103999",
									"id": 23,
									"mutability": "mutable",
									"name": "registry",
									"nameLocation": "342:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "327:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4803049971913703d2dd43c06110dc7fad451e4603e9f485cbeebdda11263ab0",
									"id": 29,
									"name": "RegistryChanged",
									"nameLocation": "365:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldRegistry",
												"nameLocation": "397:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "381:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRegistry",
												"nameLocation": "426:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "410:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:58:1"
									},
									"src": "359:80:1"
								},
								{
									"errorSelector": "cad17e69",
									"id": 39,
									"name": "ModuleNotPermitted",
									"nameLocation": "453:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "plugin",
												"nameLocation": "480:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "472:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "listedAt",
												"nameLocation": "495:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "488:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 32,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "flaggedAt",
												"nameLocation": "512:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "505:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 34,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "505:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "moduleType",
												"nameLocation": "529:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "523:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 36,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "523:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:69:1"
									},
									"src": "447:94:1"
								},
								{
									"errorSelector": "24ea21a7",
									"id": 43,
									"name": "ContractDoesNotImplementValidInterfaceId",
									"nameLocation": "553:40:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "602:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "594:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:17:1"
									},
									"src": "547:64:1"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "682:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "714:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 51,
															"name": "moduleType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "722:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 49,
														"name": "checkPermittedModule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "693:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint8) view"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "693:40:1"
											},
											{
												"id": 54,
												"nodeType": "PlaceholderStatement",
												"src": "744:1:1"
											}
										]
									},
									"id": 56,
									"name": "onlyPermittedModule",
									"nameLocation": "628:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "656:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "648:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "moduleType",
												"nameLocation": "670:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "664:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 46,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "664:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:34:1"
									},
									"src": "619:134:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1229:261:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1259:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 63,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															380
														],
														"referencedDeclaration": 380,
														"src": "1240:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1240:32:1"
											},
											{
												"condition": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1287:78:1",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 72,
																			"name": "ISafeProtocolRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "1330:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$185_$",
																				"typeString": "type(contract ISafeProtocolRegistry)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$185_$",
																				"typeString": "type(contract ISafeProtocolRegistry)"
																			}
																		],
																		"id": 71,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1325:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1325:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolRegistry_$185",
																		"typeString": "type(contract ISafeProtocolRegistry)"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1353:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1325:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 68,
																		"name": "_registry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1296:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1288:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1288:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$11",
																	"typeString": "contract IERC165"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1307:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1288:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view external returns (bool)"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1288:77:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1283:169:1",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1367:85:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 78,
																		"name": "_registry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1430:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 77,
																	"name": "ContractDoesNotImplementValidInterfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "1389:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1389:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1382:58:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 83,
														"name": "registry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1462:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 84,
														"name": "_registry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1473:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1462:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1462:20:1"
											}
										]
									},
									"id": 88,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "1196:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1188:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1215:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1207:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:41:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:1"
									},
									"scope": 166,
									"src": "1176:314:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1795:330:1",
										"statements": [
											{
												"assignments": [
													97,
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "listedAt",
														"nameLocation": "1872:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1865:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 96,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1865:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "flaggedAt",
														"nameLocation": "1889:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1882:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 98,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1882:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [
														{
															"id": 104,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1940:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 109,
																			"name": "moduleType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1964:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1956:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 107,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1956:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1956:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1948:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 105,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1948:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1948:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 101,
																	"name": "registry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1924:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 100,
																"name": "ISafeProtocolRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "1902:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$185_$",
																	"typeString": "type(contract ISafeProtocolRegistry)"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1902:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISafeProtocolRegistry_$185",
																"typeString": "contract ISafeProtocolRegistry"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1934:5:1",
														"memberName": "check",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "1902:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_uint64_$_t_uint64_$",
															"typeString": "function (address,bytes32) view external returns (uint64,uint64)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$",
														"typeString": "tuple(uint64,uint64)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1864:113:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 114,
															"name": "listedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1992:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2004:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1992:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 117,
															"name": "flaggedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "2009:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2022:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2009:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1992:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "1988:130:1",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "2025:93:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 122,
																		"name": "module",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "2066:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 123,
																		"name": "listedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2074:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"id": 124,
																		"name": "flaggedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "2084:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"id": 125,
																		"name": "moduleType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "2095:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 121,
																	"name": "ModuleNotPermitted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "2047:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint64_$_t_uint64_$_t_uint8_$returns$__$",
																		"typeString": "function (address,uint64,uint64,uint8) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:59:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "2040:66:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1498:213:1",
										"text": " @notice Checks if given module address is listed and not flagged in the registry.\n         Reverts if given address is not-listed or flagged.\n @param module Address of the module"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPermittedModule",
									"nameLocation": "1726:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "1755:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "moduleType",
												"nameLocation": "1769:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1763:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 92,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1763:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:34:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:0:1"
									},
									"scope": 166,
									"src": "1717:408:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2384:278:1",
										"statements": [
											{
												"condition": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2399:80:1",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 144,
																			"name": "ISafeProtocolRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "2444:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$185_$",
																				"typeString": "type(contract ISafeProtocolRegistry)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_ISafeProtocolRegistry_$185_$",
																				"typeString": "type(contract ISafeProtocolRegistry)"
																			}
																		],
																		"id": 143,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2439:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2439:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolRegistry_$185",
																		"typeString": "type(contract ISafeProtocolRegistry)"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2467:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2439:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 140,
																		"name": "newRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "2408:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2400:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2400:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$11",
																	"typeString": "contract IERC165"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2421:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "2400:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view external returns (bool)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2400:79:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 154,
												"nodeType": "IfStatement",
												"src": "2395:173:1",
												"trueBody": {
													"id": 153,
													"nodeType": "Block",
													"src": "2481:87:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 150,
																		"name": "newRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "2544:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 149,
																	"name": "ContractDoesNotImplementValidInterfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "2503:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2503:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 152,
															"nodeType": "RevertStatement",
															"src": "2496:60:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 156,
															"name": "registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2599:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "newRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2609:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "RegistryChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2583:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2583:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "EmitStatement",
												"src": "2578:43:1"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "registry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2632:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "newRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2643:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2632:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2632:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2133:184:1",
										"text": " @notice Allows only owner to update the address of a registry. Emits event RegistryChanged(egistry, newRegistry)\n @param newRegistry Address of new registry"
									},
									"functionSelector": "a91ee0dc",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "2374:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:1"
										}
									],
									"name": "setRegistry",
									"nameLocation": "2332:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "newRegistry",
												"nameLocation": "2352:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2344:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:21:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:1"
									},
									"scope": 166,
									"src": "2323:339:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 167,
							"src": "279:2386:1",
							"usedErrors": [
								39,
								43
							],
							"usedEvents": [
								29,
								221,
								334
							]
						}
					],
					"src": "43:2624:1"
				},
				"id": 1
			},
			"interfaces/Registry.sol": {
				"ast": {
					"absolutePath": "interfaces/Registry.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						],
						"ISafeProtocolRegistry": [
							185
						]
					},
					"id": 186,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 12,
							"src": "69:80:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 11,
										"src": "77:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 171,
										"name": "IERC165",
										"nameLocations": [
											"188:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "188:7:2"
									},
									"id": 172,
									"nodeType": "InheritanceSpecifier",
									"src": "188:7:2"
								}
							],
							"canonicalName": "ISafeProtocolRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 185,
							"linearizedBaseContracts": [
								185,
								11
							],
							"name": "ISafeProtocolRegistry",
							"nameLocation": "163:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "203:769:2",
										"text": " @notice This function allows external contracts to check if a module is listed and not flagged as faulty in the registry.\n @param module Address of the module that should be checked\n @param data bytes32 providing more information about the module. The type of this parameter is bytes32 to provide the flexibility to the developers to interpret the value in the registry. For example, it can be moduleType and registry would then check if given address can be used as that type of module.\n @return listedAt MUST return the block number when the module was listed in the registry (or 0 if not listed)\n @return flaggedAt MUST return the block number when the module was listed in the flagged as faulty (or 0 if not flagged)"
									},
									"functionSelector": "253bd7b7",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nameLocation": "987:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "1001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1017:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:30:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "listedAt",
												"nameLocation": "1053:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1046:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 179,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1046:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "flaggedAt",
												"nameLocation": "1070:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1063:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 181,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1063:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:35:2"
									},
									"scope": 185,
									"src": "978:103:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 186,
							"src": "153:931:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "43:1043:2"
				},
				"id": 2
			},
			"ownable/Context.sol": {
				"ast": {
					"absolutePath": "ownable/Context.sol",
					"exportedSymbols": {
						"Context": [
							207
						]
					},
					"id": 208,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 188,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 207,
							"linearizedBaseContracts": [
								207
							],
							"name": "Context",
							"nameLocation": "641:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "718:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 193,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 192,
												"id": 195,
												"nodeType": "Return",
												"src": "729:17:3"
											}
										]
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 207,
									"src": "656:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "829:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 202,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 201,
												"id": 204,
												"nodeType": "Return",
												"src": "840:15:3"
											}
										]
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:3"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "813:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:3"
									},
									"scope": 207,
									"src": "762:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 208,
							"src": "623:243:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "89:779:3"
				},
				"id": 3
			},
			"ownable/Ownable.sol": {
				"ast": {
					"absolutePath": "ownable/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							207
						],
						"Ownable": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "ownable/Context.sol",
							"file": "./Context.sol",
							"id": 210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 321,
							"sourceUnit": 208,
							"src": "132:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 212,
										"name": "Context",
										"nameLocations": [
											"695:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 207,
										"src": "695:7:4"
									},
									"id": 213,
									"nodeType": "InheritanceSpecifier",
									"src": "695:7:4"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "159:505:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320,
								207
							],
							"name": "Ownable",
							"nameLocation": "684:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "726:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "710:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 214,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 221,
									"name": "OwnershipTransferred",
									"nameLocation": "747:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "784:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "768:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "815:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "799:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:57:4"
									},
									"src": "741:84:4"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "946:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 226,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "976:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "976:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "957:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "957:32:4"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "833:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 231,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:2:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:4"
									},
									"scope": 320,
									"src": "932:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1111:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 234,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1122:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1122:13:4"
											},
											{
												"id": 237,
												"nodeType": "PlaceholderStatement",
												"src": "1146:1:4"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1005:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 239,
									"name": "onlyOwner",
									"nameLocation": "1099:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:4"
									},
									"src": "1090:65:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "1291:32:4",
										"statements": [
											{
												"expression": {
													"id": 245,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "1309:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 244,
												"id": 246,
												"nodeType": "Return",
												"src": "1302:13:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1163:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1245:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:2:4"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1282:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:9:4"
									},
									"scope": 320,
									"src": "1236:87:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1446:87:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 253,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1465:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1465:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 255,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "1476:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1476:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1465:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1457:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1457:68:4"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1331:64:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1410:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:2:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:4"
									},
									"scope": 320,
									"src": "1401:132:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "1931:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1969:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1961:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1961:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1961:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 268,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1942:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "1942:30:4"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1541:330:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 265,
												"name": "onlyOwner",
												"nameLocations": [
													"1921:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "1921:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1921:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1886:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:4"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:4"
									},
									"scope": 320,
									"src": "1877:103:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2205:131:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 285,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "2224:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2244:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2236:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2236:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2236:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2224:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2216:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2216:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "2319:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 294,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2300:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "2300:28:4"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "1988:141:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 282,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 281,
												"name": "onlyOwner",
												"nameLocations": [
													"2195:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "2195:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2195:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2144:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2170:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2162:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:18:4"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:0:4"
									},
									"scope": 320,
									"src": "2135:201:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2559:128:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2578:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "2570:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2570:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"id": 307,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2589:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:25:4"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 309,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2606:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 310,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2615:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2606:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2606:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 314,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "2660:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 315,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "2670:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "2639:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "EmitStatement",
												"src": "2634:45:4"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "2344:146:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2505:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2532:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2524:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:18:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:0:4"
									},
									"scope": 320,
									"src": "2496:191:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "666:2024:4",
							"usedErrors": [],
							"usedEvents": [
								221
							]
						}
					],
					"src": "105:2587:4"
				},
				"id": 4
			},
			"ownable/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "ownable/Ownable2Step.sol",
					"exportedSymbols": {
						"Context": [
							207
						],
						"Ownable": [
							320
						],
						"Ownable2Step": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "ownable/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 321,
							"src": "137:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 325,
										"name": "Ownable",
										"nameLocations": [
											"651:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "651:7:5"
									},
									"id": 326,
									"nodeType": "InheritanceSpecifier",
									"src": "651:7:5"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 324,
								"nodeType": "StructuredDocumentation",
								"src": "164:451:5",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403,
								320,
								207
							],
							"name": "Ownable2Step",
							"nameLocation": "635:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 328,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "682:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 403,
									"src": "666:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 327,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 334,
									"name": "OwnershipTransferStarted",
									"nameLocation": "710:24:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "751:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "735:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "782:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "766:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:57:5"
									},
									"src": "704:88:5"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "935:39:5",
										"statements": [
											{
												"expression": {
													"id": 340,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "953:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 339,
												"id": 341,
												"nodeType": "Return",
												"src": "946:20:5"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "800:67:5",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "882:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:2:5"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 403,
									"src": "873:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										299
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1252:102:5",
										"statements": [
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1263:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 353,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1279:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1263:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1263:24:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 357,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "1328:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "1337:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1303:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1303:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "EmitStatement",
												"src": "1298:48:5"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "982:185:5",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 349,
												"name": "onlyOwner",
												"nameLocations": [
													"1242:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "1242:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1242:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1182:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 348,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1233:8:5"
									},
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1208:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1200:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:18:5"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:5"
									},
									"scope": 403,
									"src": "1173:181:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										319
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1616:84:5",
										"statements": [
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1627:20:5",
													"subExpression": {
														"id": 370,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1634:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1627:20:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1683:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 373,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1658:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$403_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1664:18:5",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "1658:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "1658:34:5"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1362:176:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1553:18:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 368,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1607:8:5"
									},
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1580:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1572:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:18:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:5"
									},
									"scope": 403,
									"src": "1544:156:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "1827:174:5",
										"statements": [
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1846:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "1838:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 384,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1838:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 386,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1855:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1855:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1838:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 390,
																	"name": "pendingOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "1886:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1886:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 392,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "1904:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1886:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																"typeString": "literal_string \"Ownable2Step: caller is not the new owner\""
															},
															"value": "Ownable2Step: caller is not the new owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																"typeString": "literal_string \"Ownable2Step: caller is not the new owner\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1878:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "1878:78:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "1986:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															380
														],
														"referencedDeclaration": 380,
														"src": "1967:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "1967:26:5"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1708:71:5",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1794:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:2:5"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:5"
									},
									"scope": 403,
									"src": "1785:216:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 404,
							"src": "617:1387:5",
							"usedErrors": [],
							"usedEvents": [
								221,
								334
							]
						}
					],
					"src": "110:1896:5"
				},
				"id": 5
			}
		}
	}
}